"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.myersBriggs = exports.thumbnail = exports.depicts = exports.depiction = exports.img = exports.maker = exports.made = exports.plan = exports.tipjar = exports.openid = exports.weblog = exports.homepage = exports.phone = exports.familyName = exports.family_name = exports.surname = exports.givenname = exports.givenName = exports.lastName = exports.firstName = exports.name = exports.msnChatID = exports.yahooChatID = exports.icqChatID = exports.skypeID = exports.aimChatID = exports.jabberID = exports.nick = exports.title = exports.based_near = exports.sha1 = exports.dnaChecksum = exports.geekcode = exports.gender = exports.mbox_sha1sum = exports.mbox = exports.OnlineChatAccount = exports.OnlineEcommerceAccount = exports.OnlineGamingAccount = exports.OnlineAccount = exports.PersonalProfileDocument = exports.Image = exports.Project = exports.Group = exports.Organization = exports.Document = exports.Agent = exports.Person = exports.LabelProperty = exports.ns = void 0;
exports.status = exports.age = exports.birthday = exports.membershipClass = exports.member = exports.accountName = exports.accountServiceHomepage = exports.holdsAccount = exports.account = exports.theme = exports.page = exports.isPrimaryTopicOf = exports.focus = exports.primaryTopic = exports.topic = exports.logo = exports.fundedBy = exports.pastProject = exports.currentProject = exports.publications = exports.topic_interest = exports.interest = exports.knows = exports.schoolHomepage = exports.workInfoHomepage = exports.workplaceHomepage = void 0;
var core_1 = require("@ontologies/core");
/** Function to create arbitrary terms within the 'Friend of a Friend (FOAF) vocabulary' ontology */
exports.ns = (0, core_1.createNS)("http://xmlns.com/foaf/0.1/");
/* Classes */
/** A foaf:LabelProperty is any RDF property with texual values that serve as labels. */
exports.LabelProperty = (0, exports.ns)("LabelProperty");
/** A person. */
exports.Person = (0, exports.ns)("Person");
/** An agent (eg. person, group, software or physical artifact). */
exports.Agent = (0, exports.ns)("Agent");
/** A document. */
exports.Document = (0, exports.ns)("Document");
/** An organization. */
exports.Organization = (0, exports.ns)("Organization");
/** A class of Agents. */
exports.Group = (0, exports.ns)("Group");
/** A project (a collective endeavour of some kind). */
exports.Project = (0, exports.ns)("Project");
/** An image. */
exports.Image = (0, exports.ns)("Image");
/** A personal profile RDF document. */
exports.PersonalProfileDocument = (0, exports.ns)("PersonalProfileDocument");
/** An online account. */
exports.OnlineAccount = (0, exports.ns)("OnlineAccount");
/** An online gaming account. */
exports.OnlineGamingAccount = (0, exports.ns)("OnlineGamingAccount");
/** An online e-commerce account. */
exports.OnlineEcommerceAccount = (0, exports.ns)("OnlineEcommerceAccount");
/** An online chat account. */
exports.OnlineChatAccount = (0, exports.ns)("OnlineChatAccount");
/* Properties */
/** A
personal mailbox, ie. an Internet mailbox associated with exactly one owner, the first owner of this mailbox. This is a 'static inverse functional property', in that  there is (across time and change) at most one individual that ever has any particular value for foaf:mbox. */
exports.mbox = (0, exports.ns)("mbox");
/** The sha1sum of the URI of an Internet mailbox associated with exactly one owner, the  first owner of the mailbox. */
exports.mbox_sha1sum = (0, exports.ns)("mbox_sha1sum");
/** The gender of this Agent (typically but not necessarily 'male' or 'female'). */
exports.gender = (0, exports.ns)("gender");
/** A textual geekcode for this person, see http://www.geekcode.com/geek.html */
exports.geekcode = (0, exports.ns)("geekcode");
/** A checksum for the DNA of some thing. Joke. */
exports.dnaChecksum = (0, exports.ns)("dnaChecksum");
/** A sha1sum hash, in hex. */
exports.sha1 = (0, exports.ns)("sha1");
/** A location that something is based near, for some broadly human notion of near. */
exports.based_near = (0, exports.ns)("based_near");
/** Title (Mr, Mrs, Ms, Dr. etc) */
exports.title = (0, exports.ns)("title");
/** A short informal nickname characterising an agent (includes login identifiers, IRC and other chat nicknames). */
exports.nick = (0, exports.ns)("nick");
/** A jabber ID for something. */
exports.jabberID = (0, exports.ns)("jabberID");
/** An AIM chat ID */
exports.aimChatID = (0, exports.ns)("aimChatID");
/** A Skype ID */
exports.skypeID = (0, exports.ns)("skypeID");
/** An ICQ chat ID */
exports.icqChatID = (0, exports.ns)("icqChatID");
/** A Yahoo chat ID */
exports.yahooChatID = (0, exports.ns)("yahooChatID");
/** An MSN chat ID */
exports.msnChatID = (0, exports.ns)("msnChatID");
/** A name for some thing. */
exports.name = (0, exports.ns)("name");
/** The first name of a person. */
exports.firstName = (0, exports.ns)("firstName");
/** The last name of a person. */
exports.lastName = (0, exports.ns)("lastName");
/** The given name of some person. */
exports.givenName = (0, exports.ns)("givenName");
/** The given name of some person. */
exports.givenname = (0, exports.ns)("givenname");
/** The surname of some person. */
exports.surname = (0, exports.ns)("surname");
/** The family name of some person. */
exports.family_name = (0, exports.ns)("family_name");
/** The family name of some person. */
exports.familyName = (0, exports.ns)("familyName");
/** A phone,  specified using fully qualified tel: URI scheme (refs: http://www.w3.org/Addressing/schemes.html#tel). */
exports.phone = (0, exports.ns)("phone");
/** A homepage for some thing. */
exports.homepage = (0, exports.ns)("homepage");
/** A weblog of some thing (whether person, group, company etc.). */
exports.weblog = (0, exports.ns)("weblog");
/** An OpenID for an Agent. */
exports.openid = (0, exports.ns)("openid");
/** A tipjar document for this agent, describing means for payment and reward. */
exports.tipjar = (0, exports.ns)("tipjar");
/** A .plan comment, in the tradition of finger and '.plan' files. */
exports.plan = (0, exports.ns)("plan");
/** Something that was made by this agent. */
exports.made = (0, exports.ns)("made");
/** An agent that
made this thing. */
exports.maker = (0, exports.ns)("maker");
/** An image that can be used to represent some thing (ie. those depictions which are particularly representative of something, eg. one's photo on a homepage). */
exports.img = (0, exports.ns)("img");
/** A depiction of some thing. */
exports.depiction = (0, exports.ns)("depiction");
/** A thing depicted in this representation. */
exports.depicts = (0, exports.ns)("depicts");
/** A derived thumbnail image. */
exports.thumbnail = (0, exports.ns)("thumbnail");
/** A Myers Briggs (MBTI) personality classification. */
exports.myersBriggs = (0, exports.ns)("myersBriggs");
/** A workplace homepage of some person; the homepage of an organization they work for. */
exports.workplaceHomepage = (0, exports.ns)("workplaceHomepage");
/** A work info homepage of some person; a page about their work for some organization. */
exports.workInfoHomepage = (0, exports.ns)("workInfoHomepage");
/** A homepage of a school attended by the person. */
exports.schoolHomepage = (0, exports.ns)("schoolHomepage");
/** A person known by this person (indicating some level of reciprocated interaction between the parties). */
exports.knows = (0, exports.ns)("knows");
/** A page about a topic of interest to this person. */
exports.interest = (0, exports.ns)("interest");
/** A thing of interest to this person. */
exports.topic_interest = (0, exports.ns)("topic_interest");
/** A link to the publications of this person. */
exports.publications = (0, exports.ns)("publications");
/** A current project this person works on. */
exports.currentProject = (0, exports.ns)("currentProject");
/** A project this person has previously worked on. */
exports.pastProject = (0, exports.ns)("pastProject");
/** An organization funding a project or person. */
exports.fundedBy = (0, exports.ns)("fundedBy");
/** A logo representing some thing. */
exports.logo = (0, exports.ns)("logo");
/** A topic of some page or document. */
exports.topic = (0, exports.ns)("topic");
/** The primary topic of some page or document. */
exports.primaryTopic = (0, exports.ns)("primaryTopic");
/** The underlying or 'focal' entity associated with some SKOS-described concept. */
exports.focus = (0, exports.ns)("focus");
/** A document that this thing is the primary topic of. */
exports.isPrimaryTopicOf = (0, exports.ns)("isPrimaryTopicOf");
/** A page or document about this thing. */
exports.page = (0, exports.ns)("page");
/** A theme. */
exports.theme = (0, exports.ns)("theme");
/** Indicates an account held by this agent. */
exports.account = (0, exports.ns)("account");
/** Indicates an account held by this agent. */
exports.holdsAccount = (0, exports.ns)("holdsAccount");
/** Indicates a homepage of the service provide for this online account. */
exports.accountServiceHomepage = (0, exports.ns)("accountServiceHomepage");
/** Indicates the name (identifier) associated with this online account. */
exports.accountName = (0, exports.ns)("accountName");
/** Indicates a member of a Group */
exports.member = (0, exports.ns)("member");
/** Indicates the class of individuals that are a member of a Group */
exports.membershipClass = (0, exports.ns)("membershipClass");
/** The birthday of this Agent, represented in mm-dd string form, eg. '12-31'. */
exports.birthday = (0, exports.ns)("birthday");
/** The age in years of some agent. */
exports.age = (0, exports.ns)("age");
/** A string expressing what the user is happy for the general public (normally) to know about their current activity. */
exports.status = (0, exports.ns)("status");
/* Other terms */
