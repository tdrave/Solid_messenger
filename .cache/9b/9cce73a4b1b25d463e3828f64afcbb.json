{"id":"node_modules/@inrupt/solid-client-authn-core/dist/authenticatedFetch/dpopUtils.js","dependencies":[{"name":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-core/dist/authenticatedFetch/dpopUtils.js.map","includedInParent":true,"mtime":1652099631129},{"name":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-core/src/authenticatedFetch/dpopUtils.ts","includedInParent":true,"mtime":1652099631186},{"name":"/Users/tdrave/demo-solid-app/package.json","includedInParent":true,"mtime":1652099771977},{"name":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-core/package.json","includedInParent":true,"mtime":1652099631124},{"name":"jose","loc":{"line":4,"column":23,"index":165},"parent":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-core/dist/authenticatedFetch/dpopUtils.js","resolved":"/Users/tdrave/demo-solid-app/node_modules/jose/dist/browser/index.js"},{"name":"uuid","loc":{"line":5,"column":23,"index":197},"parent":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-core/dist/authenticatedFetch/dpopUtils.js","resolved":"/Users/tdrave/demo-solid-app/node_modules/uuid/dist/esm-browser/index.js"},{"name":"../constant","loc":{"line":6,"column":27,"index":233},"parent":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-core/dist/authenticatedFetch/dpopUtils.js","resolved":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-core/dist/constant.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateDpopKeyPair = exports.createDpopHeader = void 0;\nconst jose_1 = require(\"jose\");\nconst uuid_1 = require(\"uuid\");\nconst constant_1 = require(\"../constant\");\nfunction normalizeHTU(audience) {\n    const audienceUrl = new URL(audience);\n    return new URL(audienceUrl.pathname, audienceUrl.origin).toString();\n}\nasync function createDpopHeader(audience, method, dpopKey) {\n    return new jose_1.SignJWT({\n        htu: normalizeHTU(audience),\n        htm: method.toUpperCase(),\n        jti: (0, uuid_1.v4)(),\n    })\n        .setProtectedHeader({\n        alg: constant_1.PREFERRED_SIGNING_ALG[0],\n        jwk: dpopKey.publicKey,\n        typ: \"dpop+jwt\",\n    })\n        .setIssuedAt()\n        .sign(dpopKey.privateKey, {});\n}\nexports.createDpopHeader = createDpopHeader;\nasync function generateDpopKeyPair() {\n    const { privateKey, publicKey } = await (0, jose_1.generateKeyPair)(constant_1.PREFERRED_SIGNING_ALG[0]);\n    const dpopKeyPair = {\n        privateKey,\n        publicKey: await (0, jose_1.exportJWK)(publicKey),\n    };\n    [dpopKeyPair.publicKey.alg] = constant_1.PREFERRED_SIGNING_ALG;\n    return dpopKeyPair;\n}\nexports.generateDpopKeyPair = generateDpopKeyPair;\n"},"sourceMaps":{"js":{"version":3,"file":"dpopUtils.js","sourceRoot":"","sources":["../../src/authenticatedFetch/dpopUtils.ts"],"names":[],"mappings":";;;AAqBA,+BAAyE;AACzE,+BAA0B;AAC1B,0CAAoD;AASpD,SAAS,YAAY,CAAC,QAAgB;IACpC,MAAM,WAAW,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC;IACtC,OAAO,IAAI,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;AACtE,CAAC;AAgBM,KAAK,UAAU,gBAAgB,CACpC,QAAgB,EAChB,MAAc,EACd,OAAgB;IAEhB,OAAO,IAAI,cAAO,CAAC;QACjB,GAAG,EAAE,YAAY,CAAC,QAAQ,CAAC;QAC3B,GAAG,EAAE,MAAM,CAAC,WAAW,EAAE;QACzB,GAAG,EAAE,IAAA,SAAE,GAAE;KACV,CAAC;SACC,kBAAkB,CAAC;QAClB,GAAG,EAAE,gCAAqB,CAAC,CAAC,CAAC;QAC7B,GAAG,EAAE,OAAO,CAAC,SAAS;QACtB,GAAG,EAAE,UAAU;KAChB,CAAC;SACD,WAAW,EAAE;SACb,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;AAClC,CAAC;AAjBD,4CAiBC;AAEM,KAAK,UAAU,mBAAmB;IACvC,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,MAAM,IAAA,sBAAe,EACrD,gCAAqB,CAAC,CAAC,CAAC,CACzB,CAAC;IACF,MAAM,WAAW,GAAG;QAClB,UAAU;QACV,SAAS,EAAE,MAAM,IAAA,gBAAS,EAAC,SAAS,CAAC;KACtC,CAAC;IAEF,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,gCAAqB,CAAC;IACpD,OAAO,WAAW,CAAC;AACrB,CAAC;AAXD,kDAWC","sourcesContent":["/*\n * Copyright 2022 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { JWK, KeyLike, SignJWT, generateKeyPair, exportJWK } from \"jose\";\nimport { v4 } from \"uuid\";\nimport { PREFERRED_SIGNING_ALG } from \"../constant\";\n\n/**\n * Normalizes a URL in order to generate the DPoP token based on a consistent scheme.\n *\n * @param audience The URL to normalize.\n * @returns The normalized URL as a string.\n * @hidden\n */\nfunction normalizeHTU(audience: string): string {\n  const audienceUrl = new URL(audience);\n  return new URL(audienceUrl.pathname, audienceUrl.origin).toString();\n}\n\nexport type KeyPair = {\n  privateKey: KeyLike;\n  publicKey: JWK;\n};\n\n/**\n * Creates a DPoP header according to https://tools.ietf.org/html/draft-fett-oauth-dpop-04,\n * based on the target URL and method, using the provided key.\n *\n * @param audience Target URL.\n * @param method HTTP method allowed.\n * @param key Key used to sign the token.\n * @returns A JWT that can be used as a DPoP Authorization header.\n */\nexport async function createDpopHeader(\n  audience: string,\n  method: string,\n  dpopKey: KeyPair\n): Promise<string> {\n  return new SignJWT({\n    htu: normalizeHTU(audience),\n    htm: method.toUpperCase(),\n    jti: v4(),\n  })\n    .setProtectedHeader({\n      alg: PREFERRED_SIGNING_ALG[0],\n      jwk: dpopKey.publicKey,\n      typ: \"dpop+jwt\",\n    })\n    .setIssuedAt()\n    .sign(dpopKey.privateKey, {});\n}\n\nexport async function generateDpopKeyPair(): Promise<KeyPair> {\n  const { privateKey, publicKey } = await generateKeyPair(\n    PREFERRED_SIGNING_ALG[0]\n  );\n  const dpopKeyPair = {\n    privateKey,\n    publicKey: await exportJWK(publicKey),\n  };\n  // The alg property isn't set by exportJWK, so set it manually.\n  [dpopKeyPair.publicKey.alg] = PREFERRED_SIGNING_ALG;\n  return dpopKeyPair;\n}\n"]}},"error":null,"hash":"dd1245c4cb969edffc4a53d9b463c487","cacheData":{"env":{}}}