{"version":3,"file":"index.js","sources":["../dist-src/types.js","../dist-src/PlainFactory.js","../dist-src/utilities.js","../dist-src/index.js"],"sourcesContent":["export var TermType;\n(function (TermType) {\n    TermType[\"NamedNode\"] = \"NamedNode\";\n    TermType[\"BlankNode\"] = \"BlankNode\";\n    TermType[\"Literal\"] = \"Literal\";\n})(TermType || (TermType = {}));\nexport var QuadPosition;\n(function (QuadPosition) {\n    QuadPosition[QuadPosition[\"subject\"] = 0] = \"subject\";\n    QuadPosition[QuadPosition[\"predicate\"] = 1] = \"predicate\";\n    QuadPosition[QuadPosition[\"object\"] = 2] = \"object\";\n    QuadPosition[QuadPosition[\"graph\"] = 3] = \"graph\";\n})(QuadPosition || (QuadPosition = {}));\nexport var Feature;\n(function (Feature) {\n    /** Whether the factory supports termType:Collection terms */\n    Feature[\"collections\"] = \"COLLECTIONS\";\n    /** Whether the factory supports termType:DefaultGraph terms */\n    Feature[\"defaultGraphType\"] = \"DEFAULT_GRAPH_TYPE\";\n    /** Whether the factory supports equals on produced instances */\n    Feature[\"equalsMethod\"] = \"EQUALS_METHOD\";\n    /** Whether the factory can create a unique idempotent identifier for the given term. */\n    Feature[\"id\"] = \"ID\";\n    /** Whether the factory stores its unique idempotent identifier for the given term on the instance with the `id` property (implies Feature.id). */\n    Feature[\"idStamp\"] = \"ID_STAMP\";\n    /** Whether the factory will return the same instance for subsequent calls (implies implies Feature.id and `===`). */\n    Feature[\"identity\"] = \"IDENTITY\";\n    /** Whether the factory supports mapping ids back to instances (should adhere to the identity setting) */\n    Feature[\"reversibleId\"] = \"REVERSIBLE_ID\";\n    /** Whether the factory supports termType:Variable terms */\n    Feature[\"variableType\"] = \"VARIABLE_TYPE\";\n})(Feature || (Feature = {}));\n","import { Feature, QuadPosition, TermType, } from \"./types\";\nconst datatypes = {\n    boolean: \"http://www.w3.org/2001/XMLSchema#boolean\",\n    dateTime: \"http://www.w3.org/2001/XMLSchema#dateTime\",\n    double: \"http://www.w3.org/2001/XMLSchema#double\",\n    decimal: \"http://www.w3.org/2001/XMLSchema#decimal\",\n    integer: \"http://www.w3.org/2001/XMLSchema#integer\",\n    langString: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\",\n    string: \"http://www.w3.org/2001/XMLSchema#string\",\n};\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return a === b;\n    }\n    if (Array.isArray(a) || Array.isArray(b)) {\n        if (!(Array.isArray(a) && Array.isArray(b))) {\n            return false;\n        }\n        return equals(a[0], b[0])\n            && equals(a[1], b[1])\n            && equals(a[2], b[2])\n            && equals(a[3], b[3]);\n    }\n    if (PlainFactory.isQuad(a) || PlainFactory.isQuad(b)) {\n        if (!PlainFactory.isQuad(a) || !PlainFactory.isQuad(b)) {\n            return false;\n        }\n        return equals(a.subject, b.subject)\n            && equals(a.predicate, b.predicate)\n            && equals(a.object, b.object)\n            && equals(a.graph, b.graph);\n    }\n    switch (a.termType) {\n        case 'Literal': {\n            return a.termType === b.termType\n                && a.value === b.value\n                && b.datatype === b.datatype\n                && b.language === b.language;\n        }\n        default:\n            if (!a.termType || !b.termType) {\n                return false;\n            }\n            return a.termType === b.termType\n                && a.value === b.value;\n    }\n}\nconst RDFBase = {\n    equals(other) {\n        return equals(this, other);\n    },\n    /* rdflib compat */\n    toCanonical() {\n        return this;\n    },\n};\n/**\n * Plain JS/functional implementation of the RDF/JS: Data model specification, limited to a strict\n * rdf subset (no Variable, no Literal as predicate, etc.).\n */\nexport class PlainFactory {\n    constructor(opts = {}) {\n        this.bnIndex = opts.bnIndex || 0;\n        this.supports = opts.supports || {\n            [Feature.collections]: false,\n            [Feature.defaultGraphType]: false,\n            [Feature.equalsMethod]: false,\n            [Feature.id]: true,\n            [Feature.idStamp]: false,\n            [Feature.identity]: false,\n            [Feature.reversibleId]: true,\n            [Feature.variableType]: false,\n        };\n    }\n    /**\n     * Checks if the object {obj} is a Quad.\n     */\n    static isQuad(obj) {\n        if (Array.isArray(obj) || typeof obj !== \"object\" || obj === null) {\n            return false;\n        }\n        return !!(\"subject\" in obj\n            && \"predicate\" in obj\n            && \"object\" in obj);\n    }\n    namedNode(value) {\n        const term = Object.create(RDFBase);\n        term.termType = TermType.NamedNode;\n        term.value = value;\n        return term;\n    }\n    blankNode(value) {\n        const term = Object.create(RDFBase);\n        term.termType = TermType.BlankNode;\n        term.value = value || `b${++this.bnIndex}`;\n        return term;\n    }\n    literal(value, languageOrDatatype) {\n        if (typeof value !== \"string\") {\n            return this.parseLiteral(value);\n        }\n        const term = Object.create(RDFBase);\n        term.termType = TermType.Literal;\n        // Perf: Always set all properties to prevent the creation of unnecessary HiddenClass objects.\n        term.language = typeof languageOrDatatype === \"string\" ? languageOrDatatype : undefined;\n        term.datatype = typeof languageOrDatatype === \"string\"\n            ? this.namedNode(datatypes.langString)\n            : languageOrDatatype || this.namedNode(datatypes.string);\n        term.value = value;\n        return term;\n    }\n    defaultGraph() {\n        return this.namedNode(\"rdf:defaultGraph\");\n    }\n    /**\n     * Create an RDF statement in object form.\n     * @param subject The subject of the statement\n     * @param predicate The predicate of the statement\n     * @param object The object of the statement\n     * @param graph The graph of the statement\n     */\n    quad(subject, predicate, object, graph) {\n        return {\n            subject,\n            predicate,\n            object,\n            graph: graph || this.defaultGraph()\n        };\n    }\n    isQuad(obj) {\n        return PlainFactory.isQuad(obj);\n    }\n    /**\n     * * Returns an RDF statement in array form.\n     * @param subject The subject of the statement\n     * @param predicate The predicate of the statement\n     * @param object The object of the statement\n     * @param graph The graph of the statement\n     */\n    quadruple(subject, predicate, object, graph) {\n        return [\n            subject,\n            predicate,\n            object,\n            graph || this.defaultGraph(),\n        ];\n    }\n    fromTerm(original) {\n        if (original.termType === \"Literal\") {\n            return this.literal(original.value, original.language || original.datatype);\n        }\n        return {\n            termType: original.termType,\n            value: original.value,\n        };\n    }\n    fromQuad(original) {\n        return {\n            subject: original.subject,\n            predicate: original.predicate,\n            object: original.object,\n            graph: original.graph || this.defaultGraph(),\n        };\n    }\n    fromQdr(original) {\n        return {\n            subject: original[0],\n            predicate: original[1],\n            object: original[2],\n            graph: original[3] || this.defaultGraph(),\n        };\n    }\n    qdrFromQuad(original) {\n        return [\n            original.subject,\n            original.predicate,\n            original.object,\n            original.graph || this.defaultGraph(),\n        ];\n    }\n    qdrFromQdr(original) {\n        return [\n            original[0],\n            original[1],\n            original[2],\n            original[3] || this.defaultGraph(),\n        ];\n    }\n    /**\n     * Compare if two RDF objects are the same.\n     *\n     * Should work with non-standard rdf libraries as well (e.g. supporting Variable and Collection).\n     */\n    equals(a, b) {\n        return equals(a, b);\n    }\n    fromId(id) {\n        return this.termFromNQ(id);\n    }\n    id(obj) {\n        return this.toNQ(obj);\n    }\n    termFromNQ(nq) {\n        if (nq.startsWith(\"<\")) {\n            return this.namedNode(nq.slice(\"<\".length, -1));\n        }\n        else if (nq.startsWith(\"_\")) {\n            return this.blankNode(nq.slice(\"_:\".length, -1));\n        }\n        else if (nq.startsWith('\"')) {\n            const [valueOrLang, datatype] = nq.split(\"^^\");\n            const [value, lang] = valueOrLang.split(\"@\");\n            return this.literal(value.slice(1, -1), lang || (datatype ? this.namedNode(datatype) : undefined));\n        }\n        else {\n            throw new Error(\"Unknown term given\");\n        }\n    }\n    toNQ(term) {\n        if (Array.isArray(term)) {\n            const graph = term[3] === this.defaultGraph() ? '' : (this.toNQ(term[3]) + ' ');\n            return `${this.toNQ(term[0])} ${this.toNQ(term[1])} ${this.toNQ(term[2])} ${graph}.`;\n        }\n        else if (this.isQuad(term)) {\n            return this.quadToNQ(term);\n        }\n        return this.termToNQ(term);\n    }\n    parseLiteral(value) {\n        let literalValue = undefined;\n        let datatype = undefined;\n        if (typeof value === \"number\" || value instanceof Number) {\n            // From rdflib; https://github.com/linkeddata/rdflib.js/blob/master/src/literal.js#L104\n            if (value.toString().indexOf('e') < 0 && Math.ceil(value) <= Number.MAX_SAFE_INTEGER) {\n                datatype = Number.isInteger(value) ? datatypes.integer : datatypes.decimal;\n            }\n            else {\n                datatype = datatypes.double;\n            }\n            literalValue = value.toString();\n        }\n        else if (typeof value === \"boolean\" || value instanceof Boolean) {\n            literalValue = value.toString();\n            datatype = datatypes.boolean;\n        }\n        else if (typeof value === \"bigint\") {\n            datatype = datatypes.integer;\n            literalValue = value.toString();\n        }\n        else if (typeof value === \"object\") {\n            if (value instanceof Date) {\n                if (isNaN(value.getTime())) {\n                    throw new Error('Invalid date given');\n                }\n                literalValue = value.toISOString();\n                datatype = datatypes.dateTime;\n            }\n        }\n        if (typeof datatype !== \"undefined\") {\n            return this.literal(literalValue, this.namedNode(datatype));\n        }\n        throw new Error(`Can't parse value '${value}'`);\n    }\n    termToNQ(term) {\n        switch (term.termType) {\n            case TermType.BlankNode:\n                return `_:${term.value}`;\n            case TermType.NamedNode:\n                return `<${term.value}>`;\n            case TermType.Literal:\n                const escaped = `\"${term.value.replace(/([\\n\"\\\\\\r])/g, (match) => {\n                    switch (match) {\n                        case \"\\n\": return \"\\\\n\";\n                        case \"\\r\": return \"\\\\r\";\n                        case \"\\\"\": return \"\\\\\\\"\";\n                        case \"\\\\\": return \"\\\\\\\\\";\n                        default: return match;\n                    }\n                })}\"`;\n                if (term.datatype) {\n                    if (term.datatype.value === datatypes.string) {\n                        return escaped;\n                    }\n                    return `${escaped}^^${this.termToNQ(term.datatype)}`;\n                }\n                if (term.language) {\n                    return `${escaped}@${term.language}`;\n                }\n                return escaped;\n            default:\n                throw new Error(`Nonstandard termtype '${term.termType}' given`);\n        }\n    }\n    quadrupleToNQ(quad) {\n        const graph = !quad[QuadPosition.graph] || quad[QuadPosition.graph] === this.defaultGraph()\n            ? ''\n            : (this.toNQ(quad[QuadPosition.graph]) + ' ');\n        return `${this.toNQ(quad[QuadPosition.subject])} ${this.toNQ(quad[QuadPosition.predicate])} ${this.toNQ(quad[QuadPosition.object])} ${graph}.\\n`;\n    }\n    quadToNQ(quad) {\n        return this.quadrupleToNQ([\n            quad.subject,\n            quad.predicate,\n            quad.object,\n            quad.graph || this.defaultGraph(),\n        ]);\n    }\n}\n/**\n * Plain JS/functional implementation of the RDF/JS: Data model specification, limited to a strict\n * rdf subset (no Variable, no Literal as predicate, etc.).\n */\nexport const DefaultFactory = new PlainFactory();\n","import { TermType } from \"./types\";\nexport function isTerm(obj) {\n    return typeof obj === \"object\" && obj !== null && \"termType\" in obj;\n}\nexport function isNamedNode(obj) {\n    return isTerm(obj) && obj.termType === TermType.NamedNode;\n}\nexport function isBlankNode(obj) {\n    return isTerm(obj) && obj.termType === TermType.BlankNode;\n}\nexport function isLiteral(obj) {\n    return isTerm(obj) && obj.termType === TermType.Literal;\n}\nconst TermTypes = [\n    TermType.NamedNode.toString(),\n    TermType.BlankNode.toString(),\n    TermType.Literal.toString()\n];\nexport function isSomeTerm(obj) {\n    return isTerm(obj) && TermTypes.includes(obj.termType) === true;\n}\nconst NodeTypes = [TermType.NamedNode.toString(), TermType.BlankNode.toString()];\nexport function isNode(obj) {\n    return isTerm(obj) && NodeTypes.includes(obj.termType) === true;\n}\nexport function isQuad(obj) {\n    return typeof obj === \"object\" && obj !== null && \"subject\" in obj;\n}\nexport function doc(node) {\n    if (node.value.indexOf('#') < 0) {\n        return node.value;\n    }\n    else {\n        return node.value.split('#')[0];\n    }\n}\n","import \"@ungap/global-this\";\nimport { DefaultFactory, PlainFactory } from \"./PlainFactory\";\nlet setup;\nlet globalFactory;\nlet globalSymbol;\nfunction shouldOverride(rdfFactory, override) {\n    const factory = globalThis[rdfFactory];\n    return typeof factory === \"undefined\" || factory === DefaultFactory || override;\n}\nfunction changeFactory(rdfFactory, factory, override) {\n    if (shouldOverride(rdfFactory, override)) {\n        globalThis[rdfFactory] = factory;\n        globalFactory = factory;\n    }\n    else if (typeof globalFactory === \"undefined\" || override) {\n        globalThis[rdfFactory] = factory;\n        globalFactory = factory;\n    }\n}\nif (typeof Symbol !== \"undefined\") {\n    const rdfFactory = Symbol.for('rdfFactory');\n    setup = function setup(factory = DefaultFactory, override = true) {\n        changeFactory(rdfFactory, factory, override);\n        globalFactory = globalThis[rdfFactory];\n    };\n    globalSymbol = rdfFactory;\n}\nelse {\n    const rdfFactory = 'rdfFactory';\n    setup = function setup(factory = DefaultFactory, override = true) {\n        changeFactory(rdfFactory, factory, override);\n    };\n    globalSymbol = rdfFactory;\n    globalFactory = globalThis[rdfFactory];\n}\nsetup(DefaultFactory);\nexport const createNS = (ns) => (term) => globalFactory.namedNode(`${ns}${term}`);\nlet proxy;\nif (typeof Proxy !== \"undefined\") {\n    proxy = new Proxy(globalFactory || {}, {\n        ownKeys() {\n            return globalFactory && Object.keys(globalFactory) || [];\n        },\n        getOwnPropertyDescriptor(_, k) {\n            return Object.getOwnPropertyDescriptor(globalFactory, k);\n        },\n        set(_, property, value) {\n            globalFactory[property] = value;\n            return true;\n        },\n        get(_, property) {\n            return globalFactory[property];\n        },\n    });\n}\nelse {\n    proxy = [\n        'namedNode',\n        'blankNode',\n        'literal',\n        'defaultGraph',\n        'quad',\n        'quadruple',\n        'fromTerm',\n        'fromQuad',\n        'fromQdr',\n        'qdrFromQuad',\n        'qdrFromQdr',\n        'equals',\n        'id',\n        'toNQ',\n        'fromId',\n        'termToNQ',\n        'termFromNQ',\n        'quadrupleToNQ',\n        'quadToNQ',\n        'supports',\n    ].reduce((acc, key) => {\n        acc[key] = (...args) => globalFactory[key](...args);\n        return acc;\n    }, {});\n}\nexport { setup, globalFactory, globalSymbol, PlainFactory, };\nexport * from './types';\nexport * from './utilities';\nexport default proxy;\n"],"names":["TermType","QuadPosition","Feature","datatypes","boolean","dateTime","double","decimal","integer","langString","string","equals","a","b","Array","isArray","PlainFactory","isQuad","subject","predicate","object","graph","termType","value","datatype","language","RDFBase","other","toCanonical","constructor","opts","bnIndex","supports","collections","defaultGraphType","equalsMethod","id","idStamp","identity","reversibleId","variableType","obj","namedNode","term","Object","create","NamedNode","blankNode","BlankNode","literal","languageOrDatatype","parseLiteral","Literal","undefined","defaultGraph","quad","quadruple","fromTerm","original","fromQuad","fromQdr","qdrFromQuad","qdrFromQdr","fromId","termFromNQ","toNQ","nq","startsWith","slice","length","valueOrLang","split","lang","Error","quadToNQ","termToNQ","literalValue","Number","toString","indexOf","Math","ceil","MAX_SAFE_INTEGER","isInteger","Boolean","Date","isNaN","getTime","toISOString","escaped","replace","match","quadrupleToNQ","DefaultFactory","isTerm","isNamedNode","isBlankNode","isLiteral","TermTypes","isSomeTerm","includes","NodeTypes","isNode","doc","node","shouldOverride","rdfFactory","override","factory","globalThis","changeFactory","globalFactory","Symbol","for","setup","globalSymbol","createNS","ns","proxy","Proxy","ownKeys","keys","getOwnPropertyDescriptor","_","k","set","property","get","reduce","acc","key","args"],"mappings":"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"}