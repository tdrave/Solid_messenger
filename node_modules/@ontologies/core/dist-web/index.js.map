{"version":3,"file":"index.js","sources":["../dist-src/types.js","../dist-src/PlainFactory.js","../dist-src/utilities.js","../dist-src/index.js"],"sourcesContent":["export var TermType;\n(function (TermType) {\n    TermType[\"NamedNode\"] = \"NamedNode\";\n    TermType[\"BlankNode\"] = \"BlankNode\";\n    TermType[\"Literal\"] = \"Literal\";\n})(TermType || (TermType = {}));\nexport var QuadPosition;\n(function (QuadPosition) {\n    QuadPosition[QuadPosition[\"subject\"] = 0] = \"subject\";\n    QuadPosition[QuadPosition[\"predicate\"] = 1] = \"predicate\";\n    QuadPosition[QuadPosition[\"object\"] = 2] = \"object\";\n    QuadPosition[QuadPosition[\"graph\"] = 3] = \"graph\";\n})(QuadPosition || (QuadPosition = {}));\nexport var Feature;\n(function (Feature) {\n    /** Whether the factory supports termType:Collection terms */\n    Feature[\"collections\"] = \"COLLECTIONS\";\n    /** Whether the factory supports termType:DefaultGraph terms */\n    Feature[\"defaultGraphType\"] = \"DEFAULT_GRAPH_TYPE\";\n    /** Whether the factory supports equals on produced instances */\n    Feature[\"equalsMethod\"] = \"EQUALS_METHOD\";\n    /** Whether the factory can create a unique idempotent identifier for the given term. */\n    Feature[\"id\"] = \"ID\";\n    /** Whether the factory stores its unique idempotent identifier for the given term on the instance with the `id` property (implies Feature.id). */\n    Feature[\"idStamp\"] = \"ID_STAMP\";\n    /** Whether the factory will return the same instance for subsequent calls (implies implies Feature.id and `===`). */\n    Feature[\"identity\"] = \"IDENTITY\";\n    /** Whether the factory supports mapping ids back to instances (should adhere to the identity setting) */\n    Feature[\"reversibleId\"] = \"REVERSIBLE_ID\";\n    /** Whether the factory supports termType:Variable terms */\n    Feature[\"variableType\"] = \"VARIABLE_TYPE\";\n})(Feature || (Feature = {}));\n","import { Feature, QuadPosition, TermType, } from \"./types\";\nconst datatypes = {\n    boolean: \"http://www.w3.org/2001/XMLSchema#boolean\",\n    dateTime: \"http://www.w3.org/2001/XMLSchema#dateTime\",\n    double: \"http://www.w3.org/2001/XMLSchema#double\",\n    decimal: \"http://www.w3.org/2001/XMLSchema#decimal\",\n    integer: \"http://www.w3.org/2001/XMLSchema#integer\",\n    langString: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\",\n    string: \"http://www.w3.org/2001/XMLSchema#string\",\n};\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return a === b;\n    }\n    if (Array.isArray(a) || Array.isArray(b)) {\n        if (!(Array.isArray(a) && Array.isArray(b))) {\n            return false;\n        }\n        return equals(a[0], b[0])\n            && equals(a[1], b[1])\n            && equals(a[2], b[2])\n            && equals(a[3], b[3]);\n    }\n    if (PlainFactory.isQuad(a) || PlainFactory.isQuad(b)) {\n        if (!PlainFactory.isQuad(a) || !PlainFactory.isQuad(b)) {\n            return false;\n        }\n        return equals(a.subject, b.subject)\n            && equals(a.predicate, b.predicate)\n            && equals(a.object, b.object)\n            && equals(a.graph, b.graph);\n    }\n    switch (a.termType) {\n        case 'Literal': {\n            return a.termType === b.termType\n                && a.value === b.value\n                && b.datatype === b.datatype\n                && b.language === b.language;\n        }\n        default:\n            if (!a.termType || !b.termType) {\n                return false;\n            }\n            return a.termType === b.termType\n                && a.value === b.value;\n    }\n}\nconst RDFBase = {\n    equals(other) {\n        return equals(this, other);\n    },\n    /* rdflib compat */\n    toCanonical() {\n        return this;\n    },\n};\n/**\n * Plain JS/functional implementation of the RDF/JS: Data model specification, limited to a strict\n * rdf subset (no Variable, no Literal as predicate, etc.).\n */\nexport class PlainFactory {\n    constructor(opts = {}) {\n        this.bnIndex = opts.bnIndex || 0;\n        this.supports = opts.supports || {\n            [Feature.collections]: false,\n            [Feature.defaultGraphType]: false,\n            [Feature.equalsMethod]: false,\n            [Feature.id]: true,\n            [Feature.idStamp]: false,\n            [Feature.identity]: false,\n            [Feature.reversibleId]: true,\n            [Feature.variableType]: false,\n        };\n    }\n    /**\n     * Checks if the object {obj} is a Quad.\n     */\n    static isQuad(obj) {\n        if (Array.isArray(obj) || typeof obj !== \"object\" || obj === null) {\n            return false;\n        }\n        return !!(\"subject\" in obj\n            && \"predicate\" in obj\n            && \"object\" in obj);\n    }\n    namedNode(value) {\n        const term = Object.create(RDFBase);\n        term.termType = TermType.NamedNode;\n        term.value = value;\n        return term;\n    }\n    blankNode(value) {\n        const term = Object.create(RDFBase);\n        term.termType = TermType.BlankNode;\n        term.value = value || `b${++this.bnIndex}`;\n        return term;\n    }\n    literal(value, languageOrDatatype) {\n        if (typeof value !== \"string\") {\n            return this.parseLiteral(value);\n        }\n        const term = Object.create(RDFBase);\n        term.termType = TermType.Literal;\n        // Perf: Always set all properties to prevent the creation of unnecessary HiddenClass objects.\n        term.language = typeof languageOrDatatype === \"string\" ? languageOrDatatype : undefined;\n        term.datatype = typeof languageOrDatatype === \"string\"\n            ? this.namedNode(datatypes.langString)\n            : languageOrDatatype || this.namedNode(datatypes.string);\n        term.value = value;\n        return term;\n    }\n    defaultGraph() {\n        return this.namedNode(\"rdf:defaultGraph\");\n    }\n    /**\n     * Create an RDF statement in object form.\n     * @param subject The subject of the statement\n     * @param predicate The predicate of the statement\n     * @param object The object of the statement\n     * @param graph The graph of the statement\n     */\n    quad(subject, predicate, object, graph) {\n        return {\n            subject,\n            predicate,\n            object,\n            graph: graph || this.defaultGraph()\n        };\n    }\n    isQuad(obj) {\n        return PlainFactory.isQuad(obj);\n    }\n    /**\n     * * Returns an RDF statement in array form.\n     * @param subject The subject of the statement\n     * @param predicate The predicate of the statement\n     * @param object The object of the statement\n     * @param graph The graph of the statement\n     */\n    quadruple(subject, predicate, object, graph) {\n        return [\n            subject,\n            predicate,\n            object,\n            graph || this.defaultGraph(),\n        ];\n    }\n    fromTerm(original) {\n        if (original.termType === \"Literal\") {\n            return this.literal(original.value, original.language || original.datatype);\n        }\n        return {\n            termType: original.termType,\n            value: original.value,\n        };\n    }\n    fromQuad(original) {\n        return {\n            subject: original.subject,\n            predicate: original.predicate,\n            object: original.object,\n            graph: original.graph || this.defaultGraph(),\n        };\n    }\n    fromQdr(original) {\n        return {\n            subject: original[0],\n            predicate: original[1],\n            object: original[2],\n            graph: original[3] || this.defaultGraph(),\n        };\n    }\n    qdrFromQuad(original) {\n        return [\n            original.subject,\n            original.predicate,\n            original.object,\n            original.graph || this.defaultGraph(),\n        ];\n    }\n    qdrFromQdr(original) {\n        return [\n            original[0],\n            original[1],\n            original[2],\n            original[3] || this.defaultGraph(),\n        ];\n    }\n    /**\n     * Compare if two RDF objects are the same.\n     *\n     * Should work with non-standard rdf libraries as well (e.g. supporting Variable and Collection).\n     */\n    equals(a, b) {\n        return equals(a, b);\n    }\n    fromId(id) {\n        return this.termFromNQ(id);\n    }\n    id(obj) {\n        return this.toNQ(obj);\n    }\n    termFromNQ(nq) {\n        if (nq.startsWith(\"<\")) {\n            return this.namedNode(nq.slice(\"<\".length, -1));\n        }\n        else if (nq.startsWith(\"_\")) {\n            return this.blankNode(nq.slice(\"_:\".length, -1));\n        }\n        else if (nq.startsWith('\"')) {\n            const [valueOrLang, datatype] = nq.split(\"^^\");\n            const [value, lang] = valueOrLang.split(\"@\");\n            return this.literal(value.slice(1, -1), lang || (datatype ? this.namedNode(datatype) : undefined));\n        }\n        else {\n            throw new Error(\"Unknown term given\");\n        }\n    }\n    toNQ(term) {\n        if (Array.isArray(term)) {\n            const graph = term[3] === this.defaultGraph() ? '' : (this.toNQ(term[3]) + ' ');\n            return `${this.toNQ(term[0])} ${this.toNQ(term[1])} ${this.toNQ(term[2])} ${graph}.`;\n        }\n        else if (this.isQuad(term)) {\n            return this.quadToNQ(term);\n        }\n        return this.termToNQ(term);\n    }\n    parseLiteral(value) {\n        let literalValue = undefined;\n        let datatype = undefined;\n        if (typeof value === \"number\" || value instanceof Number) {\n            // From rdflib; https://github.com/linkeddata/rdflib.js/blob/master/src/literal.js#L104\n            if (value.toString().indexOf('e') < 0 && Math.ceil(value) <= Number.MAX_SAFE_INTEGER) {\n                datatype = Number.isInteger(value) ? datatypes.integer : datatypes.decimal;\n            }\n            else {\n                datatype = datatypes.double;\n            }\n            literalValue = value.toString();\n        }\n        else if (typeof value === \"boolean\" || value instanceof Boolean) {\n            literalValue = value.toString();\n            datatype = datatypes.boolean;\n        }\n        else if (typeof value === \"bigint\") {\n            datatype = datatypes.integer;\n            literalValue = value.toString();\n        }\n        else if (typeof value === \"object\") {\n            if (value instanceof Date) {\n                if (isNaN(value.getTime())) {\n                    throw new Error('Invalid date given');\n                }\n                literalValue = value.toISOString();\n                datatype = datatypes.dateTime;\n            }\n        }\n        if (typeof datatype !== \"undefined\") {\n            return this.literal(literalValue, this.namedNode(datatype));\n        }\n        throw new Error(`Can't parse value '${value}'`);\n    }\n    termToNQ(term) {\n        switch (term.termType) {\n            case TermType.BlankNode:\n                return `_:${term.value}`;\n            case TermType.NamedNode:\n                return `<${term.value}>`;\n            case TermType.Literal:\n                const escaped = `\"${term.value.replace(/([\\n\"\\\\\\r])/g, (match) => {\n                    switch (match) {\n                        case \"\\n\": return \"\\\\n\";\n                        case \"\\r\": return \"\\\\r\";\n                        case \"\\\"\": return \"\\\\\\\"\";\n                        case \"\\\\\": return \"\\\\\\\\\";\n                        default: return match;\n                    }\n                })}\"`;\n                if (term.datatype) {\n                    if (term.datatype.value === datatypes.string) {\n                        return escaped;\n                    }\n                    return `${escaped}^^${this.termToNQ(term.datatype)}`;\n                }\n                if (term.language) {\n                    return `${escaped}@${term.language}`;\n                }\n                return escaped;\n            default:\n                throw new Error(`Nonstandard termtype '${term.termType}' given`);\n        }\n    }\n    quadrupleToNQ(quad) {\n        const graph = !quad[QuadPosition.graph] || quad[QuadPosition.graph] === this.defaultGraph()\n            ? ''\n            : (this.toNQ(quad[QuadPosition.graph]) + ' ');\n        return `${this.toNQ(quad[QuadPosition.subject])} ${this.toNQ(quad[QuadPosition.predicate])} ${this.toNQ(quad[QuadPosition.object])} ${graph}.\\n`;\n    }\n    quadToNQ(quad) {\n        return this.quadrupleToNQ([\n            quad.subject,\n            quad.predicate,\n            quad.object,\n            quad.graph || this.defaultGraph(),\n        ]);\n    }\n}\n/**\n * Plain JS/functional implementation of the RDF/JS: Data model specification, limited to a strict\n * rdf subset (no Variable, no Literal as predicate, etc.).\n */\nexport const DefaultFactory = new PlainFactory();\n","import { TermType } from \"./types\";\nexport function isTerm(obj) {\n    return typeof obj === \"object\" && obj !== null && \"termType\" in obj;\n}\nexport function isNamedNode(obj) {\n    return isTerm(obj) && obj.termType === TermType.NamedNode;\n}\nexport function isBlankNode(obj) {\n    return isTerm(obj) && obj.termType === TermType.BlankNode;\n}\nexport function isLiteral(obj) {\n    return isTerm(obj) && obj.termType === TermType.Literal;\n}\nconst TermTypes = [\n    TermType.NamedNode.toString(),\n    TermType.BlankNode.toString(),\n    TermType.Literal.toString()\n];\nexport function isSomeTerm(obj) {\n    return isTerm(obj) && TermTypes.includes(obj.termType) === true;\n}\nconst NodeTypes = [TermType.NamedNode.toString(), TermType.BlankNode.toString()];\nexport function isNode(obj) {\n    return isTerm(obj) && NodeTypes.includes(obj.termType) === true;\n}\nexport function isQuad(obj) {\n    return typeof obj === \"object\" && obj !== null && \"subject\" in obj;\n}\nexport function doc(node) {\n    if (node.value.indexOf('#') < 0) {\n        return node.value;\n    }\n    else {\n        return node.value.split('#')[0];\n    }\n}\n","import \"@ungap/global-this\";\nimport { DefaultFactory, PlainFactory } from \"./PlainFactory\";\nlet setup;\nlet globalFactory;\nlet globalSymbol;\nfunction shouldOverride(rdfFactory, override) {\n    const factory = globalThis[rdfFactory];\n    return typeof factory === \"undefined\" || factory === DefaultFactory || override;\n}\nfunction changeFactory(rdfFactory, factory, override) {\n    if (shouldOverride(rdfFactory, override)) {\n        globalThis[rdfFactory] = factory;\n        globalFactory = factory;\n    }\n    else if (typeof globalFactory === \"undefined\" || override) {\n        globalThis[rdfFactory] = factory;\n        globalFactory = factory;\n    }\n}\nif (typeof Symbol !== \"undefined\") {\n    const rdfFactory = Symbol.for('rdfFactory');\n    setup = function setup(factory = DefaultFactory, override = true) {\n        changeFactory(rdfFactory, factory, override);\n        globalFactory = globalThis[rdfFactory];\n    };\n    globalSymbol = rdfFactory;\n}\nelse {\n    const rdfFactory = 'rdfFactory';\n    setup = function setup(factory = DefaultFactory, override = true) {\n        changeFactory(rdfFactory, factory, override);\n    };\n    globalSymbol = rdfFactory;\n    globalFactory = globalThis[rdfFactory];\n}\nsetup(DefaultFactory);\nexport const createNS = (ns) => (term) => globalFactory.namedNode(`${ns}${term}`);\nlet proxy;\nif (typeof Proxy !== \"undefined\") {\n    proxy = new Proxy(globalFactory || {}, {\n        ownKeys() {\n            return globalFactory && Object.keys(globalFactory) || [];\n        },\n        getOwnPropertyDescriptor(_, k) {\n            return Object.getOwnPropertyDescriptor(globalFactory, k);\n        },\n        set(_, property, value) {\n            globalFactory[property] = value;\n            return true;\n        },\n        get(_, property) {\n            return globalFactory[property];\n        },\n    });\n}\nelse {\n    proxy = [\n        'namedNode',\n        'blankNode',\n        'literal',\n        'defaultGraph',\n        'quad',\n        'quadruple',\n        'fromTerm',\n        'fromQuad',\n        'fromQdr',\n        'qdrFromQuad',\n        'qdrFromQdr',\n        'equals',\n        'id',\n        'toNQ',\n        'fromId',\n        'termToNQ',\n        'termFromNQ',\n        'quadrupleToNQ',\n        'quadToNQ',\n        'supports',\n    ].reduce((acc, key) => {\n        acc[key] = (...args) => globalFactory[key](...args);\n        return acc;\n    }, {});\n}\nexport { setup, globalFactory, globalSymbol, PlainFactory, };\nexport * from './types';\nexport * from './utilities';\nexport default proxy;\n"],"names":[],"mappings":"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"}