/** Function to create arbitrary terms within the 'Friend of a Friend (FOAF) vocabulary' ontology */
export declare const ns: import("@ontologies/core").Namespace;
/** A foaf:LabelProperty is any RDF property with texual values that serve as labels. */
export declare const LabelProperty: import("@ontologies/core").NamedNode;
/** A person. */
export declare const Person: import("@ontologies/core").NamedNode;
/** An agent (eg. person, group, software or physical artifact). */
export declare const Agent: import("@ontologies/core").NamedNode;
/** A document. */
export declare const Document: import("@ontologies/core").NamedNode;
/** An organization. */
export declare const Organization: import("@ontologies/core").NamedNode;
/** A class of Agents. */
export declare const Group: import("@ontologies/core").NamedNode;
/** A project (a collective endeavour of some kind). */
export declare const Project: import("@ontologies/core").NamedNode;
/** An image. */
export declare const Image: import("@ontologies/core").NamedNode;
/** A personal profile RDF document. */
export declare const PersonalProfileDocument: import("@ontologies/core").NamedNode;
/** An online account. */
export declare const OnlineAccount: import("@ontologies/core").NamedNode;
/** An online gaming account. */
export declare const OnlineGamingAccount: import("@ontologies/core").NamedNode;
/** An online e-commerce account. */
export declare const OnlineEcommerceAccount: import("@ontologies/core").NamedNode;
/** An online chat account. */
export declare const OnlineChatAccount: import("@ontologies/core").NamedNode;
/** A
personal mailbox, ie. an Internet mailbox associated with exactly one owner, the first owner of this mailbox. This is a 'static inverse functional property', in that  there is (across time and change) at most one individual that ever has any particular value for foaf:mbox. */
export declare const mbox: import("@ontologies/core").NamedNode;
/** The sha1sum of the URI of an Internet mailbox associated with exactly one owner, the  first owner of the mailbox. */
export declare const mbox_sha1sum: import("@ontologies/core").NamedNode;
/** The gender of this Agent (typically but not necessarily 'male' or 'female'). */
export declare const gender: import("@ontologies/core").NamedNode;
/** A textual geekcode for this person, see http://www.geekcode.com/geek.html */
export declare const geekcode: import("@ontologies/core").NamedNode;
/** A checksum for the DNA of some thing. Joke. */
export declare const dnaChecksum: import("@ontologies/core").NamedNode;
/** A sha1sum hash, in hex. */
export declare const sha1: import("@ontologies/core").NamedNode;
/** A location that something is based near, for some broadly human notion of near. */
export declare const based_near: import("@ontologies/core").NamedNode;
/** Title (Mr, Mrs, Ms, Dr. etc) */
export declare const title: import("@ontologies/core").NamedNode;
/** A short informal nickname characterising an agent (includes login identifiers, IRC and other chat nicknames). */
export declare const nick: import("@ontologies/core").NamedNode;
/** A jabber ID for something. */
export declare const jabberID: import("@ontologies/core").NamedNode;
/** An AIM chat ID */
export declare const aimChatID: import("@ontologies/core").NamedNode;
/** A Skype ID */
export declare const skypeID: import("@ontologies/core").NamedNode;
/** An ICQ chat ID */
export declare const icqChatID: import("@ontologies/core").NamedNode;
/** A Yahoo chat ID */
export declare const yahooChatID: import("@ontologies/core").NamedNode;
/** An MSN chat ID */
export declare const msnChatID: import("@ontologies/core").NamedNode;
/** A name for some thing. */
export declare const name: import("@ontologies/core").NamedNode;
/** The first name of a person. */
export declare const firstName: import("@ontologies/core").NamedNode;
/** The last name of a person. */
export declare const lastName: import("@ontologies/core").NamedNode;
/** The given name of some person. */
export declare const givenName: import("@ontologies/core").NamedNode;
/** The given name of some person. */
export declare const givenname: import("@ontologies/core").NamedNode;
/** The surname of some person. */
export declare const surname: import("@ontologies/core").NamedNode;
/** The family name of some person. */
export declare const family_name: import("@ontologies/core").NamedNode;
/** The family name of some person. */
export declare const familyName: import("@ontologies/core").NamedNode;
/** A phone,  specified using fully qualified tel: URI scheme (refs: http://www.w3.org/Addressing/schemes.html#tel). */
export declare const phone: import("@ontologies/core").NamedNode;
/** A homepage for some thing. */
export declare const homepage: import("@ontologies/core").NamedNode;
/** A weblog of some thing (whether person, group, company etc.). */
export declare const weblog: import("@ontologies/core").NamedNode;
/** An OpenID for an Agent. */
export declare const openid: import("@ontologies/core").NamedNode;
/** A tipjar document for this agent, describing means for payment and reward. */
export declare const tipjar: import("@ontologies/core").NamedNode;
/** A .plan comment, in the tradition of finger and '.plan' files. */
export declare const plan: import("@ontologies/core").NamedNode;
/** Something that was made by this agent. */
export declare const made: import("@ontologies/core").NamedNode;
/** An agent that
made this thing. */
export declare const maker: import("@ontologies/core").NamedNode;
/** An image that can be used to represent some thing (ie. those depictions which are particularly representative of something, eg. one's photo on a homepage). */
export declare const img: import("@ontologies/core").NamedNode;
/** A depiction of some thing. */
export declare const depiction: import("@ontologies/core").NamedNode;
/** A thing depicted in this representation. */
export declare const depicts: import("@ontologies/core").NamedNode;
/** A derived thumbnail image. */
export declare const thumbnail: import("@ontologies/core").NamedNode;
/** A Myers Briggs (MBTI) personality classification. */
export declare const myersBriggs: import("@ontologies/core").NamedNode;
/** A workplace homepage of some person; the homepage of an organization they work for. */
export declare const workplaceHomepage: import("@ontologies/core").NamedNode;
/** A work info homepage of some person; a page about their work for some organization. */
export declare const workInfoHomepage: import("@ontologies/core").NamedNode;
/** A homepage of a school attended by the person. */
export declare const schoolHomepage: import("@ontologies/core").NamedNode;
/** A person known by this person (indicating some level of reciprocated interaction between the parties). */
export declare const knows: import("@ontologies/core").NamedNode;
/** A page about a topic of interest to this person. */
export declare const interest: import("@ontologies/core").NamedNode;
/** A thing of interest to this person. */
export declare const topic_interest: import("@ontologies/core").NamedNode;
/** A link to the publications of this person. */
export declare const publications: import("@ontologies/core").NamedNode;
/** A current project this person works on. */
export declare const currentProject: import("@ontologies/core").NamedNode;
/** A project this person has previously worked on. */
export declare const pastProject: import("@ontologies/core").NamedNode;
/** An organization funding a project or person. */
export declare const fundedBy: import("@ontologies/core").NamedNode;
/** A logo representing some thing. */
export declare const logo: import("@ontologies/core").NamedNode;
/** A topic of some page or document. */
export declare const topic: import("@ontologies/core").NamedNode;
/** The primary topic of some page or document. */
export declare const primaryTopic: import("@ontologies/core").NamedNode;
/** The underlying or 'focal' entity associated with some SKOS-described concept. */
export declare const focus: import("@ontologies/core").NamedNode;
/** A document that this thing is the primary topic of. */
export declare const isPrimaryTopicOf: import("@ontologies/core").NamedNode;
/** A page or document about this thing. */
export declare const page: import("@ontologies/core").NamedNode;
/** A theme. */
export declare const theme: import("@ontologies/core").NamedNode;
/** Indicates an account held by this agent. */
export declare const account: import("@ontologies/core").NamedNode;
/** Indicates an account held by this agent. */
export declare const holdsAccount: import("@ontologies/core").NamedNode;
/** Indicates a homepage of the service provide for this online account. */
export declare const accountServiceHomepage: import("@ontologies/core").NamedNode;
/** Indicates the name (identifier) associated with this online account. */
export declare const accountName: import("@ontologies/core").NamedNode;
/** Indicates a member of a Group */
export declare const member: import("@ontologies/core").NamedNode;
/** Indicates the class of individuals that are a member of a Group */
export declare const membershipClass: import("@ontologies/core").NamedNode;
/** The birthday of this Agent, represented in mm-dd string form, eg. '12-31'. */
export declare const birthday: import("@ontologies/core").NamedNode;
/** The age in years of some agent. */
export declare const age: import("@ontologies/core").NamedNode;
/** A string expressing what the user is happy for the general public (normally) to know about their current activity. */
export declare const status: import("@ontologies/core").NamedNode;
