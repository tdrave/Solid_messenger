{"id":"node_modules/@rdfjs/data-model/lib/Quad.js","dependencies":[{"name":"/Users/tdrave/demo-solid-app/package.json","includedInParent":true,"mtime":1652099771977},{"name":"/Users/tdrave/demo-solid-app/node_modules/@rdfjs/data-model/package.json","includedInParent":true,"mtime":1652099631069},{"name":"./DefaultGraph.js","loc":{"line":1,"column":29,"index":29},"parent":"/Users/tdrave/demo-solid-app/node_modules/@rdfjs/data-model/lib/Quad.js","resolved":"/Users/tdrave/demo-solid-app/node_modules/@rdfjs/data-model/lib/DefaultGraph.js"}],"generated":{"js":"const DefaultGraph = require('./DefaultGraph.js')\n\nclass Quad {\n  constructor (subject, predicate, object, graph) {\n    this.subject = subject\n    this.predicate = predicate\n    this.object = object\n\n    if (graph) {\n      this.graph = graph\n    } else {\n      this.graph = new DefaultGraph()\n    }\n  }\n\n  equals (other) {\n    // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n    return !!other && (other.termType === 'Quad' || !other.termType) &&\n      other.subject.equals(this.subject) && other.predicate.equals(this.predicate) &&\n      other.object.equals(this.object) && other.graph.equals(this.graph)\n  }\n}\n\nQuad.prototype.termType = 'Quad'\nQuad.prototype.value = ''\n\nmodule.exports = Quad\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"node_modules/@rdfjs/data-model/lib/Quad.js":"const DefaultGraph = require('./DefaultGraph.js')\n\nclass Quad {\n  constructor (subject, predicate, object, graph) {\n    this.subject = subject\n    this.predicate = predicate\n    this.object = object\n\n    if (graph) {\n      this.graph = graph\n    } else {\n      this.graph = new DefaultGraph()\n    }\n  }\n\n  equals (other) {\n    // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n    return !!other && (other.termType === 'Quad' || !other.termType) &&\n      other.subject.equals(this.subject) && other.predicate.equals(this.predicate) &&\n      other.object.equals(this.object) && other.graph.equals(this.graph)\n  }\n}\n\nQuad.prototype.termType = 'Quad'\nQuad.prototype.value = ''\n\nmodule.exports = Quad\n"},"lineCount":28}},"error":null,"hash":"fd8e70b2481804aa2294558c9e9a0371","cacheData":{"env":{}}}