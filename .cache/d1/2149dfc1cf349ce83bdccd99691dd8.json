{"id":"node_modules/@inrupt/solid-client-authn-core/dist/errors/OidcProviderError.js","dependencies":[{"name":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-core/dist/errors/OidcProviderError.js.map","includedInParent":true,"mtime":1652099631160},{"name":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-core/src/errors/OidcProviderError.ts","includedInParent":true,"mtime":1652099631249},{"name":"/Users/tdrave/demo-solid-app/package.json","includedInParent":true,"mtime":1652099771977},{"name":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-core/package.json","includedInParent":true,"mtime":1652099631124}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OidcProviderError = void 0;\nclass OidcProviderError extends Error {\n    constructor(message, error, errorDescription) {\n        super(message);\n        this.error = error;\n        this.errorDescription = errorDescription;\n    }\n}\nexports.OidcProviderError = OidcProviderError;\n"},"sourceMaps":{"js":{"version":3,"file":"OidcProviderError.js","sourceRoot":"","sources":["../../src/errors/OidcProviderError.ts"],"names":[],"mappings":";;;AAoCA,MAAa,iBAAkB,SAAQ,KAAK;IAE1C,YACE,OAAe,EACC,KAAa,EACb,gBAAyB;QAEzC,KAAK,CAAC,OAAO,CAAC,CAAC;QAHC,UAAK,GAAL,KAAK,CAAQ;QACb,qBAAgB,GAAhB,gBAAgB,CAAS;IAG3C,CAAC;CACF;AATD,8CASC","sourcesContent":["/*\n * Copyright 2022 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Error to be triggered when receiving a response missing mandatory elements\n */\n\n// NOTE: There's a bug with istanbul and typescript that prevents full branch coverages\n// https://github.com/gotwarlost/istanbul/issues/690\n// The workaround is to put istanbul ignore on the constructor\n/**\n * @hidden\n */\nexport class OidcProviderError extends Error {\n  /* istanbul ignore next */\n  constructor(\n    message: string,\n    public readonly error: string,\n    public readonly errorDescription?: string\n  ) {\n    super(message);\n  }\n}\n"]}},"error":null,"hash":"eebe081f6e674f760f33e75da49d7151","cacheData":{"env":{}}}