{"id":"node_modules/@rdfjs/data-model/lib/BlankNode.js","dependencies":[{"name":"/Users/tdrave/demo-solid-app/package.json","includedInParent":true,"mtime":1652099771977},{"name":"/Users/tdrave/demo-solid-app/node_modules/@rdfjs/data-model/package.json","includedInParent":true,"mtime":1652099631069}],"generated":{"js":"class BlankNode {\n  constructor (id) {\n    this.value = id || ('b' + (++BlankNode.nextId))\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nBlankNode.prototype.termType = 'BlankNode'\n\nBlankNode.nextId = 0\n\nmodule.exports = BlankNode\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}}],"sources":{"node_modules/@rdfjs/data-model/lib/BlankNode.js":"class BlankNode {\n  constructor (id) {\n    this.value = id || ('b' + (++BlankNode.nextId))\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nBlankNode.prototype.termType = 'BlankNode'\n\nBlankNode.nextId = 0\n\nmodule.exports = BlankNode\n"},"lineCount":16}},"error":null,"hash":"624161da9f012b4755e61329a26b2334","cacheData":{"env":{}}}