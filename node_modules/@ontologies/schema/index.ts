import { createNS } from "@ontologies/core";


/** Function to create arbitrary terms within the 'Schema.org' ontology */
export const ns = createNS("http://schema.org/");


/* Classes */
/** A radio channel that uses AM. */
export const AMRadioChannel = /*#__PURE__*/ ns("AMRadioChannel");
/** Reference documentation for application programming interfaces (APIs). */
export const APIReference = /*#__PURE__*/ ns("APIReference");
/** Web page type: About page. */
export const AboutPage = /*#__PURE__*/ ns("AboutPage");
/** The act of committing to/adopting an object.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/RejectAction">RejectAction</a>: The antonym of AcceptAction.</li>
</ul>
 */
export const AcceptAction = /*#__PURE__*/ ns("AcceptAction");
/** An accommodation is a place that can accommodate human beings, e.g. a hotel room, a camping pitch, or a meeting room. Many accommodations are for overnight stays, but this is not a mandatory requirement.
For more specific types of accommodations not defined in schema.org, one can use additionalType with external vocabularies.
<br /><br />
See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>. */
export const Accommodation = /*#__PURE__*/ ns("Accommodation");
/** Accountancy business.<br/><br/>

As a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> it can be described as a <a class="localLink" href="http://schema.org/provider">provider</a> of one or more <a class="localLink" href="http://schema.org/Service">Service</a>(s). */
export const AccountingService = /*#__PURE__*/ ns("AccountingService");
/** The act of accomplishing something via previous efforts. It is an instantaneous action rather than an ongoing process. */
export const AchieveAction = /*#__PURE__*/ ns("AchieveAction");
/** An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.<br/><br/>

See also <a href="http://blog.schema.org/2014/04/announcing-schemaorg-actions.html">blog post</a> and <a href="http://schema.org/docs/actions.html">Actions overview document</a>. */
export const Action = /*#__PURE__*/ ns("Action");
/** A set of requirements that a must be fulfilled in order to perform an Action. */
export const ActionAccessSpecification = /*#__PURE__*/ ns("ActionAccessSpecification");
/** The status of an Action. */
export const ActionStatusType = /*#__PURE__*/ ns("ActionStatusType");
/** The act of starting or activating a device or application (e.g. starting a timer or turning on a flashlight). */
export const ActivateAction = /*#__PURE__*/ ns("ActivateAction");
/** The act of editing by adding an object to a collection. */
export const AddAction = /*#__PURE__*/ ns("AddAction");
/** A geographical region, typically under the jurisdiction of a particular government. */
export const AdministrativeArea = /*#__PURE__*/ ns("AdministrativeArea");
/** An adult entertainment establishment. */
export const AdultEntertainment = /*#__PURE__*/ ns("AdultEntertainment");
/** When a single product is associated with multiple offers (for example, the same pair of shoes is offered by different merchants), then AggregateOffer can be used. */
export const AggregateOffer = /*#__PURE__*/ ns("AggregateOffer");
/** The average rating based on multiple ratings or reviews. */
export const AggregateRating = /*#__PURE__*/ ns("AggregateRating");
/** The act of expressing a consistency of opinion with the object. An agent agrees to/about an object (a proposition, topic or theme) with participants. */
export const AgreeAction = /*#__PURE__*/ ns("AgreeAction");
/** An organization that provides flights for passengers. */
export const Airline = /*#__PURE__*/ ns("Airline");
/** An airport. */
export const Airport = /*#__PURE__*/ ns("Airport");
/** An intangible item that describes an alignment between a learning resource and a node in an educational framework. */
export const AlignmentObject = /*#__PURE__*/ ns("AlignmentObject");
/** The act of organizing tasks/objects/events by associating resources to it. */
export const AllocateAction = /*#__PURE__*/ ns("AllocateAction");
/** An amusement park. */
export const AmusementPark = /*#__PURE__*/ ns("AmusementPark");
/** Animal shelter. */
export const AnimalShelter = /*#__PURE__*/ ns("AnimalShelter");
/** An answer offered to a question; perhaps correct, perhaps opinionated or wrong. */
export const Answer = /*#__PURE__*/ ns("Answer");
/** An apartment (in American English) or flat (in British English) is a self-contained housing unit (a type of residential real estate) that occupies only part of a building (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Apartment">http://en.wikipedia.org/wiki/Apartment</a>). */
export const Apartment = /*#__PURE__*/ ns("Apartment");
/** Residence type: Apartment complex. */
export const ApartmentComplex = /*#__PURE__*/ ns("ApartmentComplex");
/** The act of inserting at the end if an ordered collection. */
export const AppendAction = /*#__PURE__*/ ns("AppendAction");
/** The act of registering to an organization/service without the guarantee to receive it.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, ApplyAction has no guarantees that the application will be accepted.</li>
</ul>
 */
export const ApplyAction = /*#__PURE__*/ ns("ApplyAction");
/** Aquarium. */
export const Aquarium = /*#__PURE__*/ ns("Aquarium");
/** The act of arriving at a place. An agent arrives at a destination from a fromLocation, optionally with participants. */
export const ArriveAction = /*#__PURE__*/ ns("ArriveAction");
/** An art gallery. */
export const ArtGallery = /*#__PURE__*/ ns("ArtGallery");
/** An article, such as a news article or piece of investigative report. Newspapers and magazines have articles of many different types and this is intended to cover them all.<br/><br/>

See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>. */
export const Article = /*#__PURE__*/ ns("Article");
/** The act of posing a question / favor to someone.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/ReplyAction">ReplyAction</a>: Appears generally as a response to AskAction.</li>
</ul>
 */
export const AskAction = /*#__PURE__*/ ns("AskAction");
/** The act of forming one's opinion, reaction or sentiment. */
export const AssessAction = /*#__PURE__*/ ns("AssessAction");
/** The act of allocating an action/event/task to some destination (someone or something). */
export const AssignAction = /*#__PURE__*/ ns("AssignAction");
/** Professional service: Attorney. <br/><br/>

This type is deprecated - <a class="localLink" href="http://schema.org/LegalService">LegalService</a> is more inclusive and less ambiguous. */
export const Attorney = /*#__PURE__*/ ns("Attorney");
/** Intended audience for an item, i.e. the group for whom the item was created. */
export const Audience = /*#__PURE__*/ ns("Audience");
/** An audio file. */
export const AudioObject = /*#__PURE__*/ ns("AudioObject");
/** The act of granting permission to an object. */
export const AuthorizeAction = /*#__PURE__*/ ns("AuthorizeAction");
/** Auto body shop. */
export const AutoBodyShop = /*#__PURE__*/ ns("AutoBodyShop");
/** An car dealership. */
export const AutoDealer = /*#__PURE__*/ ns("AutoDealer");
/** An auto parts store. */
export const AutoPartsStore = /*#__PURE__*/ ns("AutoPartsStore");
/** A car rental business. */
export const AutoRental = /*#__PURE__*/ ns("AutoRental");
/** Car repair business. */
export const AutoRepair = /*#__PURE__*/ ns("AutoRepair");
/** A car wash business. */
export const AutoWash = /*#__PURE__*/ ns("AutoWash");
/** ATM/cash machine. */
export const AutomatedTeller = /*#__PURE__*/ ns("AutomatedTeller");
/** Car repair, sales, or parts. */
export const AutomotiveBusiness = /*#__PURE__*/ ns("AutomotiveBusiness");
/** A bakery. */
export const Bakery = /*#__PURE__*/ ns("Bakery");
/** A product or service offered by a bank whereby one may deposit, withdraw or transfer money and in some cases be paid interest. */
export const BankAccount = /*#__PURE__*/ ns("BankAccount");
/** Bank or credit union. */
export const BankOrCreditUnion = /*#__PURE__*/ ns("BankOrCreditUnion");
/** A bar or pub. */
export const BarOrPub = /*#__PURE__*/ ns("BarOrPub");
/** An image of a visual machine-readable code such as a barcode or QR code. */
export const Barcode = /*#__PURE__*/ ns("Barcode");
/** Beach. */
export const Beach = /*#__PURE__*/ ns("Beach");
/** Beauty salon. */
export const BeautySalon = /*#__PURE__*/ ns("BeautySalon");
/** Bed and breakfast.
<br /><br />
See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>. */
export const BedAndBreakfast = /*#__PURE__*/ ns("BedAndBreakfast");
/** An entity holding detailed information about the available bed types, e.g. the quantity of twin beds for a hotel room. For the single case of just one bed of a certain type, you can use bed directly with a text. See also <a class="localLink" href="http://schema.org/BedType">BedType</a> (under development). */
export const BedDetails = /*#__PURE__*/ ns("BedDetails");
/** A type of bed. This is used for indicating the bed or beds available in an accommodation. */
export const BedType = /*#__PURE__*/ ns("BedType");
/** The act of forming a personal connection with someone (object) mutually/bidirectionally/symmetrically.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, BefriendAction implies that the connection is reciprocal.</li>
</ul>
 */
export const BefriendAction = /*#__PURE__*/ ns("BefriendAction");
/** A bike store. */
export const BikeStore = /*#__PURE__*/ ns("BikeStore");
/** A blog. */
export const Blog = /*#__PURE__*/ ns("Blog");
/** A blog post. */
export const BlogPosting = /*#__PURE__*/ ns("BlogPosting");
/** A type of boarding policy used by an airline. */
export const BoardingPolicyType = /*#__PURE__*/ ns("BoardingPolicyType");
/** A body of water, such as a sea, ocean, or lake. */
export const BodyOfWater = /*#__PURE__*/ ns("BodyOfWater");
/** A book. */
export const Book = /*#__PURE__*/ ns("Book");
/** The publication format of the book. */
export const BookFormatType = /*#__PURE__*/ ns("BookFormatType");
/** A series of books. Included books can be indicated with the hasPart property. */
export const BookSeries = /*#__PURE__*/ ns("BookSeries");
/** A bookstore. */
export const BookStore = /*#__PURE__*/ ns("BookStore");
/** An agent bookmarks/flags/labels/tags/marks an object. */
export const BookmarkAction = /*#__PURE__*/ ns("BookmarkAction");
/** Boolean: True or False. */
export const Boolean = /*#__PURE__*/ ns("Boolean");
/** The act of obtaining an object under an agreement to return it at a later date. Reciprocal of LendAction.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/LendAction">LendAction</a>: Reciprocal of BorrowAction.</li>
</ul>
 */
export const BorrowAction = /*#__PURE__*/ ns("BorrowAction");
/** A bowling alley. */
export const BowlingAlley = /*#__PURE__*/ ns("BowlingAlley");
/** A brand is a name used by an organization or business person for labeling a product, product group, or similar. */
export const Brand = /*#__PURE__*/ ns("Brand");
/** A BreadcrumbList is an ItemList consisting of a chain of linked Web pages, typically described using at least their URL and their name, and typically ending with the current page.<br/><br/>

The <a class="localLink" href="http://schema.org/position">position</a> property is used to reconstruct the order of the items in a BreadcrumbList The convention is that a breadcrumb list has an <a class="localLink" href="http://schema.org/itemListOrder">itemListOrder</a> of <a class="localLink" href="http://schema.org/ItemListOrderAscending">ItemListOrderAscending</a> (lower values listed first), and that the first items in this list correspond to the "top" or beginning of the breadcrumb trail, e.g. with a site or section homepage. The specific values of 'position' are not assigned meaning for a BreadcrumbList, but they should be integers, e.g. beginning with '1' for the first item in the list. */
export const BreadcrumbList = /*#__PURE__*/ ns("BreadcrumbList");
/** Brewery. */
export const Brewery = /*#__PURE__*/ ns("Brewery");
/** A bridge. */
export const Bridge = /*#__PURE__*/ ns("Bridge");
/** A unique instance of a BroadcastService on a CableOrSatelliteService lineup. */
export const BroadcastChannel = /*#__PURE__*/ ns("BroadcastChannel");
/** An over the air or online broadcast event. */
export const BroadcastEvent = /*#__PURE__*/ ns("BroadcastEvent");
/** The frequency in MHz and the modulation used for a particular BroadcastService. */
export const BroadcastFrequencySpecification = /*#__PURE__*/ ns("BroadcastFrequencySpecification");
/** A delivery service through which content is provided via broadcast over the air or online. */
export const BroadcastService = /*#__PURE__*/ ns("BroadcastService");
/** A Buddhist temple. */
export const BuddhistTemple = /*#__PURE__*/ ns("BuddhistTemple");
/** A reservation for bus travel. <br/><br/>

Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>. */
export const BusReservation = /*#__PURE__*/ ns("BusReservation");
/** A bus station. */
export const BusStation = /*#__PURE__*/ ns("BusStation");
/** A bus stop. */
export const BusStop = /*#__PURE__*/ ns("BusStop");
/** A trip on a commercial bus line. */
export const BusTrip = /*#__PURE__*/ ns("BusTrip");
/** A set of characteristics belonging to businesses, e.g. who compose an item's target audience. */
export const BusinessAudience = /*#__PURE__*/ ns("BusinessAudience");
/** A business entity type is a conceptual entity representing the legal form, the size, the main line of business, the position in the value chain, or any combination thereof, of an organization or business person.<br/><br/>

Commonly used values:<br/><br/>

<ul>
<li>http://purl.org/goodrelations/v1#Business</li>
<li>http://purl.org/goodrelations/v1#Enduser</li>
<li>http://purl.org/goodrelations/v1#PublicInstitution</li>
<li>http://purl.org/goodrelations/v1#Reseller</li>
</ul>
 */
export const BusinessEntityType = /*#__PURE__*/ ns("BusinessEntityType");
/** Event type: Business event. */
export const BusinessEvent = /*#__PURE__*/ ns("BusinessEvent");
/** The business function specifies the type of activity or access (i.e., the bundle of rights) offered by the organization or business person through the offer. Typical are sell, rental or lease, maintenance or repair, manufacture / produce, recycle / dispose, engineering / construction, or installation. Proprietary specifications of access rights are also instances of this class.<br/><br/>

Commonly used values:<br/><br/>

<ul>
<li>http://purl.org/goodrelations/v1#ConstructionInstallation</li>
<li>http://purl.org/goodrelations/v1#Dispose</li>
<li>http://purl.org/goodrelations/v1#LeaseOut</li>
<li>http://purl.org/goodrelations/v1#Maintain</li>
<li>http://purl.org/goodrelations/v1#ProvideService</li>
<li>http://purl.org/goodrelations/v1#Repair</li>
<li>http://purl.org/goodrelations/v1#Sell</li>
<li>http://purl.org/goodrelations/v1#Buy</li>
</ul>
 */
export const BusinessFunction = /*#__PURE__*/ ns("BusinessFunction");
/** The act of giving money to a seller in exchange for goods or services rendered. An agent buys an object, product, or service from a seller for a price. Reciprocal of SellAction. */
export const BuyAction = /*#__PURE__*/ ns("BuyAction");
/** A service which provides access to media programming like TV or radio. Access may be via cable or satellite. */
export const CableOrSatelliteService = /*#__PURE__*/ ns("CableOrSatelliteService");
/** A cafe or coffee shop. */
export const CafeOrCoffeeShop = /*#__PURE__*/ ns("CafeOrCoffeeShop");
/** A camping site, campsite, or <a class="localLink" href="http://schema.org/Campground">Campground</a> is a place used for overnight stay in the outdoors, typically containing individual <a class="localLink" href="http://schema.org/CampingPitch">CampingPitch</a> locations. <br/><br/>

In British English a campsite is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites (Source: Wikipedia see <a href="https://en.wikipedia.org/wiki/Campsite">https://en.wikipedia.org/wiki/Campsite</a>).<br/><br/>

See also the dedicated <a href="/docs/hotels.html">document on the use of schema.org for marking up hotels and other forms of accommodations</a>. */
export const Campground = /*#__PURE__*/ ns("Campground");
/** A <a class="localLink" href="http://schema.org/CampingPitch">CampingPitch</a> is an individual place for overnight stay in the outdoors, typically being part of a larger camping site, or <a class="localLink" href="http://schema.org/Campground">Campground</a>.<br/><br/>

In British English a campsite, or campground, is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites.
(Source: Wikipedia see <a href="https://en.wikipedia.org/wiki/Campsite">https://en.wikipedia.org/wiki/Campsite</a>).<br/><br/>

See also the dedicated <a href="/docs/hotels.html">document on the use of schema.org for marking up hotels and other forms of accommodations</a>. */
export const CampingPitch = /*#__PURE__*/ ns("CampingPitch");
/** A canal, like the Panama Canal. */
export const Canal = /*#__PURE__*/ ns("Canal");
/** The act of asserting that a future event/action is no longer going to happen.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/ConfirmAction">ConfirmAction</a>: The antonym of CancelAction.</li>
</ul>
 */
export const CancelAction = /*#__PURE__*/ ns("CancelAction");
/** A car is a wheeled, self-powered motor vehicle used for transportation. */
export const Car = /*#__PURE__*/ ns("Car");
/** A casino. */
export const Casino = /*#__PURE__*/ ns("Casino");
/** A Catholic church. */
export const CatholicChurch = /*#__PURE__*/ ns("CatholicChurch");
/** A graveyard. */
export const Cemetery = /*#__PURE__*/ ns("Cemetery");
/** An agent inspects, determines, investigates, inquires, or examines an object's accuracy, quality, condition, or state. */
export const CheckAction = /*#__PURE__*/ ns("CheckAction");
/** The act of an agent communicating (service provider, social media, etc) their arrival by registering/confirming for a previously reserved service (e.g. flight check in) or at a place (e.g. hotel), possibly resulting in a result (boarding pass, etc).<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/CheckOutAction">CheckOutAction</a>: The antonym of CheckInAction.</li>
<li><a class="localLink" href="http://schema.org/ArriveAction">ArriveAction</a>: Unlike ArriveAction, CheckInAction implies that the agent is informing/confirming the start of a previously reserved service.</li>
<li><a class="localLink" href="http://schema.org/ConfirmAction">ConfirmAction</a>: Unlike ConfirmAction, CheckInAction implies that the agent is informing/confirming the <em>start</em> of a previously reserved service rather than its validity/existence.</li>
</ul>
 */
export const CheckInAction = /*#__PURE__*/ ns("CheckInAction");
/** The act of an agent communicating (service provider, social media, etc) their departure of a previously reserved service (e.g. flight check in) or place (e.g. hotel).<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/CheckInAction">CheckInAction</a>: The antonym of CheckOutAction.</li>
<li><a class="localLink" href="http://schema.org/DepartAction">DepartAction</a>: Unlike DepartAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.</li>
<li><a class="localLink" href="http://schema.org/CancelAction">CancelAction</a>: Unlike CancelAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.</li>
</ul>
 */
export const CheckOutAction = /*#__PURE__*/ ns("CheckOutAction");
/** Web page type: Checkout page. */
export const CheckoutPage = /*#__PURE__*/ ns("CheckoutPage");
/** A Childcare center. */
export const ChildCare = /*#__PURE__*/ ns("ChildCare");
/** Event type: Children's event. */
export const ChildrensEvent = /*#__PURE__*/ ns("ChildrensEvent");
/** The act of expressing a preference from a set of options or a large or unbounded set of choices/options. */
export const ChooseAction = /*#__PURE__*/ ns("ChooseAction");
/** A church. */
export const Church = /*#__PURE__*/ ns("Church");
/** A city or town. */
export const City = /*#__PURE__*/ ns("City");
/** A city hall. */
export const CityHall = /*#__PURE__*/ ns("CityHall");
/** A public structure, such as a town hall or concert hall. */
export const CivicStructure = /*#__PURE__*/ ns("CivicStructure");
/** A fact-checking review of claims made (or reported) in some creative work (referenced via itemReviewed). */
export const ClaimReview = /*#__PURE__*/ ns("ClaimReview");
/** A short TV or radio program or a segment/part of a program. */
export const Clip = /*#__PURE__*/ ns("Clip");
/** A clothing store. */
export const ClothingStore = /*#__PURE__*/ ns("ClothingStore");
/** Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates. */
export const Code = /*#__PURE__*/ ns("Code");
/** Web page type: Collection page. */
export const CollectionPage = /*#__PURE__*/ ns("CollectionPage");
/** A college, university, or other third-level educational institution. */
export const CollegeOrUniversity = /*#__PURE__*/ ns("CollegeOrUniversity");
/** A comedy club. */
export const ComedyClub = /*#__PURE__*/ ns("ComedyClub");
/** Event type: Comedy event. */
export const ComedyEvent = /*#__PURE__*/ ns("ComedyEvent");
/** A comment on an item - for example, a comment on a blog post. The comment's content is expressed via the <a class="localLink" href="http://schema.org/text">text</a> property, and its topic via <a class="localLink" href="http://schema.org/about">about</a>, properties shared with all CreativeWorks. */
export const Comment = /*#__PURE__*/ ns("Comment");
/** The act of generating a comment about a subject. */
export const CommentAction = /*#__PURE__*/ ns("CommentAction");
/** The act of conveying information to another person via a communication medium (instrument) such as speech, email, or telephone conversation. */
export const CommunicateAction = /*#__PURE__*/ ns("CommunicateAction");
/** A compound price specification is one that bundles multiple prices that all apply in combination for different dimensions of consumption. Use the name property of the attached unit price specification for indicating the dimension of a price component (e.g. "electricity" or "final cleaning"). */
export const CompoundPriceSpecification = /*#__PURE__*/ ns("CompoundPriceSpecification");
/** This type covers computer programming languages such as Scheme and Lisp, as well as other language-like computer representations. Natural languages are best represented with the <a class="localLink" href="http://schema.org/Language">Language</a> type. */
export const ComputerLanguage = /*#__PURE__*/ ns("ComputerLanguage");
/** A computer store. */
export const ComputerStore = /*#__PURE__*/ ns("ComputerStore");
/** The act of notifying someone that a future event/action is going to happen as expected.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/CancelAction">CancelAction</a>: The antonym of ConfirmAction.</li>
</ul>
 */
export const ConfirmAction = /*#__PURE__*/ ns("ConfirmAction");
/** The act of ingesting information/resources/food. */
export const ConsumeAction = /*#__PURE__*/ ns("ConsumeAction");
/** Web page type: Contact page. */
export const ContactPage = /*#__PURE__*/ ns("ContactPage");
/** A contact point&#x2014;for example, a Customer Complaints department. */
export const ContactPoint = /*#__PURE__*/ ns("ContactPoint");
/** Enumerated options related to a ContactPoint. */
export const ContactPointOption = /*#__PURE__*/ ns("ContactPointOption");
/** One of the continents (for example, Europe or Africa). */
export const Continent = /*#__PURE__*/ ns("Continent");
/** An agent controls a device or application. */
export const ControlAction = /*#__PURE__*/ ns("ControlAction");
/** A convenience store. */
export const ConvenienceStore = /*#__PURE__*/ ns("ConvenienceStore");
/** One or more messages between organizations or people on a particular topic. Individual messages can be linked to the conversation with isPartOf or hasPart properties. */
export const Conversation = /*#__PURE__*/ ns("Conversation");
/** The act of producing/preparing food. */
export const CookAction = /*#__PURE__*/ ns("CookAction");
/** Organization: A business corporation. */
export const Corporation = /*#__PURE__*/ ns("Corporation");
/** A country. */
export const Country = /*#__PURE__*/ ns("Country");
/** A description of an educational course which may be offered as distinct instances at which take place at different times or take place at different locations, or be offered through different media or modes of study. An educational course is a sequence of one or more educational events and/or creative works which aims to build knowledge, competence or ability of learners. */
export const Course = /*#__PURE__*/ ns("Course");
/** An instance of a <a class="localLink" href="http://schema.org/Course">Course</a> which is distinct from other instances because it is offered at a different time or location or through different media or modes of study or to a specific section of students. */
export const CourseInstance = /*#__PURE__*/ ns("CourseInstance");
/** A courthouse. */
export const Courthouse = /*#__PURE__*/ ns("Courthouse");
/** The act of deliberately creating/producing/generating/building a result out of the agent. */
export const CreateAction = /*#__PURE__*/ ns("CreateAction");
/** The most generic kind of creative work, including books, movies, photographs, software programs, etc. */
export const CreativeWork = /*#__PURE__*/ ns("CreativeWork");
/** A media season e.g. tv, radio, video game etc. */
export const CreativeWorkSeason = /*#__PURE__*/ ns("CreativeWorkSeason");
/** A CreativeWorkSeries in schema.org is a group of related items, typically but not necessarily of the same kind. CreativeWorkSeries are usually organized into some order, often chronological. Unlike <a class="localLink" href="http://schema.org/ItemList">ItemList</a> which is a general purpose data structure for lists of things, the emphasis with CreativeWorkSeries is on published materials (written e.g. books and periodicals, or media such as tv, radio and games).<br/><br/>

Specific subtypes are available for describing <a class="localLink" href="http://schema.org/TVSeries">TVSeries</a>, <a class="localLink" href="http://schema.org/RadioSeries">RadioSeries</a>, <a class="localLink" href="http://schema.org/MovieSeries">MovieSeries</a>, <a class="localLink" href="http://schema.org/BookSeries">BookSeries</a>, <a class="localLink" href="http://schema.org/Periodical">Periodical</a> and <a class="localLink" href="http://schema.org/VideoGameSeries">VideoGameSeries</a>. In each case, the <a class="localLink" href="http://schema.org/hasPart">hasPart</a> / <a class="localLink" href="http://schema.org/isPartOf">isPartOf</a> properties can be used to relate the CreativeWorkSeries to its parts. The general CreativeWorkSeries type serves largely just to organize these more specific and practical subtypes.<br/><br/>

It is common for properties applicable to an item from the series to be usefully applied to the containing group. Schema.org attempts to anticipate some of these cases, but publishers should be free to apply properties of the series parts to the series as a whole wherever they seem appropriate. */
export const CreativeWorkSeries = /*#__PURE__*/ ns("CreativeWorkSeries");
/** A card payment method of a particular brand or name.  Used to mark up a particular payment method and/or the financial product/service that supplies the card account.<br/><br/>

Commonly used values:<br/><br/>

<ul>
<li>http://purl.org/goodrelations/v1#AmericanExpress</li>
<li>http://purl.org/goodrelations/v1#DinersClub</li>
<li>http://purl.org/goodrelations/v1#Discover</li>
<li>http://purl.org/goodrelations/v1#JCB</li>
<li>http://purl.org/goodrelations/v1#MasterCard</li>
<li>http://purl.org/goodrelations/v1#VISA</li>
</ul>
 */
export const CreditCard = /*#__PURE__*/ ns("CreditCard");
/** A crematorium. */
export const Crematorium = /*#__PURE__*/ ns("Crematorium");
/** A service to convert funds from one currency to another currency. */
export const CurrencyConversionService = /*#__PURE__*/ ns("CurrencyConversionService");
/** Event type: A social dance. */
export const DanceEvent = /*#__PURE__*/ ns("DanceEvent");
/** A dance group&#x2014;for example, the Alvin Ailey Dance Theater or Riverdance. */
export const DanceGroup = /*#__PURE__*/ ns("DanceGroup");
/** A collection of datasets. */
export const DataCatalog = /*#__PURE__*/ ns("DataCatalog");
/** A dataset in downloadable form. */
export const DataDownload = /*#__PURE__*/ ns("DataDownload");
/** A single feed providing structured information about one or more entities or topics. */
export const DataFeed = /*#__PURE__*/ ns("DataFeed");
/** A single item within a larger data feed. */
export const DataFeedItem = /*#__PURE__*/ ns("DataFeedItem");
/** The basic data types such as Integers, Strings, etc. */
export const DataType = /*#__PURE__*/ ns("DataType");
/** A body of structured information describing some topic(s) of interest. */
export const Dataset = /*#__PURE__*/ ns("Dataset");
/** A date value in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>. */
export const Date = /*#__PURE__*/ ns("Date");
/** A combination of date and time of day in the form [-]CCYY-MM-DDThh:mm:ss[Z|(+|-)hh:mm] (see Chapter 5.4 of ISO 8601). */
export const DateTime = /*#__PURE__*/ ns("DateTime");
/** A DatedMoneySpecification represents monetary values with optional start and end dates. For example, this could represent an employee's salary over a specific period of time. <strong>Note:</strong> This type has been superseded by <a class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a> use of that type is recommended */
export const DatedMoneySpecification = /*#__PURE__*/ ns("DatedMoneySpecification");
/** The day of the week, e.g. used to specify to which day the opening hours of an OpeningHoursSpecification refer.<br/><br/>

Originally, URLs from <a href="http://purl.org/goodrelations/v1">GoodRelations</a> were used (for <a class="localLink" href="http://schema.org/Monday">Monday</a>, <a class="localLink" href="http://schema.org/Tuesday">Tuesday</a>, <a class="localLink" href="http://schema.org/Wednesday">Wednesday</a>, <a class="localLink" href="http://schema.org/Thursday">Thursday</a>, <a class="localLink" href="http://schema.org/Friday">Friday</a>, <a class="localLink" href="http://schema.org/Saturday">Saturday</a>, <a class="localLink" href="http://schema.org/Sunday">Sunday</a> plus a special entry for <a class="localLink" href="http://schema.org/PublicHolidays">PublicHolidays</a>); these have now been integrated directly into schema.org. */
export const DayOfWeek = /*#__PURE__*/ ns("DayOfWeek");
/** A day spa. */
export const DaySpa = /*#__PURE__*/ ns("DaySpa");
/** The act of stopping or deactivating a device or application (e.g. stopping a timer or turning off a flashlight). */
export const DeactivateAction = /*#__PURE__*/ ns("DeactivateAction");
/** A defence establishment, such as an army or navy base. */
export const DefenceEstablishment = /*#__PURE__*/ ns("DefenceEstablishment");
/** The act of editing a recipient by removing one of its objects. */
export const DeleteAction = /*#__PURE__*/ ns("DeleteAction");
/** The price for the delivery of an offer using a particular delivery method. */
export const DeliveryChargeSpecification = /*#__PURE__*/ ns("DeliveryChargeSpecification");
/** An event involving the delivery of an item. */
export const DeliveryEvent = /*#__PURE__*/ ns("DeliveryEvent");
/** A delivery method is a standardized procedure for transferring the product or service to the destination of fulfillment chosen by the customer. Delivery methods are characterized by the means of transportation used, and by the organization or group that is the contracting party for the sending organization or person.<br/><br/>

Commonly used values:<br/><br/>

<ul>
<li>http://purl.org/goodrelations/v1#DeliveryModeDirectDownload</li>
<li>http://purl.org/goodrelations/v1#DeliveryModeFreight</li>
<li>http://purl.org/goodrelations/v1#DeliveryModeMail</li>
<li>http://purl.org/goodrelations/v1#DeliveryModeOwnFleet</li>
<li>http://purl.org/goodrelations/v1#DeliveryModePickUp</li>
<li>http://purl.org/goodrelations/v1#DHL</li>
<li>http://purl.org/goodrelations/v1#FederalExpress</li>
<li>http://purl.org/goodrelations/v1#UPS</li>
</ul>
 */
export const DeliveryMethod = /*#__PURE__*/ ns("DeliveryMethod");
/** A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply. */
export const Demand = /*#__PURE__*/ ns("Demand");
/** A dentist. */
export const Dentist = /*#__PURE__*/ ns("Dentist");
/** The act of  departing from a place. An agent departs from an fromLocation for a destination, optionally with participants. */
export const DepartAction = /*#__PURE__*/ ns("DepartAction");
/** A department store. */
export const DepartmentStore = /*#__PURE__*/ ns("DepartmentStore");
/** A type of Bank Account with a main purpose of depositing funds to gain interest or other benefits. */
export const DepositAccount = /*#__PURE__*/ ns("DepositAccount");
/** An electronic file or document. */
export const DigitalDocument = /*#__PURE__*/ ns("DigitalDocument");
/** A permission for a particular person or group to access a particular file. */
export const DigitalDocumentPermission = /*#__PURE__*/ ns("DigitalDocumentPermission");
/** A type of permission which can be granted for accessing a digital document. */
export const DigitalDocumentPermissionType = /*#__PURE__*/ ns("DigitalDocumentPermissionType");
/** The act of expressing a difference of opinion with the object. An agent disagrees to/about an object (a proposition, topic or theme) with participants. */
export const DisagreeAction = /*#__PURE__*/ ns("DisagreeAction");
/** The act of discovering/finding an object. */
export const DiscoverAction = /*#__PURE__*/ ns("DiscoverAction");
/** A posting to a discussion forum. */
export const DiscussionForumPosting = /*#__PURE__*/ ns("DiscussionForumPosting");
/** The act of expressing a negative sentiment about the object. An agent dislikes an object (a proposition, topic or theme) with participants. */
export const DislikeAction = /*#__PURE__*/ ns("DislikeAction");
/** Properties that take Distances as values are of the form '&lt;Number&gt; &lt;Length unit of measure&gt;'. E.g., '7 ft'. */
export const Distance = /*#__PURE__*/ ns("Distance");
/** A distillery. */
export const Distillery = /*#__PURE__*/ ns("Distillery");
/** The act of providing goods, services, or money without compensation, often for philanthropic reasons. */
export const DonateAction = /*#__PURE__*/ ns("DonateAction");
/** The act of downloading an object. */
export const DownloadAction = /*#__PURE__*/ ns("DownloadAction");
/** The act of producing a visual/graphical representation of an object, typically with a pen/pencil and paper as instruments. */
export const DrawAction = /*#__PURE__*/ ns("DrawAction");
/** The act of swallowing liquids. */
export const DrinkAction = /*#__PURE__*/ ns("DrinkAction");
/** A value indicating which roadwheels will receive torque. */
export const DriveWheelConfigurationValue = /*#__PURE__*/ ns("DriveWheelConfigurationValue");
/** A dry-cleaning business. */
export const DryCleaningOrLaundry = /*#__PURE__*/ ns("DryCleaningOrLaundry");
/** Quantity: Duration (use <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>). */
export const Duration = /*#__PURE__*/ ns("Duration");
/** The act of swallowing solid objects. */
export const EatAction = /*#__PURE__*/ ns("EatAction");
/** Event type: Education event. */
export const EducationEvent = /*#__PURE__*/ ns("EducationEvent");
/** An EducationalAudience. */
export const EducationalAudience = /*#__PURE__*/ ns("EducationalAudience");
/** An educational organization. */
export const EducationalOrganization = /*#__PURE__*/ ns("EducationalOrganization");
/** An electrician. */
export const Electrician = /*#__PURE__*/ ns("Electrician");
/** An electronics store. */
export const ElectronicsStore = /*#__PURE__*/ ns("ElectronicsStore");
/** An elementary school. */
export const ElementarySchool = /*#__PURE__*/ ns("ElementarySchool");
/** An email message. */
export const EmailMessage = /*#__PURE__*/ ns("EmailMessage");
/** An embassy. */
export const Embassy = /*#__PURE__*/ ns("Embassy");
/** An emergency service, such as a fire station or ER. */
export const EmergencyService = /*#__PURE__*/ ns("EmergencyService");
/** A subclass of OrganizationRole used to describe employee relationships. */
export const EmployeeRole = /*#__PURE__*/ ns("EmployeeRole");
/** An aggregate rating of an Organization related to its role as an employer. */
export const EmployerAggregateRating = /*#__PURE__*/ ns("EmployerAggregateRating");
/** An employment agency. */
export const EmploymentAgency = /*#__PURE__*/ ns("EmploymentAgency");
/** An agent approves/certifies/likes/supports/sanction an object. */
export const EndorseAction = /*#__PURE__*/ ns("EndorseAction");
/** An EndorsementRating is a rating that expresses some level of endorsement, for example inclusion in a "critic's pick" blog, a
"Like" or "+1" on a social network. It can be considered the <a class="localLink" href="http://schema.org/result">result</a> of an <a class="localLink" href="http://schema.org/EndorseAction">EndorseAction</a> in which the <a class="localLink" href="http://schema.org/object">object</a> of the action is rated positively by
some <a class="localLink" href="http://schema.org/agent">agent</a>. As is common elsewhere in schema.org, it is sometimes more useful to describe the results of such an action without explicitly describing the <a class="localLink" href="http://schema.org/Action">Action</a>.<br/><br/>

An <a class="localLink" href="http://schema.org/EndorsementRating">EndorsementRating</a> may be part of a numeric scale or organized system, but this is not required: having an explicit type for indicating a positive,
endorsement rating is particularly useful in the absence of numeric scales as it helps consumers understand that the rating is broadly positive. */
export const EndorsementRating = /*#__PURE__*/ ns("EndorsementRating");
/** Properties that take Energy as values are of the form '&lt;Number&gt; &lt;Energy unit of measure&gt;'. */
export const Energy = /*#__PURE__*/ ns("Energy");
/** Information about the engine of the vehicle. A vehicle can have multiple engines represented by multiple engine specification entities. */
export const EngineSpecification = /*#__PURE__*/ ns("EngineSpecification");
/** A business providing entertainment. */
export const EntertainmentBusiness = /*#__PURE__*/ ns("EntertainmentBusiness");
/** An entry point, within some Web-based protocol. */
export const EntryPoint = /*#__PURE__*/ ns("EntryPoint");
/** Lists or enumerations—for example, a list of cuisines or music genres, etc. */
export const Enumeration = /*#__PURE__*/ ns("Enumeration");
/** A media episode (e.g. TV, radio, video game) which can be part of a series or season. */
export const Episode = /*#__PURE__*/ ns("Episode");
/** An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the <a class="localLink" href="http://schema.org/offers">offers</a> property. Repeated events may be structured as separate Event objects. */
export const Event = /*#__PURE__*/ ns("Event");
/** A reservation for an event like a concert, sporting event, or lecture.<br/><br/>

Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>. */
export const EventReservation = /*#__PURE__*/ ns("EventReservation");
/** EventStatusType is an enumeration type whose instances represent several states that an Event may be in. */
export const EventStatusType = /*#__PURE__*/ ns("EventStatusType");
/** An event venue. */
export const EventVenue = /*#__PURE__*/ ns("EventVenue");
/** The act of participating in exertive activity for the purposes of improving health and fitness. */
export const ExerciseAction = /*#__PURE__*/ ns("ExerciseAction");
/** A gym. */
export const ExerciseGym = /*#__PURE__*/ ns("ExerciseGym");
/** Event type: Exhibition event, e.g. at a museum, library, archive, tradeshow, ... */
export const ExhibitionEvent = /*#__PURE__*/ ns("ExhibitionEvent");
/** A <a class="localLink" href="http://schema.org/FAQPage">FAQPage</a> is a <a class="localLink" href="http://schema.org/WebPage">WebPage</a> presenting one or more "<a href="https://en.wikipedia.org/wiki/FAQ">Frequently asked questions</a>" (see also <a class="localLink" href="http://schema.org/QAPage">QAPage</a>). */
export const FAQPage = /*#__PURE__*/ ns("FAQPage");
/** A radio channel that uses FM. */
export const FMRadioChannel = /*#__PURE__*/ ns("FMRadioChannel");
/** A fast-food restaurant. */
export const FastFoodRestaurant = /*#__PURE__*/ ns("FastFoodRestaurant");
/** Event type: Festival. */
export const Festival = /*#__PURE__*/ ns("Festival");
/** The act of capturing sound and moving images on film, video, or digitally. */
export const FilmAction = /*#__PURE__*/ ns("FilmAction");
/** A product provided to consumers and businesses by financial institutions such as banks, insurance companies, brokerage firms, consumer finance companies, and investment companies which comprise the financial services industry. */
export const FinancialProduct = /*#__PURE__*/ ns("FinancialProduct");
/** Financial services business. */
export const FinancialService = /*#__PURE__*/ ns("FinancialService");
/** The act of finding an object.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/SearchAction">SearchAction</a>: FindAction is generally lead by a SearchAction, but not necessarily.</li>
</ul>
 */
export const FindAction = /*#__PURE__*/ ns("FindAction");
/** A fire station. With firemen. */
export const FireStation = /*#__PURE__*/ ns("FireStation");
/** An airline flight. */
export const Flight = /*#__PURE__*/ ns("Flight");
/** A reservation for air travel.<br/><br/>

Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>. */
export const FlightReservation = /*#__PURE__*/ ns("FlightReservation");
/** Data type: Floating number. */
export const Float = /*#__PURE__*/ ns("Float");
/** A florist. */
export const Florist = /*#__PURE__*/ ns("Florist");
/** The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates polled from.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/BefriendAction">BefriendAction</a>: Unlike BefriendAction, FollowAction implies that the connection is <em>not</em> necessarily reciprocal.</li>
<li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, FollowAction implies that the follower acts as an active agent constantly/actively polling for updates.</li>
<li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, FollowAction implies that the agent is interested in continuing receiving updates from the object.</li>
<li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: Unlike JoinAction, FollowAction implies that the agent is interested in getting updates from the object.</li>
<li><a class="localLink" href="http://schema.org/TrackAction">TrackAction</a>: Unlike TrackAction, FollowAction refers to the polling of updates of all aspects of animate objects rather than the location of inanimate objects (e.g. you track a package, but you don't follow it).</li>
</ul>
 */
export const FollowAction = /*#__PURE__*/ ns("FollowAction");
/** A food-related business. */
export const FoodEstablishment = /*#__PURE__*/ ns("FoodEstablishment");
/** A reservation to dine at a food-related business.<br/><br/>

Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. */
export const FoodEstablishmentReservation = /*#__PURE__*/ ns("FoodEstablishmentReservation");
/** Event type: Food event. */
export const FoodEvent = /*#__PURE__*/ ns("FoodEvent");
/** A food service, like breakfast, lunch, or dinner. */
export const FoodService = /*#__PURE__*/ ns("FoodService");
/** A furniture store. */
export const FurnitureStore = /*#__PURE__*/ ns("FurnitureStore");
/** The Game type represents things which are games. These are typically rule-governed recreational activities, e.g. role-playing games in which players assume the role of characters in a fictional setting. */
export const Game = /*#__PURE__*/ ns("Game");
/** Indicates whether this game is multi-player, co-op or single-player. */
export const GamePlayMode = /*#__PURE__*/ ns("GamePlayMode");
/** Server that provides game interaction in a multiplayer game. */
export const GameServer = /*#__PURE__*/ ns("GameServer");
/** Status of a game server. */
export const GameServerStatus = /*#__PURE__*/ ns("GameServerStatus");
/** A garden store. */
export const GardenStore = /*#__PURE__*/ ns("GardenStore");
/** A gas station. */
export const GasStation = /*#__PURE__*/ ns("GasStation");
/** Residence type: Gated community. */
export const GatedResidenceCommunity = /*#__PURE__*/ ns("GatedResidenceCommunity");
/** An enumeration of genders. */
export const GenderType = /*#__PURE__*/ ns("GenderType");
/** A general contractor. */
export const GeneralContractor = /*#__PURE__*/ ns("GeneralContractor");
/** A GeoCircle is a GeoShape representing a circular geographic area. As it is a GeoShape
          it provides the simple textual property 'circle', but also allows the combination of postalCode alongside geoRadius.
          The center of the circle can be indicated via the 'geoMidpoint' property, or more approximately using 'address', 'postalCode'. */
export const GeoCircle = /*#__PURE__*/ ns("GeoCircle");
/** The geographic coordinates of a place or event. */
export const GeoCoordinates = /*#__PURE__*/ ns("GeoCoordinates");
/** The geographic shape of a place. A GeoShape can be described using several properties whose values are based on latitude/longitude pairs. Either whitespace or commas can be used to separate latitude and longitude; whitespace should be used when writing a list of several such points. */
export const GeoShape = /*#__PURE__*/ ns("GeoShape");
/** The act of transferring ownership of an object to a destination. Reciprocal of TakeAction.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/TakeAction">TakeAction</a>: Reciprocal of GiveAction.</li>
<li><a class="localLink" href="http://schema.org/SendAction">SendAction</a>: Unlike SendAction, GiveAction implies that ownership is being transferred (e.g. I may send my laptop to you, but that doesn't mean I'm giving it to you).</li>
</ul>
 */
export const GiveAction = /*#__PURE__*/ ns("GiveAction");
/** A golf course. */
export const GolfCourse = /*#__PURE__*/ ns("GolfCourse");
/** A government building. */
export const GovernmentBuilding = /*#__PURE__*/ ns("GovernmentBuilding");
/** A government office&#x2014;for example, an IRS or DMV office. */
export const GovernmentOffice = /*#__PURE__*/ ns("GovernmentOffice");
/** A governmental organization or agency. */
export const GovernmentOrganization = /*#__PURE__*/ ns("GovernmentOrganization");
/** A permit issued by a government agency. */
export const GovernmentPermit = /*#__PURE__*/ ns("GovernmentPermit");
/** A service provided by a government organization, e.g. food stamps, veterans benefits, etc. */
export const GovernmentService = /*#__PURE__*/ ns("GovernmentService");
/** A grocery store. */
export const GroceryStore = /*#__PURE__*/ ns("GroceryStore");
/** A business that provide Heating, Ventilation and Air Conditioning services. */
export const HVACBusiness = /*#__PURE__*/ ns("HVACBusiness");
/** A hair salon. */
export const HairSalon = /*#__PURE__*/ ns("HairSalon");
/** A hardware store. */
export const HardwareStore = /*#__PURE__*/ ns("HardwareStore");
/** Health and beauty. */
export const HealthAndBeautyBusiness = /*#__PURE__*/ ns("HealthAndBeautyBusiness");
/** A health club. */
export const HealthClub = /*#__PURE__*/ ns("HealthClub");
/** A high school. */
export const HighSchool = /*#__PURE__*/ ns("HighSchool");
/** A Hindu temple. */
export const HinduTemple = /*#__PURE__*/ ns("HinduTemple");
/** A store that sells materials useful or necessary for various hobbies. */
export const HobbyShop = /*#__PURE__*/ ns("HobbyShop");
/** A construction business.<br/><br/>

A HomeAndConstructionBusiness is a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> that provides services around homes and buildings.<br/><br/>

As a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> it can be described as a <a class="localLink" href="http://schema.org/provider">provider</a> of one or more <a class="localLink" href="http://schema.org/Service">Service</a>(s). */
export const HomeAndConstructionBusiness = /*#__PURE__*/ ns("HomeAndConstructionBusiness");
/** A home goods store. */
export const HomeGoodsStore = /*#__PURE__*/ ns("HomeGoodsStore");
/** A hospital. */
export const Hospital = /*#__PURE__*/ ns("Hospital");
/** A hostel - cheap accommodation, often in shared dormitories.
<br /><br />
See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>. */
export const Hostel = /*#__PURE__*/ ns("Hostel");
/** A hotel is an establishment that provides lodging paid on a short-term basis (Source: Wikipedia, the free encyclopedia, see http://en.wikipedia.org/wiki/Hotel).
<br /><br />
See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>. */
export const Hotel = /*#__PURE__*/ ns("Hotel");
/** A hotel room is a single room in a hotel.
<br /><br />
See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>. */
export const HotelRoom = /*#__PURE__*/ ns("HotelRoom");
/** A house is a building or structure that has the ability to be occupied for habitation by humans or other creatures (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/House">http://en.wikipedia.org/wiki/House</a>). */
export const House = /*#__PURE__*/ ns("House");
/** A house painting service. */
export const HousePainter = /*#__PURE__*/ ns("HousePainter");
/** Instructions that explain how to achieve a result by performing a sequence of steps. */
export const HowTo = /*#__PURE__*/ ns("HowTo");
/** A direction indicating a single action to do in the instructions for how to achieve a result. */
export const HowToDirection = /*#__PURE__*/ ns("HowToDirection");
/** An item used as either a tool or supply when performing the instructions for how to to achieve a result. */
export const HowToItem = /*#__PURE__*/ ns("HowToItem");
/** A sub-grouping of steps in the instructions for how to achieve a result (e.g. steps for making a pie crust within a pie recipe). */
export const HowToSection = /*#__PURE__*/ ns("HowToSection");
/** A step in the instructions for how to achieve a result. It is an ordered list with HowToDirection and/or HowToTip items. */
export const HowToStep = /*#__PURE__*/ ns("HowToStep");
/** A supply consumed when performing the instructions for how to achieve a result. */
export const HowToSupply = /*#__PURE__*/ ns("HowToSupply");
/** An explanation in the instructions for how to achieve a result. It provides supplementary information about a technique, supply, author's preference, etc. It can explain what could be done, or what should not be done, but doesn't specify what should be done (see HowToDirection). */
export const HowToTip = /*#__PURE__*/ ns("HowToTip");
/** A tool used (but not consumed) when performing instructions for how to achieve a result. */
export const HowToTool = /*#__PURE__*/ ns("HowToTool");
/** An ice cream shop. */
export const IceCreamShop = /*#__PURE__*/ ns("IceCreamShop");
/** The act of intentionally disregarding the object. An agent ignores an object. */
export const IgnoreAction = /*#__PURE__*/ ns("IgnoreAction");
/** Web page type: Image gallery page. */
export const ImageGallery = /*#__PURE__*/ ns("ImageGallery");
/** An image file. */
export const ImageObject = /*#__PURE__*/ ns("ImageObject");
/** A single, identifiable product instance (e.g. a laptop with a particular serial number). */
export const IndividualProduct = /*#__PURE__*/ ns("IndividualProduct");
/** The act of notifying someone of information pertinent to them, with no expectation of a response. */
export const InformAction = /*#__PURE__*/ ns("InformAction");
/** The act of adding at a specific location in an ordered collection. */
export const InsertAction = /*#__PURE__*/ ns("InsertAction");
/** The act of installing an application. */
export const InstallAction = /*#__PURE__*/ ns("InstallAction");
/** An Insurance agency. */
export const InsuranceAgency = /*#__PURE__*/ ns("InsuranceAgency");
/** A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc. */
export const Intangible = /*#__PURE__*/ ns("Intangible");
/** Data type: Integer. */
export const Integer = /*#__PURE__*/ ns("Integer");
/** The act of interacting with another person or organization. */
export const InteractAction = /*#__PURE__*/ ns("InteractAction");
/** A summary of how users have interacted with this CreativeWork. In most cases, authors will use a subtype to specify the specific type of interaction. */
export const InteractionCounter = /*#__PURE__*/ ns("InteractionCounter");
/** An internet cafe. */
export const InternetCafe = /*#__PURE__*/ ns("InternetCafe");
/** A type of financial product that typically requires the client to transfer funds to a financial service in return for potential beneficial financial return. */
export const InvestmentOrDeposit = /*#__PURE__*/ ns("InvestmentOrDeposit");
/** The act of asking someone to attend an event. Reciprocal of RsvpAction. */
export const InviteAction = /*#__PURE__*/ ns("InviteAction");
/** A statement of the money due for goods or services; a bill. */
export const Invoice = /*#__PURE__*/ ns("Invoice");
/** A list of possible product availability options. */
export const ItemAvailability = /*#__PURE__*/ ns("ItemAvailability");
/** A list of items of any sort&#x2014;for example, Top 10 Movies About Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists, which are often used only for formatting. */
export const ItemList = /*#__PURE__*/ ns("ItemList");
/** Enumerated for values for itemListOrder for indicating how an ordered ItemList is organized. */
export const ItemListOrderType = /*#__PURE__*/ ns("ItemListOrderType");
/** A page devoted to a single item, such as a particular product or hotel. */
export const ItemPage = /*#__PURE__*/ ns("ItemPage");
/** A jewelry store. */
export const JewelryStore = /*#__PURE__*/ ns("JewelryStore");
/** A listing that describes a job opening in a certain organization. */
export const JobPosting = /*#__PURE__*/ ns("JobPosting");
/** An agent joins an event/group with participants/friends at a location.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, JoinAction refers to joining a group/team of people.</li>
<li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, JoinAction does not imply that you'll be receiving updates.</li>
<li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, JoinAction does not imply that you'll be polling for updates.</li>
</ul>
 */
export const JoinAction = /*#__PURE__*/ ns("JoinAction");
/** A lake (for example, Lake Pontrachain). */
export const LakeBodyOfWater = /*#__PURE__*/ ns("LakeBodyOfWater");
/** A landform or physical feature.  Landform elements include mountains, plains, lakes, rivers, seascape and oceanic waterbody interface features such as bays, peninsulas, seas and so forth, including sub-aqueous terrain features such as submersed mountain ranges, volcanoes, and the great ocean basins. */
export const Landform = /*#__PURE__*/ ns("Landform");
/** An historical landmark or building. */
export const LandmarksOrHistoricalBuildings = /*#__PURE__*/ ns("LandmarksOrHistoricalBuildings");
/** Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in <a href="https://en.wikipedia.org/wiki/IETF_language_tag">BCP 47</a> can be used via the <a class="localLink" href="http://schema.org/alternateName">alternateName</a> property. The Language type previously also covered programming languages such as Scheme and Lisp, which are now best represented using <a class="localLink" href="http://schema.org/ComputerLanguage">ComputerLanguage</a>. */
export const Language = /*#__PURE__*/ ns("Language");
/** An agent leaves an event / group with participants/friends at a location.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: The antonym of LeaveAction.</li>
<li><a class="localLink" href="http://schema.org/UnRegisterAction">UnRegisterAction</a>: Unlike UnRegisterAction, LeaveAction implies leaving a group/team of people rather than a service.</li>
</ul>
 */
export const LeaveAction = /*#__PURE__*/ ns("LeaveAction");
/** A LegalService is a business that provides legally-oriented services, advice and representation, e.g. law firms.<br/><br/>

As a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> it can be described as a <a class="localLink" href="http://schema.org/provider">provider</a> of one or more <a class="localLink" href="http://schema.org/Service">Service</a>(s). */
export const LegalService = /*#__PURE__*/ ns("LegalService");
/** A legislative building&#x2014;for example, the state capitol. */
export const LegislativeBuilding = /*#__PURE__*/ ns("LegislativeBuilding");
/** The act of providing an object under an agreement that it will be returned at a later date. Reciprocal of BorrowAction.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/BorrowAction">BorrowAction</a>: Reciprocal of LendAction.</li>
</ul>
 */
export const LendAction = /*#__PURE__*/ ns("LendAction");
/** A library. */
export const Library = /*#__PURE__*/ ns("Library");
/** The act of expressing a positive sentiment about the object. An agent likes an object (a proposition, topic or theme) with participants. */
export const LikeAction = /*#__PURE__*/ ns("LikeAction");
/** A shop that sells alcoholic drinks such as wine, beer, whisky and other spirits. */
export const LiquorStore = /*#__PURE__*/ ns("LiquorStore");
/** An list item, e.g. a step in a checklist or how-to description. */
export const ListItem = /*#__PURE__*/ ns("ListItem");
/** The act of consuming audio content. */
export const ListenAction = /*#__PURE__*/ ns("ListenAction");
/** Event type: Literary event. */
export const LiteraryEvent = /*#__PURE__*/ ns("LiteraryEvent");
/** A blog post intended to provide a rolling textual coverage of an ongoing event through continuous updates. */
export const LiveBlogPosting = /*#__PURE__*/ ns("LiveBlogPosting");
/** A financial product for the loaning of an amount of money under agreed terms and charges. */
export const LoanOrCredit = /*#__PURE__*/ ns("LoanOrCredit");
/** A particular physical business or branch of an organization. Examples of LocalBusiness include a restaurant, a particular branch of a restaurant chain, a branch of a bank, a medical practice, a club, a bowling alley, etc. */
export const LocalBusiness = /*#__PURE__*/ ns("LocalBusiness");
/** Specifies a location feature by providing a structured value representing a feature of an accommodation as a property-value pair of varying degrees of formality. */
export const LocationFeatureSpecification = /*#__PURE__*/ ns("LocationFeatureSpecification");
/** A DeliveryMethod in which an item is made available via locker. */
export const LockerDelivery = /*#__PURE__*/ ns("LockerDelivery");
/** A locksmith. */
export const Locksmith = /*#__PURE__*/ ns("Locksmith");
/** A lodging business, such as a motel, hotel, or inn. */
export const LodgingBusiness = /*#__PURE__*/ ns("LodgingBusiness");
/** A reservation for lodging at a hotel, motel, inn, etc.<br/><br/>

Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. */
export const LodgingReservation = /*#__PURE__*/ ns("LodgingReservation");
/** The act of being defeated in a competitive activity. */
export const LoseAction = /*#__PURE__*/ ns("LoseAction");
/** A map. */
export const Map = /*#__PURE__*/ ns("Map");
/** An enumeration of several kinds of Map. */
export const MapCategoryType = /*#__PURE__*/ ns("MapCategoryType");
/** The act of marrying a person. */
export const MarryAction = /*#__PURE__*/ ns("MarryAction");
/** Properties that take Mass as values are of the form '&lt;Number&gt; &lt;Mass unit of measure&gt;'. E.g., '7 kg'. */
export const Mass = /*#__PURE__*/ ns("Mass");
/** A media object, such as an image, video, or audio object embedded in a web page or a downloadable dataset i.e. DataDownload. Note that a creative work may have many media objects associated with it on the same web page. For example, a page about a single song (MusicRecording) may have a music video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's). */
export const MediaObject = /*#__PURE__*/ ns("MediaObject");
/** A subscription which allows a user to access media including audio, video, books, etc. */
export const MediaSubscription = /*#__PURE__*/ ns("MediaSubscription");
/** A medical organization (physical or not), such as hospital, institution or clinic. */
export const MedicalOrganization = /*#__PURE__*/ ns("MedicalOrganization");
/** A meeting room, conference room, or conference hall is a room provided for singular events such as business conferences and meetings (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Conference_hall">http://en.wikipedia.org/wiki/Conference_hall</a>).
<br /><br />
See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>. */
export const MeetingRoom = /*#__PURE__*/ ns("MeetingRoom");
/** A men's clothing store. */
export const MensClothingStore = /*#__PURE__*/ ns("MensClothingStore");
/** A structured representation of food or drink items available from a FoodEstablishment. */
export const Menu = /*#__PURE__*/ ns("Menu");
/** A food or drink item listed in a menu or menu section. */
export const MenuItem = /*#__PURE__*/ ns("MenuItem");
/** A sub-grouping of food or drink items in a menu. E.g. courses (such as 'Dinner', 'Breakfast', etc.), specific type of dishes (such as 'Meat', 'Vegan', 'Drinks', etc.), or some other classification made by the menu provider. */
export const MenuSection = /*#__PURE__*/ ns("MenuSection");
/** A single message from a sender to one or more organizations or people. */
export const Message = /*#__PURE__*/ ns("Message");
/** A middle school (typically for children aged around 11-14, although this varies somewhat). */
export const MiddleSchool = /*#__PURE__*/ ns("MiddleSchool");
/** A software application designed specifically to work well on a mobile device such as a telephone. */
export const MobileApplication = /*#__PURE__*/ ns("MobileApplication");
/** A store that sells mobile phones and related accessories. */
export const MobilePhoneStore = /*#__PURE__*/ ns("MobilePhoneStore");
/** A monetary value or range. This type can be used to describe an amount of money such as $50 USD, or a range as in describing a bank account being suitable for a balance between £1,000 and £1,000,000 GBP, or the value of a salary, etc. It is recommended to use <a class="localLink" href="http://schema.org/PriceSpecification">PriceSpecification</a> Types to describe the price of an Offer, Invoice, etc. */
export const MonetaryAmount = /*#__PURE__*/ ns("MonetaryAmount");
/** A statistical distribution of monetary amounts. */
export const MonetaryAmountDistribution = /*#__PURE__*/ ns("MonetaryAmountDistribution");
/** A mosque. */
export const Mosque = /*#__PURE__*/ ns("Mosque");
/** A motel.
<br /><br />
See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>. */
export const Motel = /*#__PURE__*/ ns("Motel");
/** A motorcycle dealer. */
export const MotorcycleDealer = /*#__PURE__*/ ns("MotorcycleDealer");
/** A motorcycle repair shop. */
export const MotorcycleRepair = /*#__PURE__*/ ns("MotorcycleRepair");
/** A mountain, like Mount Whitney or Mount Everest. */
export const Mountain = /*#__PURE__*/ ns("Mountain");
/** The act of an agent relocating to a place.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/TransferAction">TransferAction</a>: Unlike TransferAction, the subject of the move is a living Person or Organization rather than an inanimate object.</li>
</ul>
 */
export const MoveAction = /*#__PURE__*/ ns("MoveAction");
/** A movie. */
export const Movie = /*#__PURE__*/ ns("Movie");
/** A short segment/part of a movie. */
export const MovieClip = /*#__PURE__*/ ns("MovieClip");
/** A movie rental store. */
export const MovieRentalStore = /*#__PURE__*/ ns("MovieRentalStore");
/** A series of movies. Included movies can be indicated with the hasPart property. */
export const MovieSeries = /*#__PURE__*/ ns("MovieSeries");
/** A movie theater. */
export const MovieTheater = /*#__PURE__*/ ns("MovieTheater");
/** A moving company. */
export const MovingCompany = /*#__PURE__*/ ns("MovingCompany");
/** A museum. */
export const Museum = /*#__PURE__*/ ns("Museum");
/** A collection of music tracks. */
export const MusicAlbum = /*#__PURE__*/ ns("MusicAlbum");
/** Classification of the album by it's type of content: soundtrack, live album, studio album, etc. */
export const MusicAlbumProductionType = /*#__PURE__*/ ns("MusicAlbumProductionType");
/** The kind of release which this album is: single, EP or album. */
export const MusicAlbumReleaseType = /*#__PURE__*/ ns("MusicAlbumReleaseType");
/** A musical composition. */
export const MusicComposition = /*#__PURE__*/ ns("MusicComposition");
/** Event type: Music event. */
export const MusicEvent = /*#__PURE__*/ ns("MusicEvent");
/** A musical group, such as a band, an orchestra, or a choir. Can also be a solo musician. */
export const MusicGroup = /*#__PURE__*/ ns("MusicGroup");
/** A collection of music tracks in playlist form. */
export const MusicPlaylist = /*#__PURE__*/ ns("MusicPlaylist");
/** A music recording (track), usually a single song. */
export const MusicRecording = /*#__PURE__*/ ns("MusicRecording");
/** A MusicRelease is a specific release of a music album. */
export const MusicRelease = /*#__PURE__*/ ns("MusicRelease");
/** Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.). */
export const MusicReleaseFormatType = /*#__PURE__*/ ns("MusicReleaseFormatType");
/** A music store. */
export const MusicStore = /*#__PURE__*/ ns("MusicStore");
/** A music venue. */
export const MusicVenue = /*#__PURE__*/ ns("MusicVenue");
/** A music video file. */
export const MusicVideoObject = /*#__PURE__*/ ns("MusicVideoObject");
/** Organization: Non-governmental Organization. */
export const NGO = /*#__PURE__*/ ns("NGO");
/** A nail salon. */
export const NailSalon = /*#__PURE__*/ ns("NailSalon");
/** A NewsArticle is an article whose content reports news, or provides background context and supporting materials for understanding the news.<br/><br/>

A more detailed overview of <a href="/docs/news.html">schema.org News markup</a> is also available. */
export const NewsArticle = /*#__PURE__*/ ns("NewsArticle");
/** A nightclub or discotheque. */
export const NightClub = /*#__PURE__*/ ns("NightClub");
/** A notary. */
export const Notary = /*#__PURE__*/ ns("Notary");
/** A file containing a note, primarily for the author. */
export const NoteDigitalDocument = /*#__PURE__*/ ns("NoteDigitalDocument");
/** Data type: Number.<br/><br/>

Usage guidelines:<br/><br/>

<ul>
<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
</ul>
 */
export const Number = /*#__PURE__*/ ns("Number");
/** Nutritional information about the recipe. */
export const NutritionInformation = /*#__PURE__*/ ns("NutritionInformation");
/** A profession, may involve prolonged training and/or a formal qualification. */
export const Occupation = /*#__PURE__*/ ns("Occupation");
/** An ocean (for example, the Pacific). */
export const OceanBodyOfWater = /*#__PURE__*/ ns("OceanBodyOfWater");
/** An offer to transfer some rights to an item or to provide a service — for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book.<br/><br/>

For <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GTIN</a>-related fields, see <a href="http://www.gs1.org/barcodes/support/check_digit_calculator">Check Digit calculator</a> and <a href="http://www.gs1us.org/resources/standards/gtin-validation-guide">validation guide</a> from <a href="http://www.gs1.org/">GS1</a>. */
export const Offer = /*#__PURE__*/ ns("Offer");
/** An OfferCatalog is an ItemList that contains related Offers and/or further OfferCatalogs that are offeredBy the same provider. */
export const OfferCatalog = /*#__PURE__*/ ns("OfferCatalog");
/** A list of possible conditions for the item. */
export const OfferItemCondition = /*#__PURE__*/ ns("OfferItemCondition");
/** An office equipment store. */
export const OfficeEquipmentStore = /*#__PURE__*/ ns("OfficeEquipmentStore");
/** A publication event e.g. catch-up TV or radio podcast, during which a program is available on-demand. */
export const OnDemandEvent = /*#__PURE__*/ ns("OnDemandEvent");
/** A structured value providing information about the opening hours of a place or a certain service inside a place.<br/><br/>

The place is <strong>open</strong> if the <a class="localLink" href="http://schema.org/opens">opens</a> property is specified, and <strong>closed</strong> otherwise.<br/><br/>

If the value for the <a class="localLink" href="http://schema.org/closes">closes</a> property is less than the value for the <a class="localLink" href="http://schema.org/opens">opens</a> property then the hour range is assumed to span over the next day. */
export const OpeningHoursSpecification = /*#__PURE__*/ ns("OpeningHoursSpecification");
/** An order is a confirmation of a transaction (a receipt), which can contain multiple line items, each represented by an Offer that has been accepted by the customer. */
export const Order = /*#__PURE__*/ ns("Order");
/** An agent orders an object/product/service to be delivered/sent. */
export const OrderAction = /*#__PURE__*/ ns("OrderAction");
/** An order item is a line of an order. It includes the quantity and shipping details of a bought offer. */
export const OrderItem = /*#__PURE__*/ ns("OrderItem");
/** Enumerated status values for Order. */
export const OrderStatus = /*#__PURE__*/ ns("OrderStatus");
/** An organization such as a school, NGO, corporation, club, etc. */
export const Organization = /*#__PURE__*/ ns("Organization");
/** A subclass of Role used to describe roles within organizations. */
export const OrganizationRole = /*#__PURE__*/ ns("OrganizationRole");
/** The act of manipulating/administering/supervising/controlling one or more objects. */
export const OrganizeAction = /*#__PURE__*/ ns("OrganizeAction");
/** An outlet store. */
export const OutletStore = /*#__PURE__*/ ns("OutletStore");
/** A structured value providing information about when a certain organization or person owned a certain product. */
export const OwnershipInfo = /*#__PURE__*/ ns("OwnershipInfo");
/** The act of producing a painting, typically with paint and canvas as instruments. */
export const PaintAction = /*#__PURE__*/ ns("PaintAction");
/** A painting. */
export const Painting = /*#__PURE__*/ ns("Painting");
/** The delivery of a parcel either via the postal service or a commercial service. */
export const ParcelDelivery = /*#__PURE__*/ ns("ParcelDelivery");
/** A private parcel service as the delivery mode available for a certain offer.<br/><br/>

Commonly used values:<br/><br/>

<ul>
<li>http://purl.org/goodrelations/v1#DHL</li>
<li>http://purl.org/goodrelations/v1#FederalExpress</li>
<li>http://purl.org/goodrelations/v1#UPS</li>
</ul>
 */
export const ParcelService = /*#__PURE__*/ ns("ParcelService");
/** A set of characteristics describing parents, who can be interested in viewing some content. */
export const ParentAudience = /*#__PURE__*/ ns("ParentAudience");
/** A park. */
export const Park = /*#__PURE__*/ ns("Park");
/** A parking lot or other parking facility. */
export const ParkingFacility = /*#__PURE__*/ ns("ParkingFacility");
/** A shop that will buy, or lend money against the security of, personal possessions. */
export const PawnShop = /*#__PURE__*/ ns("PawnShop");
/** An agent pays a price to a participant. */
export const PayAction = /*#__PURE__*/ ns("PayAction");
/** A payment method using a credit, debit, store or other card to associate the payment with an account. */
export const PaymentCard = /*#__PURE__*/ ns("PaymentCard");
/** The costs of settling the payment using a particular payment method. */
export const PaymentChargeSpecification = /*#__PURE__*/ ns("PaymentChargeSpecification");
/** A payment method is a standardized procedure for transferring the monetary amount for a purchase. Payment methods are characterized by the legal and technical structures used, and by the organization or group carrying out the transaction.<br/><br/>

Commonly used values:<br/><br/>

<ul>
<li>http://purl.org/goodrelations/v1#ByBankTransferInAdvance</li>
<li>http://purl.org/goodrelations/v1#ByInvoice</li>
<li>http://purl.org/goodrelations/v1#Cash</li>
<li>http://purl.org/goodrelations/v1#CheckInAdvance</li>
<li>http://purl.org/goodrelations/v1#COD</li>
<li>http://purl.org/goodrelations/v1#DirectDebit</li>
<li>http://purl.org/goodrelations/v1#GoogleCheckout</li>
<li>http://purl.org/goodrelations/v1#PayPal</li>
<li>http://purl.org/goodrelations/v1#PaySwarm</li>
</ul>
 */
export const PaymentMethod = /*#__PURE__*/ ns("PaymentMethod");
/** A Service to transfer funds from a person or organization to a beneficiary person or organization. */
export const PaymentService = /*#__PURE__*/ ns("PaymentService");
/** A specific payment status. For example, PaymentDue, PaymentComplete, etc. */
export const PaymentStatusType = /*#__PURE__*/ ns("PaymentStatusType");
/** A set of characteristics belonging to people, e.g. who compose an item's target audience. */
export const PeopleAudience = /*#__PURE__*/ ns("PeopleAudience");
/** The act of participating in performance arts. */
export const PerformAction = /*#__PURE__*/ ns("PerformAction");
/** A PerformanceRole is a Role that some entity places with regard to a theatrical performance, e.g. in a Movie, TVSeries etc. */
export const PerformanceRole = /*#__PURE__*/ ns("PerformanceRole");
/** A theater or other performing art center. */
export const PerformingArtsTheater = /*#__PURE__*/ ns("PerformingArtsTheater");
/** A performance group, such as a band, an orchestra, or a circus. */
export const PerformingGroup = /*#__PURE__*/ ns("PerformingGroup");
/** A publication in any medium issued in successive parts bearing numerical or chronological designations and intended, such as a magazine, scholarly journal, or newspaper to continue indefinitely.<br/><br/>

See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>. */
export const Periodical = /*#__PURE__*/ ns("Periodical");
/** A permit issued by an organization, e.g. a parking pass. */
export const Permit = /*#__PURE__*/ ns("Permit");
/** A person (alive, dead, undead, or fictional). */
export const Person = /*#__PURE__*/ ns("Person");
/** A pet store. */
export const PetStore = /*#__PURE__*/ ns("PetStore");
/** A pharmacy or drugstore. */
export const Pharmacy = /*#__PURE__*/ ns("Pharmacy");
/** A photograph. */
export const Photograph = /*#__PURE__*/ ns("Photograph");
/** The act of capturing still images of objects using a camera. */
export const PhotographAction = /*#__PURE__*/ ns("PhotographAction");
/** A doctor's office. */
export const Physician = /*#__PURE__*/ ns("Physician");
/** Entities that have a somewhat fixed, physical extension. */
export const Place = /*#__PURE__*/ ns("Place");
/** Place of worship, such as a church, synagogue, or mosque. */
export const PlaceOfWorship = /*#__PURE__*/ ns("PlaceOfWorship");
/** The act of planning the execution of an event/task/action/reservation/plan to a future date. */
export const PlanAction = /*#__PURE__*/ ns("PlanAction");
/** The act of playing/exercising/training/performing for enjoyment, leisure, recreation, Competition or exercise.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/ListenAction">ListenAction</a>: Unlike ListenAction (which is under ConsumeAction), PlayAction refers to performing for an audience or at an event, rather than consuming music.</li>
<li><a class="localLink" href="http://schema.org/WatchAction">WatchAction</a>: Unlike WatchAction (which is under ConsumeAction), PlayAction refers to showing/displaying for an audience or at an event, rather than consuming visual content.</li>
</ul>
 */
export const PlayAction = /*#__PURE__*/ ns("PlayAction");
/** A playground. */
export const Playground = /*#__PURE__*/ ns("Playground");
/** A plumbing service. */
export const Plumber = /*#__PURE__*/ ns("Plumber");
/** A police station. */
export const PoliceStation = /*#__PURE__*/ ns("PoliceStation");
/** A pond. */
export const Pond = /*#__PURE__*/ ns("Pond");
/** A post office. */
export const PostOffice = /*#__PURE__*/ ns("PostOffice");
/** The mailing address. */
export const PostalAddress = /*#__PURE__*/ ns("PostalAddress");
/** An agent orders a (not yet released) object/product/service to be delivered/sent. */
export const PreOrderAction = /*#__PURE__*/ ns("PreOrderAction");
/** The act of inserting at the beginning if an ordered collection. */
export const PrependAction = /*#__PURE__*/ ns("PrependAction");
/** A preschool. */
export const Preschool = /*#__PURE__*/ ns("Preschool");
/** A file containing slides or used for a presentation. */
export const PresentationDigitalDocument = /*#__PURE__*/ ns("PresentationDigitalDocument");
/** A structured value representing a price or price range. Typically, only the subclasses of this type are used for markup. It is recommended to use <a class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a> to describe independent amounts of money such as a salary, credit card limits, etc. */
export const PriceSpecification = /*#__PURE__*/ ns("PriceSpecification");
/** Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online. */
export const Product = /*#__PURE__*/ ns("Product");
/** A datasheet or vendor specification of a product (in the sense of a prototypical description). */
export const ProductModel = /*#__PURE__*/ ns("ProductModel");
/** Original definition: "provider of professional services."<br/><br/>

The general <a class="localLink" href="http://schema.org/ProfessionalService">ProfessionalService</a> type for local businesses was deprecated due to confusion with <a class="localLink" href="http://schema.org/Service">Service</a>. For reference, the types that it included were: <a class="localLink" href="http://schema.org/Dentist">Dentist</a>,
        <a class="localLink" href="http://schema.org/AccountingService">AccountingService</a>, <a class="localLink" href="http://schema.org/Attorney">Attorney</a>, <a class="localLink" href="http://schema.org/Notary">Notary</a>, as well as types for several kinds of <a class="localLink" href="http://schema.org/HomeAndConstructionBusiness">HomeAndConstructionBusiness</a>: <a class="localLink" href="http://schema.org/Electrician">Electrician</a>, <a class="localLink" href="http://schema.org/GeneralContractor">GeneralContractor</a>,
        <a class="localLink" href="http://schema.org/HousePainter">HousePainter</a>, <a class="localLink" href="http://schema.org/Locksmith">Locksmith</a>, <a class="localLink" href="http://schema.org/Plumber">Plumber</a>, <a class="localLink" href="http://schema.org/RoofingContractor">RoofingContractor</a>. <a class="localLink" href="http://schema.org/LegalService">LegalService</a> was introduced as a more inclusive supertype of <a class="localLink" href="http://schema.org/Attorney">Attorney</a>. */
export const ProfessionalService = /*#__PURE__*/ ns("ProfessionalService");
/** Web page type: Profile page. */
export const ProfilePage = /*#__PURE__*/ ns("ProfilePage");
/** Used to describe membership in a loyalty programs (e.g. "StarAliance"), traveler clubs (e.g. "AAA"), purchase clubs ("Safeway Club"), etc. */
export const ProgramMembership = /*#__PURE__*/ ns("ProgramMembership");
/** A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name of the property. If there is an additional human-readable version of the value, put that into the 'description' property.<br/><br/>

Always use specific schema.org properties when a) they exist and b) you can populate them. Using PropertyValue as a substitute will typically not trigger the same effect as using the original, specific property. */
export const PropertyValue = /*#__PURE__*/ ns("PropertyValue");
/** A Property value specification. */
export const PropertyValueSpecification = /*#__PURE__*/ ns("PropertyValueSpecification");
/** A public swimming pool. */
export const PublicSwimmingPool = /*#__PURE__*/ ns("PublicSwimmingPool");
/** A PublicationEvent corresponds indifferently to the event of publication for a CreativeWork of any type e.g. a broadcast event, an on-demand event, a book/journal publication via a variety of delivery media. */
export const PublicationEvent = /*#__PURE__*/ ns("PublicationEvent");
/** A part of a successively published publication such as a periodical or publication volume, often numbered, usually containing a grouping of works such as articles.<br/><br/>

See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>. */
export const PublicationIssue = /*#__PURE__*/ ns("PublicationIssue");
/** A part of a successively published publication such as a periodical or multi-volume work, often numbered. It may represent a time span, such as a year.<br/><br/>

See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>. */
export const PublicationVolume = /*#__PURE__*/ ns("PublicationVolume");
/** A QAPage is a WebPage focussed on a specific Question and its Answer(s), e.g. in a question answering site or documenting Frequently Asked Questions (FAQs). */
export const QAPage = /*#__PURE__*/ ns("QAPage");
/** A predefined value for a product characteristic, e.g. the power cord plug type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'. */
export const QualitativeValue = /*#__PURE__*/ ns("QualitativeValue");
/** A point value or interval for product characteristics and other purposes. */
export const QuantitativeValue = /*#__PURE__*/ ns("QuantitativeValue");
/** A statistical distribution of values. */
export const QuantitativeValueDistribution = /*#__PURE__*/ ns("QuantitativeValueDistribution");
/** Quantities such as distance, time, mass, weight, etc. Particular instances of say Mass are entities like '3 Kg' or '4 milligrams'. */
export const Quantity = /*#__PURE__*/ ns("Quantity");
/** A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document. */
export const Question = /*#__PURE__*/ ns("Question");
/** An agent quotes/estimates/appraises an object/product/service with a price at a location/store. */
export const QuoteAction = /*#__PURE__*/ ns("QuoteAction");
/** A place offering space for "Recreational Vehicles", Caravans, mobile homes and the like. */
export const RVPark = /*#__PURE__*/ ns("RVPark");
/** A unique instance of a radio BroadcastService on a CableOrSatelliteService lineup. */
export const RadioChannel = /*#__PURE__*/ ns("RadioChannel");
/** A short radio program or a segment/part of a radio program. */
export const RadioClip = /*#__PURE__*/ ns("RadioClip");
/** A radio episode which can be part of a series or season. */
export const RadioEpisode = /*#__PURE__*/ ns("RadioEpisode");
/** Season dedicated to radio broadcast and associated online delivery. */
export const RadioSeason = /*#__PURE__*/ ns("RadioSeason");
/** CreativeWorkSeries dedicated to radio broadcast and associated online delivery. */
export const RadioSeries = /*#__PURE__*/ ns("RadioSeries");
/** A radio station. */
export const RadioStation = /*#__PURE__*/ ns("RadioStation");
/** A rating is an evaluation on a numeric scale, such as 1 to 5 stars. */
export const Rating = /*#__PURE__*/ ns("Rating");
/** The act of responding instinctively and emotionally to an object, expressing a sentiment. */
export const ReactAction = /*#__PURE__*/ ns("ReactAction");
/** The act of consuming written content. */
export const ReadAction = /*#__PURE__*/ ns("ReadAction");
/** A real-estate agent. */
export const RealEstateAgent = /*#__PURE__*/ ns("RealEstateAgent");
/** The act of physically/electronically taking delivery of an object thathas been transferred from an origin to a destination. Reciprocal of SendAction.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/SendAction">SendAction</a>: The reciprocal of ReceiveAction.</li>
<li><a class="localLink" href="http://schema.org/TakeAction">TakeAction</a>: Unlike TakeAction, ReceiveAction does not imply that the ownership has been transfered (e.g. I can receive a package, but it does not mean the package is now mine).</li>
</ul>
 */
export const ReceiveAction = /*#__PURE__*/ ns("ReceiveAction");
/** A recipe. For dietary restrictions covered by the recipe, a few common restrictions are enumerated via <a class="localLink" href="http://schema.org/suitableForDiet">suitableForDiet</a>. The <a class="localLink" href="http://schema.org/keywords">keywords</a> property can also be used to add more detail. */
export const Recipe = /*#__PURE__*/ ns("Recipe");
/** A recycling center. */
export const RecyclingCenter = /*#__PURE__*/ ns("RecyclingCenter");
/** The act of registering to be a user of a service, product or web page.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: Unlike JoinAction, RegisterAction implies you are registering to be a user of a service, <em>not</em> a group/team of people.</li>
<li>[FollowAction]]: Unlike FollowAction, RegisterAction doesn't imply that the agent is expecting to poll for updates from the object.</li>
<li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, RegisterAction doesn't imply that the agent is expecting updates from the object.</li>
</ul>
 */
export const RegisterAction = /*#__PURE__*/ ns("RegisterAction");
/** The act of rejecting to/adopting an object.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/AcceptAction">AcceptAction</a>: The antonym of RejectAction.</li>
</ul>
 */
export const RejectAction = /*#__PURE__*/ ns("RejectAction");
/** The act of giving money in return for temporary use, but not ownership, of an object such as a vehicle or property. For example, an agent rents a property from a landlord in exchange for a periodic payment. */
export const RentAction = /*#__PURE__*/ ns("RentAction");
/** A reservation for a rental car.<br/><br/>

Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. */
export const RentalCarReservation = /*#__PURE__*/ ns("RentalCarReservation");
/** The act of editing a recipient by replacing an old object with a new object. */
export const ReplaceAction = /*#__PURE__*/ ns("ReplaceAction");
/** The act of responding to a question/message asked/sent by the object. Related to <a class="localLink" href="http://schema.org/AskAction">AskAction</a><br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/AskAction">AskAction</a>: Appears generally as an origin of a ReplyAction.</li>
</ul>
 */
export const ReplyAction = /*#__PURE__*/ ns("ReplyAction");
/** A Report generated by governmental or non-governmental organization. */
export const Report = /*#__PURE__*/ ns("Report");
/** Describes a reservation for travel, dining or an event. Some reservations require tickets. <br/><br/>

Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, restaurant reservations, flights, or rental cars, use <a class="localLink" href="http://schema.org/Offer">Offer</a>. */
export const Reservation = /*#__PURE__*/ ns("Reservation");
/** A group of multiple reservations with common values for all sub-reservations. */
export const ReservationPackage = /*#__PURE__*/ ns("ReservationPackage");
/** Enumerated status values for Reservation. */
export const ReservationStatusType = /*#__PURE__*/ ns("ReservationStatusType");
/** Reserving a concrete object.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/ScheduleAction">ScheduleAction</a></a>: Unlike ScheduleAction, ReserveAction reserves concrete objects (e.g. a table, a hotel) towards a time slot / spatial allocation.</li>
</ul>
 */
export const ReserveAction = /*#__PURE__*/ ns("ReserveAction");
/** A reservoir of water, typically an artificially created lake, like the Lake Kariba reservoir. */
export const Reservoir = /*#__PURE__*/ ns("Reservoir");
/** The place where a person lives. */
export const Residence = /*#__PURE__*/ ns("Residence");
/** A resort is a place used for relaxation or recreation, attracting visitors for holidays or vacations. Resorts are places, towns or sometimes commercial establishment operated by a single company (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Resort">http://en.wikipedia.org/wiki/Resort</a>).
<br /><br />
See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>. */
export const Resort = /*#__PURE__*/ ns("Resort");
/** A restaurant. */
export const Restaurant = /*#__PURE__*/ ns("Restaurant");
/** A diet restricted to certain foods or preparations for cultural, religious, health or lifestyle reasons. */
export const RestrictedDiet = /*#__PURE__*/ ns("RestrictedDiet");
/** The act of resuming a device or application which was formerly paused (e.g. resume music playback or resume a timer). */
export const ResumeAction = /*#__PURE__*/ ns("ResumeAction");
/** The act of returning to the origin that which was previously received (concrete objects) or taken (ownership). */
export const ReturnAction = /*#__PURE__*/ ns("ReturnAction");
/** A review of an item - for example, of a restaurant, movie, or store. */
export const Review = /*#__PURE__*/ ns("Review");
/** The act of producing a balanced opinion about the object for an audience. An agent reviews an object with participants resulting in a review. */
export const ReviewAction = /*#__PURE__*/ ns("ReviewAction");
/** A river (for example, the broad majestic Shannon). */
export const RiverBodyOfWater = /*#__PURE__*/ ns("RiverBodyOfWater");
/** Represents additional information about a relationship or property. For example a Role can be used to say that a 'member' role linking some SportsTeam to a player occurred during a particular time period. Or that a Person's 'actor' role in a Movie was for some particular characterName. Such properties can be attached to a Role entity, which is then associated with the main entities using ordinary properties like 'member' or 'actor'.<br/><br/>

See also <a href="http://blog.schema.org/2014/06/introducing-role.html">blog post</a>. */
export const Role = /*#__PURE__*/ ns("Role");
/** A roofing contractor. */
export const RoofingContractor = /*#__PURE__*/ ns("RoofingContractor");
/** A room is a distinguishable space within a structure, usually separated from other spaces by interior walls. (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Room">http://en.wikipedia.org/wiki/Room</a>).
<br /><br />
See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>. */
export const Room = /*#__PURE__*/ ns("Room");
/** The act of notifying an event organizer as to whether you expect to attend the event. */
export const RsvpAction = /*#__PURE__*/ ns("RsvpAction");
/** RsvpResponseType is an enumeration type whose instances represent responding to an RSVP request. */
export const RsvpResponseType = /*#__PURE__*/ ns("RsvpResponseType");
/** Event type: Sales event. */
export const SaleEvent = /*#__PURE__*/ ns("SaleEvent");
/** Scheduling future actions, events, or tasks.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/ReserveAction">ReserveAction</a>: Unlike ReserveAction, ScheduleAction allocates future actions (e.g. an event, a task, etc) towards a time slot / spatial allocation.</li>
</ul>
 */
export const ScheduleAction = /*#__PURE__*/ ns("ScheduleAction");
/** A scholarly article. */
export const ScholarlyArticle = /*#__PURE__*/ ns("ScholarlyArticle");
/** A school. */
export const School = /*#__PURE__*/ ns("School");
/** A screening of a movie or other video. */
export const ScreeningEvent = /*#__PURE__*/ ns("ScreeningEvent");
/** A piece of sculpture. */
export const Sculpture = /*#__PURE__*/ ns("Sculpture");
/** A sea (for example, the Caspian sea). */
export const SeaBodyOfWater = /*#__PURE__*/ ns("SeaBodyOfWater");
/** The act of searching for an object.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/FindAction">FindAction</a>: SearchAction generally leads to a FindAction, but not necessarily.</li>
</ul>
 */
export const SearchAction = /*#__PURE__*/ ns("SearchAction");
/** Web page type: Search results page. */
export const SearchResultsPage = /*#__PURE__*/ ns("SearchResultsPage");
/** A media season e.g. tv, radio, video game etc. */
export const Season = /*#__PURE__*/ ns("Season");
/** Used to describe a seat, such as a reserved seat in an event reservation. */
export const Seat = /*#__PURE__*/ ns("Seat");
/** A self-storage facility. */
export const SelfStorage = /*#__PURE__*/ ns("SelfStorage");
/** The act of taking money from a buyer in exchange for goods or services rendered. An agent sells an object, product, or service to a buyer for a price. Reciprocal of BuyAction. */
export const SellAction = /*#__PURE__*/ ns("SellAction");
/** The act of physically/electronically dispatching an object for transfer from an origin to a destination.Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/ReceiveAction">ReceiveAction</a>: The reciprocal of SendAction.</li>
<li><a class="localLink" href="http://schema.org/GiveAction">GiveAction</a>: Unlike GiveAction, SendAction does not imply the transfer of ownership (e.g. I can send you my laptop, but I'm not necessarily giving it to you).</li>
</ul>
 */
export const SendAction = /*#__PURE__*/ ns("SendAction");
/** A Series in schema.org is a group of related items, typically but not necessarily of the same kind. See also <a class="localLink" href="http://schema.org/CreativeWorkSeries">CreativeWorkSeries</a>, <a class="localLink" href="http://schema.org/EventSeries">EventSeries</a>. */
export const Series = /*#__PURE__*/ ns("Series");
/** A service provided by an organization, e.g. delivery service, print services, etc. */
export const Service = /*#__PURE__*/ ns("Service");
/** A means for accessing a service, e.g. a government office location, web site, or phone number. */
export const ServiceChannel = /*#__PURE__*/ ns("ServiceChannel");
/** The act of distributing content to people for their amusement or edification. */
export const ShareAction = /*#__PURE__*/ ns("ShareAction");
/** A shoe store. */
export const ShoeStore = /*#__PURE__*/ ns("ShoeStore");
/** A shopping center or mall. */
export const ShoppingCenter = /*#__PURE__*/ ns("ShoppingCenter");
/** Residence type: Single-family home. */
export const SingleFamilyResidence = /*#__PURE__*/ ns("SingleFamilyResidence");
/** A navigation element of the page. */
export const SiteNavigationElement = /*#__PURE__*/ ns("SiteNavigationElement");
/** A ski resort. */
export const SkiResort = /*#__PURE__*/ ns("SkiResort");
/** Event type: Social event. */
export const SocialEvent = /*#__PURE__*/ ns("SocialEvent");
/** A post to a social media platform, including blog posts, tweets, Facebook posts, etc. */
export const SocialMediaPosting = /*#__PURE__*/ ns("SocialMediaPosting");
/** A software application. */
export const SoftwareApplication = /*#__PURE__*/ ns("SoftwareApplication");
/** Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates. */
export const SoftwareSourceCode = /*#__PURE__*/ ns("SoftwareSourceCode");
/** A placeholder for multiple similar products of the same kind. */
export const SomeProducts = /*#__PURE__*/ ns("SomeProducts");
/** A SpeakableSpecification indicates (typically via <a class="localLink" href="http://schema.org/xpath">xpath</a> or <a class="localLink" href="http://schema.org/cssSelector">cssSelector</a>) sections of a document that are highlighted as particularly <a class="localLink" href="http://schema.org/speakable">speakable</a>. Instances of this type are expected to be used primarily as values of the <a class="localLink" href="http://schema.org/speakable">speakable</a> property. */
export const SpeakableSpecification = /*#__PURE__*/ ns("SpeakableSpecification");
/** Any branch of a field in which people typically develop specific expertise, usually after significant study, time, and effort. */
export const Specialty = /*#__PURE__*/ ns("Specialty");
/** A sporting goods store. */
export const SportingGoodsStore = /*#__PURE__*/ ns("SportingGoodsStore");
/** A sports location, such as a playing field. */
export const SportsActivityLocation = /*#__PURE__*/ ns("SportsActivityLocation");
/** A sports club. */
export const SportsClub = /*#__PURE__*/ ns("SportsClub");
/** Event type: Sports event. */
export const SportsEvent = /*#__PURE__*/ ns("SportsEvent");
/** Represents the collection of all sports organizations, including sports teams, governing bodies, and sports associations. */
export const SportsOrganization = /*#__PURE__*/ ns("SportsOrganization");
/** Organization: Sports team. */
export const SportsTeam = /*#__PURE__*/ ns("SportsTeam");
/** A spreadsheet file. */
export const SpreadsheetDigitalDocument = /*#__PURE__*/ ns("SpreadsheetDigitalDocument");
/** A stadium. */
export const StadiumOrArena = /*#__PURE__*/ ns("StadiumOrArena");
/** A state or province of a country. */
export const State = /*#__PURE__*/ ns("State");
/** A value indicating a steering position. */
export const SteeringPositionValue = /*#__PURE__*/ ns("SteeringPositionValue");
/** A retail good store. */
export const Store = /*#__PURE__*/ ns("Store");
/** Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing. */
export const StructuredValue = /*#__PURE__*/ ns("StructuredValue");
/** The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates pushed to.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, SubscribeAction implies that the subscriber acts as a passive agent being constantly/actively pushed for updates.</li>
<li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.</li>
<li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: Unlike JoinAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.</li>
</ul>
 */
export const SubscribeAction = /*#__PURE__*/ ns("SubscribeAction");
/** A subway station. */
export const SubwayStation = /*#__PURE__*/ ns("SubwayStation");
/** A suite in a hotel or other public accommodation, denotes a class of luxury accommodations, the key feature of which is multiple rooms (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Suite_(hotel)">http://en.wikipedia.org/wiki/Suite_(hotel)</a>).
<br /><br />
See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>. */
export const Suite = /*#__PURE__*/ ns("Suite");
/** The act of momentarily pausing a device or application (e.g. pause music playback or pause a timer). */
export const SuspendAction = /*#__PURE__*/ ns("SuspendAction");
/** A synagogue. */
export const Synagogue = /*#__PURE__*/ ns("Synagogue");
/** A short TV program or a segment/part of a TV program. */
export const TVClip = /*#__PURE__*/ ns("TVClip");
/** A TV episode which can be part of a series or season. */
export const TVEpisode = /*#__PURE__*/ ns("TVEpisode");
/** Season dedicated to TV broadcast and associated online delivery. */
export const TVSeason = /*#__PURE__*/ ns("TVSeason");
/** CreativeWorkSeries dedicated to TV broadcast and associated online delivery. */
export const TVSeries = /*#__PURE__*/ ns("TVSeries");
/** A table on a Web page. */
export const Table = /*#__PURE__*/ ns("Table");
/** The act of gaining ownership of an object from an origin. Reciprocal of GiveAction.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/GiveAction">GiveAction</a>: The reciprocal of TakeAction.</li>
<li><a class="localLink" href="http://schema.org/ReceiveAction">ReceiveAction</a>: Unlike ReceiveAction, TakeAction implies that ownership has been transfered.</li>
</ul>
 */
export const TakeAction = /*#__PURE__*/ ns("TakeAction");
/** A tattoo parlor. */
export const TattooParlor = /*#__PURE__*/ ns("TattooParlor");
/** A taxi. */
export const Taxi = /*#__PURE__*/ ns("Taxi");
/** A reservation for a taxi.<br/><br/>

Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>. */
export const TaxiReservation = /*#__PURE__*/ ns("TaxiReservation");
/** A service for a vehicle for hire with a driver for local travel. Fares are usually calculated based on distance traveled. */
export const TaxiService = /*#__PURE__*/ ns("TaxiService");
/** A taxi stand. */
export const TaxiStand = /*#__PURE__*/ ns("TaxiStand");
/** A technical article - Example: How-to (task) topics, step-by-step, procedural troubleshooting, specifications, etc. */
export const TechArticle = /*#__PURE__*/ ns("TechArticle");
/** A unique instance of a television BroadcastService on a CableOrSatelliteService lineup. */
export const TelevisionChannel = /*#__PURE__*/ ns("TelevisionChannel");
/** A television station. */
export const TelevisionStation = /*#__PURE__*/ ns("TelevisionStation");
/** A tennis complex. */
export const TennisComplex = /*#__PURE__*/ ns("TennisComplex");
/** Data type: Text. */
export const Text = /*#__PURE__*/ ns("Text");
/** A file composed primarily of text. */
export const TextDigitalDocument = /*#__PURE__*/ ns("TextDigitalDocument");
/** Event type: Theater performance. */
export const TheaterEvent = /*#__PURE__*/ ns("TheaterEvent");
/** A theater group or company, for example, the Royal Shakespeare Company or Druid Theatre. */
export const TheaterGroup = /*#__PURE__*/ ns("TheaterGroup");
/** The most generic type of item. */
export const Thing = /*#__PURE__*/ ns("Thing");
/** Used to describe a ticket to an event, a flight, a bus ride, etc. */
export const Ticket = /*#__PURE__*/ ns("Ticket");
/** The act of reaching a draw in a competitive activity. */
export const TieAction = /*#__PURE__*/ ns("TieAction");
/** A point in time recurring on multiple days in the form hh:mm:ss[Z|(+|-)hh:mm] (see <a href="http://www.w3.org/TR/xmlschema-2/#time">XML schema for details</a>). */
export const Time = /*#__PURE__*/ ns("Time");
/** The act of giving money voluntarily to a beneficiary in recognition of services rendered. */
export const TipAction = /*#__PURE__*/ ns("TipAction");
/** A tire shop. */
export const TireShop = /*#__PURE__*/ ns("TireShop");
/** A tourist attraction.  In principle any Thing can be a <a class="localLink" href="http://schema.org/TouristAttraction">TouristAttraction</a>, from a <a class="localLink" href="http://schema.org/Mountain">Mountain</a> and <a class="localLink" href="http://schema.org/LandmarksOrHistoricalBuildings">LandmarksOrHistoricalBuildings</a> to a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a>.  This Type can be used on its own to describe a general <a class="localLink" href="http://schema.org/TouristAttraction">TouristAttraction</a>, or be used as an <a class="localLink" href="http://schema.org/additionalType">additionalType</a> to add tourist attraction properties to any other type.  (See examples below) */
export const TouristAttraction = /*#__PURE__*/ ns("TouristAttraction");
/** A tourist information center. */
export const TouristInformationCenter = /*#__PURE__*/ ns("TouristInformationCenter");
/** A toy store. */
export const ToyStore = /*#__PURE__*/ ns("ToyStore");
/** An agent tracks an object for updates.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, TrackAction refers to the interest on the location of innanimates objects.</li>
<li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, TrackAction refers to  the interest on the location of innanimate objects.</li>
</ul>
 */
export const TrackAction = /*#__PURE__*/ ns("TrackAction");
/** The act of participating in an exchange of goods and services for monetary compensation. An agent trades an object, product or service with a participant in exchange for a one time or periodic payment. */
export const TradeAction = /*#__PURE__*/ ns("TradeAction");
/** A reservation for train travel.<br/><br/>

Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>. */
export const TrainReservation = /*#__PURE__*/ ns("TrainReservation");
/** A train station. */
export const TrainStation = /*#__PURE__*/ ns("TrainStation");
/** A trip on a commercial train line. */
export const TrainTrip = /*#__PURE__*/ ns("TrainTrip");
/** The act of transferring/moving (abstract or concrete) animate or inanimate objects from one place to another. */
export const TransferAction = /*#__PURE__*/ ns("TransferAction");
/** The act of traveling from an fromLocation to a destination by a specified mode of transport, optionally with participants. */
export const TravelAction = /*#__PURE__*/ ns("TravelAction");
/** A travel agency. */
export const TravelAgency = /*#__PURE__*/ ns("TravelAgency");
/** A trip or journey. An itinerary of visits to one or more places. */
export const Trip = /*#__PURE__*/ ns("Trip");
/** A structured value indicating the quantity, unit of measurement, and business function of goods included in a bundle offer. */
export const TypeAndQuantityNode = /*#__PURE__*/ ns("TypeAndQuantityNode");
/** Data type: URL. */
export const URL = /*#__PURE__*/ ns("URL");
/** The act of un-registering from a service.<br/><br/>

Related actions:<br/><br/>

<ul>
<li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: antonym of UnRegisterAction.</li>
<li><a class="localLink" href="http://schema.org/LeaveAction">LeaveAction</a>: Unlike LeaveAction, UnRegisterAction implies that you are unregistering from a service you werer previously registered, rather than leaving a team/group of people.</li>
</ul>
 */
export const UnRegisterAction = /*#__PURE__*/ ns("UnRegisterAction");
/** The price asked for a given offer by the respective organization or person. */
export const UnitPriceSpecification = /*#__PURE__*/ ns("UnitPriceSpecification");
/** The act of managing by changing/editing the state of the object. */
export const UpdateAction = /*#__PURE__*/ ns("UpdateAction");
/** The act of applying an object to its intended purpose. */
export const UseAction = /*#__PURE__*/ ns("UseAction");
/** UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>. */
export const UserBlocks = /*#__PURE__*/ ns("UserBlocks");
/** UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>. */
export const UserCheckins = /*#__PURE__*/ ns("UserCheckins");
/** UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>. */
export const UserComments = /*#__PURE__*/ ns("UserComments");
/** UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>. */
export const UserDownloads = /*#__PURE__*/ ns("UserDownloads");
/** UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>. */
export const UserInteraction = /*#__PURE__*/ ns("UserInteraction");
/** UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>. */
export const UserLikes = /*#__PURE__*/ ns("UserLikes");
/** UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>. */
export const UserPageVisits = /*#__PURE__*/ ns("UserPageVisits");
/** UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>. */
export const UserPlays = /*#__PURE__*/ ns("UserPlays");
/** UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>. */
export const UserPlusOnes = /*#__PURE__*/ ns("UserPlusOnes");
/** UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>. */
export const UserTweets = /*#__PURE__*/ ns("UserTweets");
/** A vehicle is a device that is designed or used to transport people or cargo over land, water, air, or through space. */
export const Vehicle = /*#__PURE__*/ ns("Vehicle");
/** Web page type: Video gallery page. */
export const VideoGallery = /*#__PURE__*/ ns("VideoGallery");
/** A video game is an electronic game that involves human interaction with a user interface to generate visual feedback on a video device. */
export const VideoGame = /*#__PURE__*/ ns("VideoGame");
/** A short segment/part of a video game. */
export const VideoGameClip = /*#__PURE__*/ ns("VideoGameClip");
/** A video game series. */
export const VideoGameSeries = /*#__PURE__*/ ns("VideoGameSeries");
/** A video file. */
export const VideoObject = /*#__PURE__*/ ns("VideoObject");
/** The act of consuming static visual content. */
export const ViewAction = /*#__PURE__*/ ns("ViewAction");
/** Event type: Visual arts event. */
export const VisualArtsEvent = /*#__PURE__*/ ns("VisualArtsEvent");
/** A work of art that is primarily visual in character. */
export const VisualArtwork = /*#__PURE__*/ ns("VisualArtwork");
/** A volcano, like Fuji san. */
export const Volcano = /*#__PURE__*/ ns("Volcano");
/** The act of expressing a preference from a fixed/finite/structured set of choices/options. */
export const VoteAction = /*#__PURE__*/ ns("VoteAction");
/** An advertising section of the page. */
export const WPAdBlock = /*#__PURE__*/ ns("WPAdBlock");
/** The footer section of the page. */
export const WPFooter = /*#__PURE__*/ ns("WPFooter");
/** The header section of the page. */
export const WPHeader = /*#__PURE__*/ ns("WPHeader");
/** A sidebar section of the page. */
export const WPSideBar = /*#__PURE__*/ ns("WPSideBar");
/** The act of expressing a desire about the object. An agent wants an object. */
export const WantAction = /*#__PURE__*/ ns("WantAction");
/** A structured value representing the duration and scope of services that will be provided to a customer free of charge in case of a defect or malfunction of a product. */
export const WarrantyPromise = /*#__PURE__*/ ns("WarrantyPromise");
/** A range of of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.<br/><br/>

Commonly used values:<br/><br/>

<ul>
<li>http://purl.org/goodrelations/v1#Labor-BringIn</li>
<li>http://purl.org/goodrelations/v1#PartsAndLabor-BringIn</li>
<li>http://purl.org/goodrelations/v1#PartsAndLabor-PickUp</li>
</ul>
 */
export const WarrantyScope = /*#__PURE__*/ ns("WarrantyScope");
/** The act of consuming dynamic/moving visual content. */
export const WatchAction = /*#__PURE__*/ ns("WatchAction");
/** A waterfall, like Niagara. */
export const Waterfall = /*#__PURE__*/ ns("Waterfall");
/** The act of dressing oneself in clothing. */
export const WearAction = /*#__PURE__*/ ns("WearAction");
/** Web applications. */
export const WebApplication = /*#__PURE__*/ ns("WebApplication");
/** A web page. Every web page is implicitly assumed to be declared to be of type WebPage, so the various properties about that webpage, such as <code>breadcrumb</code> may be used. We recommend explicit declaration if these properties are specified, but if they are found outside of an itemscope, they will be assumed to be about the page. */
export const WebPage = /*#__PURE__*/ ns("WebPage");
/** A web page element, like a table or an image. */
export const WebPageElement = /*#__PURE__*/ ns("WebPageElement");
/** A WebSite is a set of related web pages and other items typically served from a single web domain and accessible via URLs. */
export const WebSite = /*#__PURE__*/ ns("WebSite");
/** A wholesale store. */
export const WholesaleStore = /*#__PURE__*/ ns("WholesaleStore");
/** The act of achieving victory in a competitive activity. */
export const WinAction = /*#__PURE__*/ ns("WinAction");
/** A winery. */
export const Winery = /*#__PURE__*/ ns("Winery");
/** A Workers Union (also known as a Labor Union, Labour Union, or Trade Union) is an organization that promotes the interests of its worker members by collectively bargaining with management, organizing, and political lobbying. */
export const WorkersUnion = /*#__PURE__*/ ns("WorkersUnion");
/** The act of authoring written creative content. */
export const WriteAction = /*#__PURE__*/ ns("WriteAction");
/** A zoo. */
export const Zoo = /*#__PURE__*/ ns("Zoo");


/* Properties */
/** The answer(s) that has been accepted as best, typically on a Question/Answer site. Sites vary in their selection mechanisms, e.g. drawing on community opinion and/or the view of the Question author. */
export const acceptedAnswer = /*#__PURE__*/ ns("acceptedAnswer");
/** The offer(s) -- e.g., product, quantity and price combinations -- included in the order. */
export const acceptedOffer = /*#__PURE__*/ ns("acceptedOffer");
/** The payment method(s) accepted by seller for this offer. */
export const acceptedPaymentMethod = /*#__PURE__*/ ns("acceptedPaymentMethod");
/** Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings <code>Yes</code> or <code>No</code>. */
export const acceptsReservations = /*#__PURE__*/ ns("acceptsReservations");
/** Password, PIN, or access code needed for delivery (e.g. from a locker). */
export const accessCode = /*#__PURE__*/ ns("accessCode");
/** The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Expected values include: auditory, tactile, textual, visual, colorDependent, chartOnVisual, chemOnVisual, diagramOnVisual, mathOnVisual, musicOnVisual, textOnVisual. */
export const accessMode = /*#__PURE__*/ ns("accessMode");
/** A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Expected values include:  auditory, tactile, textual, visual. */
export const accessModeSufficient = /*#__PURE__*/ ns("accessModeSufficient");
/** Indicates that the resource is compatible with the referenced accessibility API (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>). */
export const accessibilityAPI = /*#__PURE__*/ ns("accessibilityAPI");
/** Identifies input methods that are sufficient to fully control the described resource (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>). */
export const accessibilityControl = /*#__PURE__*/ ns("accessibilityControl");
/** Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>). */
export const accessibilityFeature = /*#__PURE__*/ ns("accessibilityFeature");
/** A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3 (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>). */
export const accessibilityHazard = /*#__PURE__*/ ns("accessibilityHazard");
/** A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as "short descriptions are present but long descriptions will be needed for non-visual users" or "short descriptions are present and no long descriptions are needed." */
export const accessibilitySummary = /*#__PURE__*/ ns("accessibilitySummary");
/** The identifier for the account the payment will be applied to. */
export const accountId = /*#__PURE__*/ ns("accountId");
/** Specifies the Person that is legally accountable for the CreativeWork. */
export const accountablePerson = /*#__PURE__*/ ns("accountablePerson");
/** The organization or person from which the product was acquired. */
export const acquiredFrom = /*#__PURE__*/ ns("acquiredFrom");
/** A set of requirements that a must be fulfilled in order to perform an Action. If more than one value is specied, fulfilling one set of requirements will allow the Action to be performed. */
export const actionAccessibilityRequirement = /*#__PURE__*/ ns("actionAccessibilityRequirement");
/** The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication. */
export const actionPlatform = /*#__PURE__*/ ns("actionPlatform");
/** Indicates the current disposition of the Action. */
export const actionStatus = /*#__PURE__*/ ns("actionStatus");
/** An actor, e.g. in tv, radio, movie, video games etc. Actors can be associated with individual items or with a series, episode, clip. */
export const actors = /*#__PURE__*/ ns("actors");
/** An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge). */
export const addOn = /*#__PURE__*/ ns("addOn");
/** An additional name for a Person, can be used for a middle name. */
export const additionalName = /*#__PURE__*/ ns("additionalName");
/** If responding yes, the number of guests who will attend in addition to the invitee. */
export const additionalNumberOfGuests = /*#__PURE__*/ ns("additionalNumberOfGuests");
/** A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.<br/><br/>

Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism. */
export const additionalProperty = /*#__PURE__*/ ns("additionalProperty");
/** An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally. */
export const additionalType = /*#__PURE__*/ ns("additionalType");
/** Physical address of the item. */
export const address = /*#__PURE__*/ ns("address");
/** The country. For example, USA. You can also provide the two-letter <a href="http://en.wikipedia.org/wiki/ISO_3166-1">ISO 3166-1 alpha-2 country code</a>. */
export const addressCountry = /*#__PURE__*/ ns("addressCountry");
/** The locality in which the street address is, and which is in the region. For example, Mountain View. */
export const addressLocality = /*#__PURE__*/ ns("addressLocality");
/** The region in which the locality is, and which is in the country. For example, California or another appropriate first-level <a href="https://en.wikipedia.org/wiki/List_of_administrative_divisions_by_country">Administrative division</a> */
export const addressRegion = /*#__PURE__*/ ns("addressRegion");
/** The amount of time that is required between accepting the offer and the actual usage of the resource or service. */
export const advanceBookingRequirement = /*#__PURE__*/ ns("advanceBookingRequirement");
/** An organization that this person is affiliated with. For example, a school/university, a club, or a team. */
export const affiliation = /*#__PURE__*/ ns("affiliation");
/** A media object representing the circumstances after performing this direction. */
export const afterMedia = /*#__PURE__*/ ns("afterMedia");
/** The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book. */
export const agent = /*#__PURE__*/ ns("agent");
/** The overall rating, based on a collection of reviews or ratings, of the item. */
export const aggregateRating = /*#__PURE__*/ ns("aggregateRating");
/** The kind of aircraft (e.g., "Boeing 747"). */
export const aircraft = /*#__PURE__*/ ns("aircraft");
/** Classification of the album by it's type of content: soundtrack, live album, studio album, etc. */
export const albumProductionType = /*#__PURE__*/ ns("albumProductionType");
/** The kind of release which this album is: single, EP or album. */
export const albumReleaseType = /*#__PURE__*/ ns("albumReleaseType");
/** A collection of music albums. */
export const albums = /*#__PURE__*/ ns("albums");
/** A category of alignment between the learning resource and the framework node. Recommended values include: 'assesses', 'teaches', 'requires', 'textComplexity', 'readingLevel', 'educationalSubject', and 'educationalLevel'. */
export const alignmentType = /*#__PURE__*/ ns("alignmentType");
/** An alias for the item. */
export const alternateName = /*#__PURE__*/ ns("alternateName");
/** A secondary title of the CreativeWork. */
export const alternativeHeadline = /*#__PURE__*/ ns("alternativeHeadline");
/** An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs. */
export const amenityFeature = /*#__PURE__*/ ns("amenityFeature");
/** The amount of money. */
export const amount = /*#__PURE__*/ ns("amount");
/** The quantity of the goods included in the offer. */
export const amountOfThisGood = /*#__PURE__*/ ns("amountOfThisGood");
/** The annual rate that is charged for borrowing (or made by investing), expressed as a single percentage number that represents the actual yearly cost of funds over the term of a loan. This includes any fees or additional costs associated with the transaction. */
export const annualPercentageRate = /*#__PURE__*/ ns("annualPercentageRate");
/** The number of answers this question has received. */
export const answerCount = /*#__PURE__*/ ns("answerCount");
/** An application that can complete the request. */
export const application = /*#__PURE__*/ ns("application");
/** Type of software application, e.g. 'Game, Multimedia'. */
export const applicationCategory = /*#__PURE__*/ ns("applicationCategory");
/** Subcategory of the application, e.g. 'Arcade Game'. */
export const applicationSubCategory = /*#__PURE__*/ ns("applicationSubCategory");
/** The name of the application suite to which the application belongs (e.g. Excel belongs to Office). */
export const applicationSuite = /*#__PURE__*/ ns("applicationSuite");
/** The delivery method(s) to which the delivery charge or payment charge specification applies. */
export const appliesToDeliveryMethod = /*#__PURE__*/ ns("appliesToDeliveryMethod");
/** The payment method(s) to which the payment charge specification applies. */
export const appliesToPaymentMethod = /*#__PURE__*/ ns("appliesToPaymentMethod");
/** The area within which users can expect to reach the broadcast service. */
export const area = /*#__PURE__*/ ns("area");
/** The airport where the flight terminates. */
export const arrivalAirport = /*#__PURE__*/ ns("arrivalAirport");
/** The stop or station from which the bus arrives. */
export const arrivalBusStop = /*#__PURE__*/ ns("arrivalBusStop");
/** Identifier of the flight's arrival gate. */
export const arrivalGate = /*#__PURE__*/ ns("arrivalGate");
/** The platform where the train arrives. */
export const arrivalPlatform = /*#__PURE__*/ ns("arrivalPlatform");
/** The station where the train trip ends. */
export const arrivalStation = /*#__PURE__*/ ns("arrivalStation");
/** Identifier of the flight's arrival terminal. */
export const arrivalTerminal = /*#__PURE__*/ ns("arrivalTerminal");
/** The expected arrival time. */
export const arrivalTime = /*#__PURE__*/ ns("arrivalTime");
/** The number of copies when multiple copies of a piece of artwork are produced - e.g. for a limited edition of 20 prints, 'artEdition' refers to the total number of copies (in this example "20"). */
export const artEdition = /*#__PURE__*/ ns("artEdition");
/** The material used. (e.g. Oil, Watercolour, Acrylic, Linoprint, Marble, Cyanotype, Digital, Lithograph, DryPoint, Intaglio, Pastel, Woodcut, Pencil, Mixed Media, etc.) */
export const artMedium = /*#__PURE__*/ ns("artMedium");
/** e.g. Painting, Drawing, Sculpture, Print, Photograph, Assemblage, Collage, etc. */
export const artform = /*#__PURE__*/ ns("artform");
/** The actual body of the article. */
export const articleBody = /*#__PURE__*/ ns("articleBody");
/** Articles may belong to one or more 'sections' in a magazine or newspaper, such as Sports, Lifestyle, etc. */
export const articleSection = /*#__PURE__*/ ns("articleSection");
/** Library file name e.g., mscorlib.dll, system.web.dll. */
export const assembly = /*#__PURE__*/ ns("assembly");
/** Associated product/technology version. e.g., .NET Framework 4.5. */
export const assemblyVersion = /*#__PURE__*/ ns("assemblyVersion");
/** A NewsArticle associated with the Media Object. */
export const associatedArticle = /*#__PURE__*/ ns("associatedArticle");
/** A media object that encodes this CreativeWork. This property is a synonym for encoding. */
export const associatedMedia = /*#__PURE__*/ ns("associatedMedia");
/** A person that acts as performing member of a sports team; a player as opposed to a coach. */
export const athlete = /*#__PURE__*/ ns("athlete");
/** A person attending the event. */
export const attendees = /*#__PURE__*/ ns("attendees");
/** The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.). */
export const audienceType = /*#__PURE__*/ ns("audienceType");
/** An embedded audio object. */
export const audio = /*#__PURE__*/ ns("audio");
/** The Organization responsible for authenticating the user's subscription. For example, many media apps require a cable/satellite provider to authenticate your subscription before playing media. */
export const authenticator = /*#__PURE__*/ ns("authenticator");
/** The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably. */
export const author = /*#__PURE__*/ ns("author");
/** The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc. */
export const availability = /*#__PURE__*/ ns("availability");
/** The end of the availability of the product or service included in the offer. */
export const availabilityEnds = /*#__PURE__*/ ns("availabilityEnds");
/** The beginning of the availability of the product or service included in the offer. */
export const availabilityStarts = /*#__PURE__*/ ns("availabilityStarts");
/** The place(s) from which the offer can be obtained (e.g. store locations). */
export const availableAtOrFrom = /*#__PURE__*/ ns("availableAtOrFrom");
/** A means of accessing the service (e.g. a phone bank, a web site, a location, etc.). */
export const availableChannel = /*#__PURE__*/ ns("availableChannel");
/** The delivery method(s) available for this offer. */
export const availableDeliveryMethod = /*#__PURE__*/ ns("availableDeliveryMethod");
/** When the item is available for pickup from the store, locker, etc. */
export const availableFrom = /*#__PURE__*/ ns("availableFrom");
/** A language someone may use with or at the item, service or place. Please use one of the language codes from the <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>. See also <a class="localLink" href="http://schema.org/inLanguage">inLanguage</a> */
export const availableLanguage = /*#__PURE__*/ ns("availableLanguage");
/** After this date, the item will no longer be available for pickup. */
export const availableThrough = /*#__PURE__*/ ns("availableThrough");
/** Awards won by or for this item. */
export const awards = /*#__PURE__*/ ns("awards");
/** The away team in a sports event. */
export const awayTeam = /*#__PURE__*/ ns("awayTeam");
/** The base salary of the job or of an employee in an EmployeeRole. */
export const baseSalary = /*#__PURE__*/ ns("baseSalary");
/** A sub property of recipient. The recipient blind copied on a message. */
export const bccRecipient = /*#__PURE__*/ ns("bccRecipient");
/** The type of bed or beds included in the accommodation. For the single case of just one bed of a certain type, you use bed directly with a text.
      If you want to indicate the quantity of a certain kind of bed, use an instance of BedDetails. For more detailed information, use the amenityFeature property. */
export const bed = /*#__PURE__*/ ns("bed");
/** A media object representing the circumstances before performing this direction. */
export const beforeMedia = /*#__PURE__*/ ns("beforeMedia");
/** Description of benefits associated with the job. */
export const benefits = /*#__PURE__*/ ns("benefits");
/** The highest value allowed in this rating system. If bestRating is omitted, 5 is assumed. */
export const bestRating = /*#__PURE__*/ ns("bestRating");
/** The billing address for the order. */
export const billingAddress = /*#__PURE__*/ ns("billingAddress");
/** This property specifies the minimal quantity and rounding increment that will be the basis for the billing. The unit of measurement is specified by the unitCode property. */
export const billingIncrement = /*#__PURE__*/ ns("billingIncrement");
/** The time interval used to compute the invoice. */
export const billingPeriod = /*#__PURE__*/ ns("billingPeriod");
/** Date of birth. */
export const birthDate = /*#__PURE__*/ ns("birthDate");
/** The place where the person was born. */
export const birthPlace = /*#__PURE__*/ ns("birthPlace");
/** The bitrate of the media object. */
export const bitrate = /*#__PURE__*/ ns("bitrate");
/** The postings that are part of this blog. */
export const blogPosts = /*#__PURE__*/ ns("blogPosts");
/** The airline-specific indicator of boarding order / preference. */
export const boardingGroup = /*#__PURE__*/ ns("boardingGroup");
/** The type of boarding policy used by the airline (e.g. zone-based or group-based). */
export const boardingPolicy = /*#__PURE__*/ ns("boardingPolicy");
/** The edition of the book. */
export const bookEdition = /*#__PURE__*/ ns("bookEdition");
/** The format of the book. */
export const bookFormat = /*#__PURE__*/ ns("bookFormat");
/** 'bookingAgent' is an out-dated term indicating a 'broker' that serves as a booking agent. */
export const bookingAgent = /*#__PURE__*/ ns("bookingAgent");
/** The date and time the reservation was booked. */
export const bookingTime = /*#__PURE__*/ ns("bookingTime");
/** A sub property of participant. The person that borrows the object being lent. */
export const borrower = /*#__PURE__*/ ns("borrower");
/** A box is the area enclosed by the rectangle formed by two points. The first point is the lower corner, the second point is the upper corner. A box is expressed as two points separated by a space character. */
export const box = /*#__PURE__*/ ns("box");
/** A short textual code (also called "store code") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.<br/><br/>

For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code "3047" is a branchCode for a particular branch. */
export const branchCode = /*#__PURE__*/ ns("branchCode");
/** The larger organization that this local business is a branch of, if any. Not to be confused with (anatomical)<a class="localLink" href="http://schema.org/branch">branch</a>. */
export const branchOf = /*#__PURE__*/ ns("branchOf");
/** The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person. */
export const brand = /*#__PURE__*/ ns("brand");
/** A set of links that can help a user understand and navigate a website hierarchy. */
export const breadcrumb = /*#__PURE__*/ ns("breadcrumb");
/** The media network(s) whose content is broadcast on this station. */
export const broadcastAffiliateOf = /*#__PURE__*/ ns("broadcastAffiliateOf");
/** The unique address by which the BroadcastService can be identified in a provider lineup. In US, this is typically a number. */
export const broadcastChannelId = /*#__PURE__*/ ns("broadcastChannelId");
/** The name displayed in the channel guide. For many US affiliates, it is the network name. */
export const broadcastDisplayName = /*#__PURE__*/ ns("broadcastDisplayName");
/** The frequency used for over-the-air broadcasts. Numeric values or simple ranges e.g. 87-99. In addition a shortcut idiom is supported for frequences of AM and FM radio channels, e.g. "87 FM". */
export const broadcastFrequency = /*#__PURE__*/ ns("broadcastFrequency");
/** The frequency in MHz for a particular broadcast. */
export const broadcastFrequencyValue = /*#__PURE__*/ ns("broadcastFrequencyValue");
/** The event being broadcast such as a sporting event or awards ceremony. */
export const broadcastOfEvent = /*#__PURE__*/ ns("broadcastOfEvent");
/** The type of service required to have access to the channel (e.g. Standard or Premium). */
export const broadcastServiceTier = /*#__PURE__*/ ns("broadcastServiceTier");
/** The timezone in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 format</a> for which the service bases its broadcasts */
export const broadcastTimezone = /*#__PURE__*/ ns("broadcastTimezone");
/** The organization owning or operating the broadcast service. */
export const broadcaster = /*#__PURE__*/ ns("broadcaster");
/** Specifies browser requirements in human-readable text. For example, 'requires HTML5 support'. */
export const browserRequirements = /*#__PURE__*/ ns("browserRequirements");
/** The name of the bus (e.g. Bolt Express). */
export const busName = /*#__PURE__*/ ns("busName");
/** The unique identifier for the bus. */
export const busNumber = /*#__PURE__*/ ns("busNumber");
/** The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell. */
export const businessFunction = /*#__PURE__*/ ns("businessFunction");
/** A sub property of participant. The participant/person/organization that bought the object. */
export const buyer = /*#__PURE__*/ ns("buyer");
/** The artist that performed this album or recording. */
export const byArtist = /*#__PURE__*/ ns("byArtist");
/** The number of calories. */
export const calories = /*#__PURE__*/ ns("calories");
/** A sub property of object. The candidate subject of this action. */
export const candidate = /*#__PURE__*/ ns("candidate");
/** The caption for this object. For downloadable machine formats (closed caption, subtitles etc.) use MediaObject and indicate the <a class="localLink" href="http://schema.org/encodingFormat">encodingFormat</a>. */
export const caption = /*#__PURE__*/ ns("caption");
/** The number of grams of carbohydrates. */
export const carbohydrateContent = /*#__PURE__*/ ns("carbohydrateContent");
/** The available volume for cargo or luggage. For automobiles, this is usually the trunk volume.<br/><br/>

Typical unit code(s): LTR for liters, FTQ for cubic foot/feet<br/><br/>

Note: You can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges. */
export const cargoVolume = /*#__PURE__*/ ns("cargoVolume");
/** 'carrier' is an out-dated term indicating the 'provider' for parcel delivery and flights. */
export const carrier = /*#__PURE__*/ ns("carrier");
/** Specifies specific carrier(s) requirements for the application (e.g. an application may only work on a specific carrier network). */
export const carrierRequirements = /*#__PURE__*/ ns("carrierRequirements");
/** A data catalog which contains this dataset. */
export const catalog = /*#__PURE__*/ ns("catalog");
/** The catalog number for the release. */
export const catalogNumber = /*#__PURE__*/ ns("catalogNumber");
/** A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy. */
export const category = /*#__PURE__*/ ns("category");
/** A sub property of recipient. The recipient copied on a message. */
export const ccRecipient = /*#__PURE__*/ ns("ccRecipient");
/** Fictional person connected with a creative work. */
export const character = /*#__PURE__*/ ns("character");
/** A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage). */
export const characterAttribute = /*#__PURE__*/ ns("characterAttribute");
/** The name of a character played in some acting or performing role, i.e. in a PerformanceRole. */
export const characterName = /*#__PURE__*/ ns("characterName");
/** Cheat codes to the game. */
export const cheatCode = /*#__PURE__*/ ns("cheatCode");
/** The earliest someone may check into a lodging establishment. */
export const checkinTime = /*#__PURE__*/ ns("checkinTime");
/** The latest someone may check out of a lodging establishment. */
export const checkoutTime = /*#__PURE__*/ ns("checkoutTime");
/** Maximal age of the child. */
export const childMaxAge = /*#__PURE__*/ ns("childMaxAge");
/** Minimal age of the child. */
export const childMinAge = /*#__PURE__*/ ns("childMinAge");
/** A child of the person. */
export const children = /*#__PURE__*/ ns("children");
/** The number of milligrams of cholesterol. */
export const cholesterolContent = /*#__PURE__*/ ns("cholesterolContent");
/** A circle is the circular region of a specified radius centered at a specified latitude and longitude. A circle is expressed as a pair followed by a radius in meters. */
export const circle = /*#__PURE__*/ ns("circle");
/** A citation or reference to another creative work, such as another publication, web page, scholarly article, etc. */
export const citation = /*#__PURE__*/ ns("citation");
/** A short summary of the specific claims reviewed in a ClaimReview. */
export const claimReviewed = /*#__PURE__*/ ns("claimReviewed");
/** Position of the clip within an ordered group of clips. */
export const clipNumber = /*#__PURE__*/ ns("clipNumber");
/** The closing hour of the place or service on the given day(s) of the week. */
export const closes = /*#__PURE__*/ ns("closes");
/** A person that acts in a coaching role for a sports team. */
export const coach = /*#__PURE__*/ ns("coach");
/** Link to the repository where the un-compiled, human readable code and related code is located (SVN, github, CodePlex). */
export const codeRepository = /*#__PURE__*/ ns("codeRepository");
/** A colleague of the person. */
export const colleagues = /*#__PURE__*/ ns("colleagues");
/** A sub property of object. The collection target of the action. */
export const collection = /*#__PURE__*/ ns("collection");
/** The color of the product. */
export const color = /*#__PURE__*/ ns("color");
/** Comments, typically from users. */
export const comment = /*#__PURE__*/ ns("comment");
/** The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere. */
export const commentCount = /*#__PURE__*/ ns("commentCount");
/** The text of the UserComment. */
export const commentText = /*#__PURE__*/ ns("commentText");
/** The time at which the UserComment was made. */
export const commentTime = /*#__PURE__*/ ns("commentTime");
/** The person or organization who wrote a composition, or who is the composer of a work performed at some event. */
export const composer = /*#__PURE__*/ ns("composer");
/** A number that confirms the given order or payment has been received. */
export const confirmationNumber = /*#__PURE__*/ ns("confirmationNumber");
/** An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers). */
export const contactOption = /*#__PURE__*/ ns("contactOption");
/** A contact point for a person or organization. */
export const contactPoints = /*#__PURE__*/ ns("contactPoints");
/** A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point. */
export const contactType = /*#__PURE__*/ ns("contactType");
/** The basic containment relation between a place and one that contains it. */
export const containedIn = /*#__PURE__*/ ns("containedIn");
/** Official rating of a piece of content&#x2014;for example,'MPAA PG-13'. */
export const contentRating = /*#__PURE__*/ ns("contentRating");
/** File size in (mega/kilo) bytes. */
export const contentSize = /*#__PURE__*/ ns("contentSize");
/** The supported content type(s) for an EntryPoint response. */
export const contentType = /*#__PURE__*/ ns("contentType");
/** Actual bytes of the media object, for example the image file or video file. */
export const contentUrl = /*#__PURE__*/ ns("contentUrl");
/** A secondary contributor to the CreativeWork or Event. */
export const contributor = /*#__PURE__*/ ns("contributor");
/** The time it takes to actually cook the dish, in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>. */
export const cookTime = /*#__PURE__*/ ns("cookTime");
/** The method of cooking, such as Frying, Steaming, ... */
export const cookingMethod = /*#__PURE__*/ ns("cookingMethod");
/** The party holding the legal copyright to the CreativeWork. */
export const copyrightHolder = /*#__PURE__*/ ns("copyrightHolder");
/** The year during which the claimed copyright for the CreativeWork was first asserted. */
export const copyrightYear = /*#__PURE__*/ ns("copyrightYear");
/** Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code. */
export const countriesNotSupported = /*#__PURE__*/ ns("countriesNotSupported");
/** Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code. */
export const countriesSupported = /*#__PURE__*/ ns("countriesSupported");
/** The country of the principal offices of the production company or individual responsible for the movie or program. */
export const countryOfOrigin = /*#__PURE__*/ ns("countryOfOrigin");
/** A sub property of location. The course where this action was taken. */
export const course = /*#__PURE__*/ ns("course");
/** The identifier for the <a class="localLink" href="http://schema.org/Course">Course</a> used by the course <a class="localLink" href="http://schema.org/provider">provider</a> (e.g. CS101 or 6.001). */
export const courseCode = /*#__PURE__*/ ns("courseCode");
/** The medium or means of delivery of the course instance or the mode of study, either as a text label (e.g. "online", "onsite" or "blended"; "synchronous" or "asynchronous"; "full-time" or "part-time") or as a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous ). */
export const courseMode = /*#__PURE__*/ ns("courseMode");
/** Requirements for taking the Course. May be completion of another <a class="localLink" href="http://schema.org/Course">Course</a> or a textual description like "permission of instructor". Requirements may be a pre-requisite competency, referenced using <a class="localLink" href="http://schema.org/AlignmentObject">AlignmentObject</a>. */
export const coursePrerequisites = /*#__PURE__*/ ns("coursePrerequisites");
/** The time when the live blog will stop covering the Event. Note that coverage may continue after the Event concludes. */
export const coverageEndTime = /*#__PURE__*/ ns("coverageEndTime");
/** The time when the live blog will begin covering the Event. Note that coverage may begin before the Event's start time. The LiveBlogPosting may also be created before coverage begins. */
export const coverageStartTime = /*#__PURE__*/ ns("coverageStartTime");
/** The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork. */
export const creator = /*#__PURE__*/ ns("creator");
/** The group the release is credited to if different than the byArtist. For example, Red and Blue is credited to "Stefani Germanotta Band", but by Lady Gaga. */
export const creditedTo = /*#__PURE__*/ ns("creditedTo");
/** A CSS selector, e.g. of a <a class="localLink" href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a> or <a class="localLink" href="http://schema.org/WebPageElement">WebPageElement</a>. In the latter case, multiple matches within a page can constitute a single conceptual "Web page element". */
export const cssSelector = /*#__PURE__*/ ns("cssSelector");
/** The currency accepted.<br/><br/>

Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR". */
export const currenciesAccepted = /*#__PURE__*/ ns("currenciesAccepted");
/** The currency in which the monetary amount is expressed.<br/><br/>

Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR". */
export const currency = /*#__PURE__*/ ns("currency");
/** Party placing the order or paying the invoice. */
export const customer = /*#__PURE__*/ ns("customer");
/** An item within in a data feed. Data feeds may have many elements. */
export const dataFeedElement = /*#__PURE__*/ ns("dataFeedElement");
/** The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format). */
export const datasetTimeInterval = /*#__PURE__*/ ns("datasetTimeInterval");
/** The date on which the CreativeWork was created or the item was added to a DataFeed. */
export const dateCreated = /*#__PURE__*/ ns("dateCreated");
/** The datetime the item was removed from the DataFeed. */
export const dateDeleted = /*#__PURE__*/ ns("dateDeleted");
/** The date the ticket was issued. */
export const dateIssued = /*#__PURE__*/ ns("dateIssued");
/** The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed. */
export const dateModified = /*#__PURE__*/ ns("dateModified");
/** Publication date for the job posting. */
export const datePosted = /*#__PURE__*/ ns("datePosted");
/** Date of first broadcast/publication. */
export const datePublished = /*#__PURE__*/ ns("datePublished");
/** The date/time at which the message has been read by the recipient if a single recipient exists. */
export const dateRead = /*#__PURE__*/ ns("dateRead");
/** The date/time the message was received if a single recipient exists. */
export const dateReceived = /*#__PURE__*/ ns("dateReceived");
/** The date/time at which the message was sent. */
export const dateSent = /*#__PURE__*/ ns("dateSent");
/** The date of the first registration of the vehicle with the respective public authorities. */
export const dateVehicleFirstRegistered = /*#__PURE__*/ ns("dateVehicleFirstRegistered");
/** A <a href="https://en.wikipedia.org/wiki/Dateline">dateline</a> is a brief piece of text included in news articles that describes where and when the story was written or filed though the date is often omitted. Sometimes only a placename is provided.<br/><br/>

Structured representations of dateline-related information can also be expressed more explicitly using <a class="localLink" href="http://schema.org/locationCreated">locationCreated</a> (which represents where a work was created e.g. where a news report was written).  For location depicted or described in the content, use <a class="localLink" href="http://schema.org/contentLocation">contentLocation</a>.<br/><br/>

Dateline summaries are oriented more towards human readers than towards automated processing, and can vary substantially. Some examples: "BEIRUT, Lebanon, June 2.", "Paris, France", "December 19, 2017 11:43AM Reporting from Washington", "Beijing/Moscow", "QUEZON CITY, Philippines". */
export const dateline = /*#__PURE__*/ ns("dateline");
/** The day of the week for which these opening hours are valid. */
export const dayOfWeek = /*#__PURE__*/ ns("dayOfWeek");
/** Date of death. */
export const deathDate = /*#__PURE__*/ ns("deathDate");
/** The place where the person died. */
export const deathPlace = /*#__PURE__*/ ns("deathPlace");
/** The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values. */
export const defaultValue = /*#__PURE__*/ ns("defaultValue");
/** Destination address. */
export const deliveryAddress = /*#__PURE__*/ ns("deliveryAddress");
/** The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup. */
export const deliveryLeadTime = /*#__PURE__*/ ns("deliveryLeadTime");
/** A sub property of instrument. The method of delivery. */
export const deliveryMethod = /*#__PURE__*/ ns("deliveryMethod");
/** New entry added as the package passes through each leg of its journey (from shipment to final delivery). */
export const deliveryStatus = /*#__PURE__*/ ns("deliveryStatus");
/** A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe. */
export const department = /*#__PURE__*/ ns("department");
/** The airport where the flight originates. */
export const departureAirport = /*#__PURE__*/ ns("departureAirport");
/** The stop or station from which the bus departs. */
export const departureBusStop = /*#__PURE__*/ ns("departureBusStop");
/** Identifier of the flight's departure gate. */
export const departureGate = /*#__PURE__*/ ns("departureGate");
/** The platform from which the train departs. */
export const departurePlatform = /*#__PURE__*/ ns("departurePlatform");
/** The station from which the train departs. */
export const departureStation = /*#__PURE__*/ ns("departureStation");
/** Identifier of the flight's departure terminal. */
export const departureTerminal = /*#__PURE__*/ ns("departureTerminal");
/** The expected departure time. */
export const departureTime = /*#__PURE__*/ ns("departureTime");
/** Prerequisites needed to fulfill steps in article. */
export const dependencies = /*#__PURE__*/ ns("dependencies");
/** The depth of the item. */
export const depth = /*#__PURE__*/ ns("depth");
/** Device required to run the application. Used in cases where a specific make/model is required to run the application. */
export const device = /*#__PURE__*/ ns("device");
/** A director of e.g. tv, radio, movie, video games etc. content. Directors can be associated with individual items or with a series, episode, clip. */
export const directors = /*#__PURE__*/ ns("directors");
/** A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation. */
export const disambiguatingDescription = /*#__PURE__*/ ns("disambiguatingDescription");
/** Any discount applied (to an Order). */
export const discount = /*#__PURE__*/ ns("discount");
/** Code used to redeem a discount. */
export const discountCode = /*#__PURE__*/ ns("discountCode");
/** The currency of the discount.<br/><br/>

Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR". */
export const discountCurrency = /*#__PURE__*/ ns("discountCurrency");
/** Specifies the CreativeWork associated with the UserComment. */
export const discusses = /*#__PURE__*/ ns("discusses");
/** A link to the page containing the comments of the CreativeWork. */
export const discussionUrl = /*#__PURE__*/ ns("discussionUrl");
/** The date that this organization was dissolved. */
export const dissolutionDate = /*#__PURE__*/ ns("dissolutionDate");
/** The distance travelled, e.g. exercising or travelling. */
export const distance = /*#__PURE__*/ ns("distance");
/** A downloadable form of this dataset, at a specific location, in a specific format. */
export const distribution = /*#__PURE__*/ ns("distribution");
/** The time admission will commence. */
export const doorTime = /*#__PURE__*/ ns("doorTime");
/** If the file can be downloaded, URL to download the binary. */
export const downloadUrl = /*#__PURE__*/ ns("downloadUrl");
/** The number of downvotes this question, answer or comment has received from the community. */
export const downvoteCount = /*#__PURE__*/ ns("downvoteCount");
/** The drive wheel configuration, i.e. which roadwheels will receive torque from the vehicle's engine via the drivetrain. */
export const driveWheelConfiguration = /*#__PURE__*/ ns("driveWheelConfiguration");
/** Where a rental car can be dropped off. */
export const dropoffLocation = /*#__PURE__*/ ns("dropoffLocation");
/** When a rental car can be dropped off. */
export const dropoffTime = /*#__PURE__*/ ns("dropoffTime");
/** The Dun &amp; Bradstreet DUNS number for identifying an organization or business person. */
export const duns = /*#__PURE__*/ ns("duns");
/** The duration of the warranty promise. Common unitCode values are ANN for year, MON for months, or DAY for days. */
export const durationOfWarranty = /*#__PURE__*/ ns("durationOfWarranty");
/** A media object representing the circumstances while performing this direction. */
export const duringMedia = /*#__PURE__*/ ns("duringMedia");
/** Specifies the Person who edited the CreativeWork. */
export const editor = /*#__PURE__*/ ns("editor");
/** An alignment to an established educational framework. */
export const educationalAlignment = /*#__PURE__*/ ns("educationalAlignment");
/** A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program. */
export const educationalCredentialAwarded = /*#__PURE__*/ ns("educationalCredentialAwarded");
/** The framework to which the resource being described is aligned. */
export const educationalFramework = /*#__PURE__*/ ns("educationalFramework");
/** An educationalRole of an EducationalAudience. */
export const educationalRole = /*#__PURE__*/ ns("educationalRole");
/** The purpose of a work in the context of education; for example, 'assignment', 'group work'. */
export const educationalUse = /*#__PURE__*/ ns("educationalUse");
/** The elevation of a location (<a href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS 84</a>). Values may be of the form 'NUMBER UNIT<em>OF</em>MEASUREMENT' (e.g., '1,000 m', '3,200 ft') while numbers alone should be assumed to be a value in meters. */
export const elevation = /*#__PURE__*/ ns("elevation");
/** The type(s) of customers for which the given offer is valid. */
export const eligibleCustomerType = /*#__PURE__*/ ns("eligibleCustomerType");
/** The duration for which the given offer is valid. */
export const eligibleDuration = /*#__PURE__*/ ns("eligibleDuration");
/** The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity. */
export const eligibleQuantity = /*#__PURE__*/ ns("eligibleQuantity");
/** The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.<br/><br/>

See also <a class="localLink" href="http://schema.org/ineligibleRegion">ineligibleRegion</a>. */
export const eligibleRegion = /*#__PURE__*/ ns("eligibleRegion");
/** The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount. */
export const eligibleTransactionVolume = /*#__PURE__*/ ns("eligibleTransactionVolume");
/** Email address. */
export const email = /*#__PURE__*/ ns("email");
/** A URL pointing to a player for a specific video. In general, this is the information in the <code>src</code> element of an <code>embed</code> tag and should not be the same as the content of the <code>loc</code> tag. */
export const embedUrl = /*#__PURE__*/ ns("embedUrl");
/** People working for this organization. */
export const employees = /*#__PURE__*/ ns("employees");
/** Type of employment (e.g. full-time, part-time, contract, temporary, seasonal, internship). */
export const employmentType = /*#__PURE__*/ ns("employmentType");
/** The supported encoding type(s) for an EntryPoint request. */
export const encodingType = /*#__PURE__*/ ns("encodingType");
/** A media object that encodes this CreativeWork. */
export const encodings = /*#__PURE__*/ ns("encodings");
/** The end date and time of the item (in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>). */
export const endDate = /*#__PURE__*/ ns("endDate");
/** The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>. For media, including audio and video, it's the time offset of the end of a clip within a larger file.<br/><br/>

Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions. */
export const endTime = /*#__PURE__*/ ns("endTime");
/** A sub property of participant. The person/organization being supported. */
export const endorsee = /*#__PURE__*/ ns("endorsee");
/** A sub property of location. The entertainment business where the action occurred. */
export const entertainmentBusiness = /*#__PURE__*/ ns("entertainmentBusiness");
/** Position of the episode within an ordered group of episodes. */
export const episodeNumber = /*#__PURE__*/ ns("episodeNumber");
/** An episode of a TV/radio series or season. */
export const episodes = /*#__PURE__*/ ns("episodes");
/** This ordering relation for qualitative values indicates that the subject is equal to the object. */
export const equal = /*#__PURE__*/ ns("equal");
/** For failed actions, more information on the cause of the failure. */
export const error = /*#__PURE__*/ ns("error");
/** The estimated cost of the supply or supplies consumed when performing instructions. */
export const estimatedCost = /*#__PURE__*/ ns("estimatedCost");
/** The estimated time the flight will take. */
export const estimatedFlightDuration = /*#__PURE__*/ ns("estimatedFlightDuration");
/** An estimated salary for a job posting or occupation, based on a variety of variables including, but not limited to industry, job title, and location. Estimated salaries  are often computed by outside organizations rather than the hiring organization, who may not have committed to the estimated value. */
export const estimatedSalary = /*#__PURE__*/ ns("estimatedSalary");
/** An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled. */
export const eventStatus = /*#__PURE__*/ ns("eventStatus");
/** Upcoming or past events associated with this place or organization. */
export const events = /*#__PURE__*/ ns("events");
/** exif data for this object. */
export const exifData = /*#__PURE__*/ ns("exifData");
/** The earliest date the package may arrive. */
export const expectedArrivalFrom = /*#__PURE__*/ ns("expectedArrivalFrom");
/** The latest date the package may arrive. */
export const expectedArrivalUntil = /*#__PURE__*/ ns("expectedArrivalUntil");
/** An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it. */
export const expectsAcceptanceOf = /*#__PURE__*/ ns("expectsAcceptanceOf");
/** Description of skills and experience needed for the position or Occupation. */
export const experienceRequirements = /*#__PURE__*/ ns("experienceRequirements");
/** Date the content expires and is no longer useful or available. For example a <a class="localLink" href="http://schema.org/VideoObject">VideoObject</a> or <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> whose availability or relevance is time-limited, or a <a class="localLink" href="http://schema.org/ClaimReview">ClaimReview</a> fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date. */
export const expires = /*#__PURE__*/ ns("expires");
/** Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property. */
export const familyName = /*#__PURE__*/ ns("familyName");
/** The number of grams of fat. */
export const fatContent = /*#__PURE__*/ ns("fatContent");
/** The fax number. */
export const faxNumber = /*#__PURE__*/ ns("faxNumber");
/** Features or modules provided by this application (and possibly required by other applications). */
export const featureList = /*#__PURE__*/ ns("featureList");
/** Description of fees, commissions, and other terms applied either to a class of financial product, or by a financial service organization. */
export const feesAndCommissionsSpecification = /*#__PURE__*/ ns("feesAndCommissionsSpecification");
/** The number of grams of fiber. */
export const fiberContent = /*#__PURE__*/ ns("fiberContent");
/** Media type, typically MIME format (see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA site</a>) of the content e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information. Unregistered or niche file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia entry. */
export const fileFormat = /*#__PURE__*/ ns("fileFormat");
/** Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed. */
export const fileSize = /*#__PURE__*/ ns("fileSize");
/** The date and place the work was first performed. */
export const firstPerformance = /*#__PURE__*/ ns("firstPerformance");
/** The distance of the flight. */
export const flightDistance = /*#__PURE__*/ ns("flightDistance");
/** The unique identifier for a flight including the airline IATA code. For example, if describing United flight 110, where the IATA code for United is 'UA', the flightNumber is 'UA110'. */
export const flightNumber = /*#__PURE__*/ ns("flightNumber");
/** The size of the accommodation, e.g. in square meter or squarefoot.
Typical unit code(s): MTK for square meter, FTK for square foot, or YDK for square yard */
export const floorSize = /*#__PURE__*/ ns("floorSize");
/** A sub property of object. The person or organization being followed. */
export const followee = /*#__PURE__*/ ns("followee");
/** The most generic uni-directional social relation. */
export const follows = /*#__PURE__*/ ns("follows");
/** A sub property of location. The specific food establishment where the action occurred. */
export const foodEstablishment = /*#__PURE__*/ ns("foodEstablishment");
/** A sub property of location. The specific food event where the action occurred. */
export const foodEvent = /*#__PURE__*/ ns("foodEvent");
/** A person who founded this organization. */
export const founders = /*#__PURE__*/ ns("founders");
/** The date that this organization was founded. */
export const foundingDate = /*#__PURE__*/ ns("foundingDate");
/** The place where the Organization was founded. */
export const foundingLocation = /*#__PURE__*/ ns("foundingLocation");
/** A flag to signal that the item, event, or place is accessible for free. */
export const free = /*#__PURE__*/ ns("free");
/** A sub property of location. The original location of the object or the agent before the action. */
export const fromLocation = /*#__PURE__*/ ns("fromLocation");
/** The amount of fuel consumed for traveling a particular distance or temporal duration with the given vehicle (e.g. liters per 100 km).<br/><br/>

<ul>
<li>Note 1: There are unfortunately no standard unit codes for liters per 100 km.  Use <a class="localLink" href="http://schema.org/unitText">unitText</a> to indicate the unit of measurement, e.g. L/100 km.</li>
<li>Note 2: There are two ways of indicating the fuel consumption, <a class="localLink" href="http://schema.org/fuelConsumption">fuelConsumption</a> (e.g. 8 liters per 100 km) and <a class="localLink" href="http://schema.org/fuelEfficiency">fuelEfficiency</a> (e.g. 30 miles per gallon). They are reciprocal.</li>
<li>Note 3: Often, the absolute value is useful only when related to driving speed ("at 80 km/h") or usage pattern ("city traffic"). You can use <a class="localLink" href="http://schema.org/valueReference">valueReference</a> to link the value for the fuel consumption to another value.</li>
</ul>
 */
export const fuelConsumption = /*#__PURE__*/ ns("fuelConsumption");
/** The distance traveled per unit of fuel used; most commonly miles per gallon (mpg) or kilometers per liter (km/L).<br/><br/>

<ul>
<li>Note 1: There are unfortunately no standard unit codes for miles per gallon or kilometers per liter. Use <a class="localLink" href="http://schema.org/unitText">unitText</a> to indicate the unit of measurement, e.g. mpg or km/L.</li>
<li>Note 2: There are two ways of indicating the fuel consumption, <a class="localLink" href="http://schema.org/fuelConsumption">fuelConsumption</a> (e.g. 8 liters per 100 km) and <a class="localLink" href="http://schema.org/fuelEfficiency">fuelEfficiency</a> (e.g. 30 miles per gallon). They are reciprocal.</li>
<li>Note 3: Often, the absolute value is useful only when related to driving speed ("at 80 km/h") or usage pattern ("city traffic"). You can use <a class="localLink" href="http://schema.org/valueReference">valueReference</a> to link the value for the fuel economy to another value.</li>
</ul>
 */
export const fuelEfficiency = /*#__PURE__*/ ns("fuelEfficiency");
/** The type of fuel suitable for the engine or engines of the vehicle. If the vehicle has only one engine, this property can be attached directly to the vehicle. */
export const fuelType = /*#__PURE__*/ ns("fuelType");
/** A person or organization that supports (sponsors) something through some kind of financial contribution. */
export const funder = /*#__PURE__*/ ns("funder");
/** An item is an object within the game world that can be collected by a player or, occasionally, a non-player character. */
export const gameItem = /*#__PURE__*/ ns("gameItem");
/** Real or fictional location of the game (or part of game). */
export const gameLocation = /*#__PURE__*/ ns("gameLocation");
/** The electronic systems used to play <a href="http://en.wikipedia.org/wiki/Category:Video_game_platforms">video games</a>. */
export const gamePlatform = /*#__PURE__*/ ns("gamePlatform");
/** Links to tips, tactics, etc. */
export const gameTip = /*#__PURE__*/ ns("gameTip");
/** Gender of the person. While http://schema.org/Male and http://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. */
export const gender = /*#__PURE__*/ ns("gender");
/** Genre of the creative work, broadcast channel or group. */
export const genre = /*#__PURE__*/ ns("genre");
/** The geo coordinates of the place. */
export const geo = /*#__PURE__*/ ns("geo");
/** Represents a relationship between two geometries (or the places they represent), relating a containing geometry to a contained geometry. "a contains b iff no points of b lie in the exterior of a, and at least one point of the interior of b lies in the interior of a". As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>. */
export const geoContains = /*#__PURE__*/ ns("geoContains");
/** Represents a relationship between two geometries (or the places they represent), relating a geometry to another that covers it. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>. */
export const geoCoveredBy = /*#__PURE__*/ ns("geoCoveredBy");
/** Represents a relationship between two geometries (or the places they represent), relating a covering geometry to a covered geometry. "Every point of b is a point of (the interior or boundary of) a". As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>. */
export const geoCovers = /*#__PURE__*/ ns("geoCovers");
/** Represents a relationship between two geometries (or the places they represent), relating a geometry to another that crosses it: "a crosses b: they have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them". As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>. */
export const geoCrosses = /*#__PURE__*/ ns("geoCrosses");
/** Represents spatial relations in which two geometries (or the places they represent) are topologically disjoint: they have no point in common. They form a set of disconnected geometries." (a symmetric relationship, as defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>) */
export const geoDisjoint = /*#__PURE__*/ ns("geoDisjoint");
/** Represents spatial relations in which two geometries (or the places they represent) are topologically equal, as defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>. "Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other" (a symmetric relationship) */
export const geoEquals = /*#__PURE__*/ ns("geoEquals");
/** Represents spatial relations in which two geometries (or the places they represent) have at least one point in common. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>. */
export const geoIntersects = /*#__PURE__*/ ns("geoIntersects");
/** Indicates the GeoCoordinates at the centre of a GeoShape e.g. GeoCircle. */
export const geoMidpoint = /*#__PURE__*/ ns("geoMidpoint");
/** Represents a relationship between two geometries (or the places they represent), relating a geometry to another that geospatially overlaps it, i.e. they have some but not all points in common. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>. */
export const geoOverlaps = /*#__PURE__*/ ns("geoOverlaps");
/** Indicates the approximate radius of a GeoCircle (metres unless indicated otherwise via Distance notation). */
export const geoRadius = /*#__PURE__*/ ns("geoRadius");
/** Represents spatial relations in which two geometries (or the places they represent) touch: they have at least one boundary point in common, but no interior points." (a symmetric relationship, as defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a> ) */
export const geoTouches = /*#__PURE__*/ ns("geoTouches");
/** Represents a relationship between two geometries (or the places they represent), relating a geometry to one that contains it, i.e. it is inside (i.e. within) its interior. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>. */
export const geoWithin = /*#__PURE__*/ ns("geoWithin");
/** The geographic area associated with the audience. */
export const geographicArea = /*#__PURE__*/ ns("geographicArea");
/** Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property. */
export const givenName = /*#__PURE__*/ ns("givenName");
/** The <a href="http://www.gs1.org/gln">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations. */
export const globalLocationNumber = /*#__PURE__*/ ns("globalLocationNumber");
/** The person, organization, contact point, or audience that has been granted this permission. */
export const grantee = /*#__PURE__*/ ns("grantee");
/** This ordering relation for qualitative values indicates that the subject is greater than the object. */
export const greater = /*#__PURE__*/ ns("greater");
/** This ordering relation for qualitative values indicates that the subject is greater than or equal to the object. */
export const greaterOrEqual = /*#__PURE__*/ ns("greaterOrEqual");
/** The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details. */
export const gtin12 = /*#__PURE__*/ ns("gtin12");
/** The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details. */
export const gtin13 = /*#__PURE__*/ ns("gtin13");
/** The GTIN-14 code of the product, or the product to which the offer refers. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details. */
export const gtin14 = /*#__PURE__*/ ns("gtin14");
/** The <a href="http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx">GTIN-8</a> code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details. */
export const gtin8 = /*#__PURE__*/ ns("gtin8");
/** An offering of the course at a specific time and place or through specific media or mode of study or to a specific section of students. */
export const hasCourseInstance = /*#__PURE__*/ ns("hasCourseInstance");
/** Method used for delivery or shipping. */
export const hasDeliveryMethod = /*#__PURE__*/ ns("hasDeliveryMethod");
/** A permission related to the access to this document (e.g. permission to read or write an electronic document). For a public document, specify a grantee with an Audience with audienceType equal to "public". */
export const hasDigitalDocumentPermission = /*#__PURE__*/ ns("hasDigitalDocumentPermission");
/** A food or drink item contained in a menu or menu section. */
export const hasMenuItem = /*#__PURE__*/ ns("hasMenuItem");
/** A subgrouping of the menu (by dishes, course, serving time period, etc.). */
export const hasMenuSection = /*#__PURE__*/ ns("hasMenuSection");
/** The Person's occupation. For past professions, use Role for expressing dates. */
export const hasOccupation = /*#__PURE__*/ ns("hasOccupation");
/** Indicates an OfferCatalog listing for this Organization, Person, or Service. */
export const hasOfferCatalog = /*#__PURE__*/ ns("hasOfferCatalog");
/** Points-of-Sales operated by the organization or person. */
export const hasPOS = /*#__PURE__*/ ns("hasPOS");
/** Headline of the article. */
export const headline = /*#__PURE__*/ ns("headline");
/** The height of the item. */
export const height = /*#__PURE__*/ ns("height");
/** The highest price of all offers available.<br/><br/>

Usage guidelines:<br/><br/>

<ul>
<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
</ul>
 */
export const highPrice = /*#__PURE__*/ ns("highPrice");
/** Organization offering the job position. */
export const hiringOrganization = /*#__PURE__*/ ns("hiringOrganization");
/** A contact location for a person's residence. */
export const homeLocation = /*#__PURE__*/ ns("homeLocation");
/** The home team in a sports event. */
export const homeTeam = /*#__PURE__*/ ns("homeTeam");
/** An honorific prefix preceding a Person's name such as Dr/Mrs/Mr. */
export const honorificPrefix = /*#__PURE__*/ ns("honorificPrefix");
/** An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW. */
export const honorificSuffix = /*#__PURE__*/ ns("honorificSuffix");
/** The organization (airline, travelers' club, etc.) the membership is made with. */
export const hostingOrganization = /*#__PURE__*/ ns("hostingOrganization");
/** The hours during which this service or contact is available. */
export const hoursAvailable = /*#__PURE__*/ ns("hoursAvailable");
/** An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP. */
export const httpMethod = /*#__PURE__*/ ns("httpMethod");
/** IATA identifier for an airline or airport. */
export const iataCode = /*#__PURE__*/ ns("iataCode");
/** ICAO identifier for an airport. */
export const icaoCode = /*#__PURE__*/ ns("icaoCode");
/** The illustrator of the book. */
export const illustrator = /*#__PURE__*/ ns("illustrator");
/** The album to which this recording belongs. */
export const inAlbum = /*#__PURE__*/ ns("inAlbum");
/** The CableOrSatelliteService offering the channel. */
export const inBroadcastLineup = /*#__PURE__*/ ns("inBroadcastLineup");
/** The playlist to which this recording belongs. */
export const inPlaylist = /*#__PURE__*/ ns("inPlaylist");
/** Description of bonus and commission compensation aspects of the job. */
export const incentives = /*#__PURE__*/ ns("incentives");
/** Smaller compositions included in this work (e.g. a movement in a symphony). */
export const includedComposition = /*#__PURE__*/ ns("includedComposition");
/** A data catalog which contains this dataset (this property was previously 'catalog', preferred name is now 'includedInDataCatalog'). */
export const includedDataCatalog = /*#__PURE__*/ ns("includedDataCatalog");
/** This links to a node or nodes indicating the exact quantity of the products included in the offer. */
export const includesObject = /*#__PURE__*/ ns("includesObject");
/** The industry associated with the job position. */
export const industry = /*#__PURE__*/ ns("industry");
/** The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed.<br/><br/>

See also <a class="localLink" href="http://schema.org/eligibleRegion">eligibleRegion</a>. */
export const ineligibleRegion = /*#__PURE__*/ ns("ineligibleRegion");
/** A single ingredient used in the recipe, e.g. sugar, flour or garlic. */
export const ingredients = /*#__PURE__*/ ns("ingredients");
/** URL at which the app may be installed, if different from the URL of the item. */
export const installUrl = /*#__PURE__*/ ns("installUrl");
/** A person assigned to instruct or provide instructional assistance for the <a class="localLink" href="http://schema.org/CourseInstance">CourseInstance</a>. */
export const instructor = /*#__PURE__*/ ns("instructor");
/** This property is deprecated, alongside the UserInteraction types on which it depended. */
export const interactionCount = /*#__PURE__*/ ns("interactionCount");
/** The WebSite or SoftwareApplication where the interactions took place. */
export const interactionService = /*#__PURE__*/ ns("interactionService");
/** The Action representing the type of interaction. For up votes, +1s, etc. use <a class="localLink" href="http://schema.org/LikeAction">LikeAction</a>. For down votes use <a class="localLink" href="http://schema.org/DislikeAction">DislikeAction</a>. Otherwise, use the most specific Action. */
export const interactionType = /*#__PURE__*/ ns("interactionType");
/** The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'. */
export const interactivityType = /*#__PURE__*/ ns("interactivityType");
/** The interest rate, charged or paid, applicable to the financial product. Note: This is different from the calculated annualPercentageRate. */
export const interestRate = /*#__PURE__*/ ns("interestRate");
/** The current approximate inventory level for the item or items. */
export const inventoryLevel = /*#__PURE__*/ ns("inventoryLevel");
/** A pointer to another product (or multiple products) for which this product is an accessory or spare part. */
export const isAccessoryOrSparePartFor = /*#__PURE__*/ ns("isAccessoryOrSparePartFor");
/** A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html. */
export const isBasedOnUrl = /*#__PURE__*/ ns("isBasedOnUrl");
/** A pointer to another product (or multiple products) for which this product is a consumable. */
export const isConsumableFor = /*#__PURE__*/ ns("isConsumableFor");
/** Indicates whether this content is family friendly. */
export const isFamilyFriendly = /*#__PURE__*/ ns("isFamilyFriendly");
/** Was the offer accepted as a gift for someone other than the buyer. */
export const isGift = /*#__PURE__*/ ns("isGift");
/** True is the broadcast is of a live event. */
export const isLiveBroadcast = /*#__PURE__*/ ns("isLiveBroadcast");
/** A pointer to another, somehow related product (or multiple products). */
export const isRelatedTo = /*#__PURE__*/ ns("isRelatedTo");
/** A pointer to another, functionally similar product (or multiple products). */
export const isSimilarTo = /*#__PURE__*/ ns("isSimilarTo");
/** A pointer to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive. */
export const isVariantOf = /*#__PURE__*/ ns("isVariantOf");
/** The ISBN of the book. */
export const isbn = /*#__PURE__*/ ns("isbn");
/** The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place. */
export const isicV4 = /*#__PURE__*/ ns("isicV4");
/** The International Standard Recording Code for the recording. */
export const isrcCode = /*#__PURE__*/ ns("isrcCode");
/** The International Standard Serial Number (ISSN) that identifies this serial publication. You can repeat this property to identify different formats of, or the linking ISSN (ISSN-L) for, this serial publication. */
export const issn = /*#__PURE__*/ ns("issn");
/** Identifies the issue of publication; for example, "iii" or "2". */
export const issueNumber = /*#__PURE__*/ ns("issueNumber");
/** The organization issuing the ticket or permit. */
export const issuedBy = /*#__PURE__*/ ns("issuedBy");
/** The service through with the permit was granted. */
export const issuedThrough = /*#__PURE__*/ ns("issuedThrough");
/** The International Standard Musical Work Code for the composition. */
export const iswcCode = /*#__PURE__*/ ns("iswcCode");
/** An entity represented by an entry in a list or data feed (e.g. an 'artist' in a list of 'artists')’. */
export const item = /*#__PURE__*/ ns("item");
/** A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer. */
export const itemCondition = /*#__PURE__*/ ns("itemCondition");
/** For itemListElement values, you can use simple strings (e.g. "Peter", "Paul", "Mary"), existing entities, or use ListItem.<br/><br/>

Text values are best if the elements in the list are plain strings. Existing entities are best for a simple, unordered list of existing things in your data. ListItem is used with ordered lists when you want to provide additional context about the element in that list or when the same item might be in different places in different lists.<br/><br/>

Note: The order of elements in your mark-up is not sufficient for indicating the order or elements.  Use ListItem with a 'position' property in such cases. */
export const itemListElement = /*#__PURE__*/ ns("itemListElement");
/** Type of ordering (e.g. Ascending, Descending, Unordered). */
export const itemListOrder = /*#__PURE__*/ ns("itemListOrder");
/** The item being offered. */
export const itemOffered = /*#__PURE__*/ ns("itemOffered");
/** The item that is being reviewed/rated. */
export const itemReviewed = /*#__PURE__*/ ns("itemReviewed");
/** Item(s) being shipped. */
export const itemShipped = /*#__PURE__*/ ns("itemShipped");
/** A (typically single) geographic location associated with the job position. */
export const jobLocation = /*#__PURE__*/ ns("jobLocation");
/** Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas. */
export const keywords = /*#__PURE__*/ ns("keywords");
/** A textual description of known damages, both repaired and unrepaired. */
export const knownVehicleDamages = /*#__PURE__*/ ns("knownVehicleDamages");
/** The most generic bi-directional social/work relation. */
export const knows = /*#__PURE__*/ ns("knows");
/** A sub property of participant. The owner of the real estate property. */
export const landlord = /*#__PURE__*/ ns("landlord");
/** A sub property of instrument. The language used on this action. */
export const language = /*#__PURE__*/ ns("language");
/** Date on which the content on this web page was last reviewed for accuracy and/or completeness. */
export const lastReviewed = /*#__PURE__*/ ns("lastReviewed");
/** The latitude of a location. For example <code>37.42242</code> (<a href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS 84</a>). */
export const latitude = /*#__PURE__*/ ns("latitude");
/** The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'. */
export const learningResourceType = /*#__PURE__*/ ns("learningResourceType");
/** The official name of the organization, e.g. the registered company name. */
export const legalName = /*#__PURE__*/ ns("legalName");
/** An organization identifier that uniquely identifies a legal entity as defined in ISO 17442. */
export const leiCode = /*#__PURE__*/ ns("leiCode");
/** A sub property of participant. The person that lends the object being borrowed. */
export const lender = /*#__PURE__*/ ns("lender");
/** This ordering relation for qualitative values indicates that the subject is lesser than the object. */
export const lesser = /*#__PURE__*/ ns("lesser");
/** This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object. */
export const lesserOrEqual = /*#__PURE__*/ ns("lesserOrEqual");
/** A license document that applies to this content, typically indicated by URL. */
export const license = /*#__PURE__*/ ns("license");
/** A line is a point-to-point path consisting of two or more points. A line is expressed as a series of two or more point objects separated by space. */
export const line = /*#__PURE__*/ ns("line");
/** An update to the LiveBlog. */
export const liveBlogUpdate = /*#__PURE__*/ ns("liveBlogUpdate");
/** The duration of the loan or credit agreement. */
export const loanTerm = /*#__PURE__*/ ns("loanTerm");
/** The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork. */
export const locationCreated = /*#__PURE__*/ ns("locationCreated");
/** A full description of the lodging unit. */
export const lodgingUnitDescription = /*#__PURE__*/ ns("lodgingUnitDescription");
/** Textual description of the unit type (including suite vs. room, size of bed, etc.). */
export const lodgingUnitType = /*#__PURE__*/ ns("lodgingUnitType");
/** An associated logo. */
export const logo = /*#__PURE__*/ ns("logo");
/** The longitude of a location. For example <code>-122.08585</code> (<a href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS 84</a>). */
export const longitude = /*#__PURE__*/ ns("longitude");
/** A sub property of participant. The loser of the action. */
export const loser = /*#__PURE__*/ ns("loser");
/** The lowest price of all offers available.<br/><br/>

Usage guidelines:<br/><br/>

<ul>
<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
</ul>
 */
export const lowPrice = /*#__PURE__*/ ns("lowPrice");
/** The person who wrote the words. */
export const lyricist = /*#__PURE__*/ ns("lyricist");
/** The words in the song. */
export const lyrics = /*#__PURE__*/ ns("lyrics");
/** Indicates if this web page element is the main subject of the page. */
export const mainContentOfPage = /*#__PURE__*/ ns("mainContentOfPage");
/** The manufacturer of the product. */
export const manufacturer = /*#__PURE__*/ ns("manufacturer");
/** A URL to a map of the place. */
export const map = /*#__PURE__*/ ns("map");
/** Indicates the kind of Map, from the MapCategoryType Enumeration. */
export const mapType = /*#__PURE__*/ ns("mapType");
/** A URL to a map of the place. */
export const maps = /*#__PURE__*/ ns("maps");
/** The highest price if the price is a range. */
export const maxPrice = /*#__PURE__*/ ns("maxPrice");
/** The upper value of some characteristic or property. */
export const maxValue = /*#__PURE__*/ ns("maxValue");
/** The total number of individuals that may attend an event or venue. */
export const maximumAttendeeCapacity = /*#__PURE__*/ ns("maximumAttendeeCapacity");
/** Description of the meals that will be provided or available for purchase. */
export const mealService = /*#__PURE__*/ ns("mealService");
/** The median value. */
export const median = /*#__PURE__*/ ns("median");
/** A member of this organization. */
export const members = /*#__PURE__*/ ns("members");
/** A unique identifier for the membership. */
export const membershipNumber = /*#__PURE__*/ ns("membershipNumber");
/** Minimum memory requirements. */
export const memoryRequirements = /*#__PURE__*/ ns("memoryRequirements");
/** Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept. */
export const mentions = /*#__PURE__*/ ns("mentions");
/** Either the actual menu as a structured representation, as text, or a URL of the menu. */
export const menu = /*#__PURE__*/ ns("menu");
/** Additional menu item(s) such as a side dish of salad or side order of fries that can be added to this menu item. Additionally it can be a menu section containing allowed add-on menu items for this menu item. */
export const menuAddOn = /*#__PURE__*/ ns("menuAddOn");
/** 'merchant' is an out-dated term for 'seller'. */
export const merchant = /*#__PURE__*/ ns("merchant");
/** A CreativeWork attached to the message. */
export const messageAttachment = /*#__PURE__*/ ns("messageAttachment");
/** The total distance travelled by the particular vehicle since its initial production, as read from its odometer.<br/><br/>

Typical unit code(s): KMT for kilometers, SMI for statute miles */
export const mileageFromOdometer = /*#__PURE__*/ ns("mileageFromOdometer");
/** The lowest price if the price is a range. */
export const minPrice = /*#__PURE__*/ ns("minPrice");
/** The lower value of some characteristic or property. */
export const minValue = /*#__PURE__*/ ns("minValue");
/** The minimum payment required at this time. */
export const minimumPaymentDue = /*#__PURE__*/ ns("minimumPaymentDue");
/** The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties. */
export const model = /*#__PURE__*/ ns("model");
/** The date and time the reservation was modified. */
export const modifiedTime = /*#__PURE__*/ ns("modifiedTime");
/** The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers. */
export const mpn = /*#__PURE__*/ ns("mpn");
/** Whether multiple values are allowed for the property.  Default is false. */
export const multipleValues = /*#__PURE__*/ ns("multipleValues");
/** An arrangement derived from the composition. */
export const musicArrangement = /*#__PURE__*/ ns("musicArrangement");
/** The composer of the soundtrack. */
export const musicBy = /*#__PURE__*/ ns("musicBy");
/** The type of composition (e.g. overture, sonata, symphony, etc.). */
export const musicCompositionForm = /*#__PURE__*/ ns("musicCompositionForm");
/** A member of a music group&#x2014;for example, John, Paul, George, or Ringo. */
export const musicGroupMember = /*#__PURE__*/ ns("musicGroupMember");
/** Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.). */
export const musicReleaseFormat = /*#__PURE__*/ ns("musicReleaseFormat");
/** The key, mode, or scale this composition uses. */
export const musicalKey = /*#__PURE__*/ ns("musicalKey");
/** The North American Industry Classification System (NAICS) code for a particular organization or business person. */
export const naics = /*#__PURE__*/ ns("naics");
/** The name of the item. */
export const name = /*#__PURE__*/ ns("name");
/** A position played, performed or filled by a person or organization, as part of an organization. For example, an athlete in a SportsTeam might play in the position named 'Quarterback'. */
export const namedPosition = /*#__PURE__*/ ns("namedPosition");
/** Nationality of the person. */
export const nationality = /*#__PURE__*/ ns("nationality");
/** The total financial value of the person as calculated by subtracting assets from liabilities. */
export const netWorth = /*#__PURE__*/ ns("netWorth");
/** A link to the ListItem that follows the current one. */
export const nextItem = /*#__PURE__*/ ns("nextItem");
/** This ordering relation for qualitative values indicates that the subject is not equal to the object. */
export const nonEqual = /*#__PURE__*/ ns("nonEqual");
/** The number of adults staying in the unit. */
export const numAdults = /*#__PURE__*/ ns("numAdults");
/** The number of children staying in the unit. */
export const numChildren = /*#__PURE__*/ ns("numChildren");
/** The number of tracks in this album or playlist. */
export const numTracks = /*#__PURE__*/ ns("numTracks");
/** The number or type of airbags in the vehicle. */
export const numberOfAirbags = /*#__PURE__*/ ns("numberOfAirbags");
/** The number of axles.<br/><br/>

Typical unit code(s): C62 */
export const numberOfAxles = /*#__PURE__*/ ns("numberOfAxles");
/** The quantity of the given bed type available in the HotelRoom, Suite, House, or Apartment. */
export const numberOfBeds = /*#__PURE__*/ ns("numberOfBeds");
/** The number of doors.<br/><br/>

Typical unit code(s): C62 */
export const numberOfDoors = /*#__PURE__*/ ns("numberOfDoors");
/** The number of employees in an organization e.g. business. */
export const numberOfEmployees = /*#__PURE__*/ ns("numberOfEmployees");
/** The number of episodes in this season or series. */
export const numberOfEpisodes = /*#__PURE__*/ ns("numberOfEpisodes");
/** The total number of forward gears available for the transmission system of the vehicle.<br/><br/>

Typical unit code(s): C62 */
export const numberOfForwardGears = /*#__PURE__*/ ns("numberOfForwardGears");
/** The number of items in an ItemList. Note that some descriptions might not fully describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems would be for the entire list. */
export const numberOfItems = /*#__PURE__*/ ns("numberOfItems");
/** The number of pages in the book. */
export const numberOfPages = /*#__PURE__*/ ns("numberOfPages");
/** Indicate how many people can play this game (minimum, maximum, or range). */
export const numberOfPlayers = /*#__PURE__*/ ns("numberOfPlayers");
/** The number of owners of the vehicle, including the current one.<br/><br/>

Typical unit code(s): C62 */
export const numberOfPreviousOwners = /*#__PURE__*/ ns("numberOfPreviousOwners");
/** The number of rooms (excluding bathrooms and closets) of the accommodation or lodging business.
Typical unit code(s): ROM for room or C62 for no unit. The type of room can be put in the unitText property of the QuantitativeValue. */
export const numberOfRooms = /*#__PURE__*/ ns("numberOfRooms");
/** The number of seasons in this series. */
export const numberOfSeasons = /*#__PURE__*/ ns("numberOfSeasons");
/** A number associated with a role in an organization, for example, the number on an athlete's jersey. */
export const numberedPosition = /*#__PURE__*/ ns("numberedPosition");
/** Nutrition information about the recipe or menu item. */
export const nutrition = /*#__PURE__*/ ns("nutrition");
/** The allowed total occupancy for the accommodation in persons (including infants etc). For individual accommodations, this is not necessarily the legal maximum but defines the permitted usage as per the contractual agreement (e.g. a double room used by a single person).
Typical unit code(s): C62 for person */
export const occupancy = /*#__PURE__*/ ns("occupancy");
/** The region/country for which this occupational description is appropriate. Note that educational requirements and qualifications can vary between jurisdictions. */
export const occupationLocation = /*#__PURE__*/ ns("occupationLocation");
/** A category describing the job, preferably using a term from a taxonomy such as <a href="http://www.onetcenter.org/taxonomy.html">BLS O*NET-SOC</a>, <a href="https://www.ilo.org/public/english/bureau/stat/isco/isco08/">ISCO-08</a> or similar, with the property repeated for each applicable value. Ideally the taxonomy should be identified, and both the textual label and formal code for the category should be provided.<br/><br/>

Note: for historical reasons, any textual label and formal code provided as a literal may be assumed to be from O*NET-SOC. */
export const occupationalCategory = /*#__PURE__*/ ns("occupationalCategory");
/** The number of offers for the product. */
export const offerCount = /*#__PURE__*/ ns("offerCount");
/** An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. */
export const offers = /*#__PURE__*/ ns("offers");
/** The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas ',' separating each day. Day or time ranges are specified using a hyphen '-'.<br/><br/>

<ul>
<li>Days are specified using the following two-letter combinations: <code>Mo</code>, <code>Tu</code>, <code>We</code>, <code>Th</code>, <code>Fr</code>, <code>Sa</code>, <code>Su</code>.</li>
<li>Times are specified using 24:00 time. For example, 3pm is specified as <code>15:00</code>. </li>
<li>Here is an example: <code>&lt;time itemprop="openingHours" datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays 4-8pm&lt;/time&gt;</code>.</li>
<li>If a business is open 7 days a week, then it can be specified as <code>&lt;time itemprop=&quot;openingHours&quot; datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all day&lt;/time&gt;</code>.</li>
</ul>
 */
export const openingHours = /*#__PURE__*/ ns("openingHours");
/** The opening hours of a certain place. */
export const openingHoursSpecification = /*#__PURE__*/ ns("openingHoursSpecification");
/** The opening hour of the place or service on the given day(s) of the week. */
export const opens = /*#__PURE__*/ ns("opens");
/** Operating systems supported (Windows 7, OSX 10.6, Android 1.6). */
export const operatingSystem = /*#__PURE__*/ ns("operatingSystem");
/** A sub property of participant. The opponent on this action. */
export const opponent = /*#__PURE__*/ ns("opponent");
/** A sub property of object. The options subject to this action. */
export const option = /*#__PURE__*/ ns("option");
/** Date order was placed. */
export const orderDate = /*#__PURE__*/ ns("orderDate");
/** The delivery of the parcel related to this order or order item. */
export const orderDelivery = /*#__PURE__*/ ns("orderDelivery");
/** The identifier of the order item. */
export const orderItemNumber = /*#__PURE__*/ ns("orderItemNumber");
/** The current status of the order item. */
export const orderItemStatus = /*#__PURE__*/ ns("orderItemStatus");
/** The identifier of the transaction. */
export const orderNumber = /*#__PURE__*/ ns("orderNumber");
/** The number of the item ordered. If the property is not set, assume the quantity is one. */
export const orderQuantity = /*#__PURE__*/ ns("orderQuantity");
/** The current status of the order. */
export const orderStatus = /*#__PURE__*/ ns("orderStatus");
/** The item ordered. */
export const orderedItem = /*#__PURE__*/ ns("orderedItem");
/** An organizer of an Event. */
export const organizer = /*#__PURE__*/ ns("organizer");
/** Shipper's address. */
export const originAddress = /*#__PURE__*/ ns("originAddress");
/** The date and time of obtaining the product. */
export const ownedFrom = /*#__PURE__*/ ns("ownedFrom");
/** The date and time of giving up ownership on the product. */
export const ownedThrough = /*#__PURE__*/ ns("ownedThrough");
/** Products owned by the organization or person. */
export const owns = /*#__PURE__*/ ns("owns");
/** The page on which the work ends; for example "138" or "xvi". */
export const pageEnd = /*#__PURE__*/ ns("pageEnd");
/** The page on which the work starts; for example "135" or "xiii". */
export const pageStart = /*#__PURE__*/ ns("pageStart");
/** Any description of pages that is not separated into pageStart and pageEnd; for example, "1-6, 9, 55" or "10-12, 46-49". */
export const pagination = /*#__PURE__*/ ns("pagination");
/** The parent of a question, answer or item in general. */
export const parentItem = /*#__PURE__*/ ns("parentItem");
/** A broadcast service to which the broadcast service may belong to such as regional variations of a national channel. */
export const parentService = /*#__PURE__*/ ns("parentService");
/** A parents of the person. */
export const parents = /*#__PURE__*/ ns("parents");
/** The episode to which this clip belongs. */
export const partOfEpisode = /*#__PURE__*/ ns("partOfEpisode");
/** The order is being paid as part of the referenced Invoice. */
export const partOfInvoice = /*#__PURE__*/ ns("partOfInvoice");
/** The overall order the items in this delivery were included in. */
export const partOfOrder = /*#__PURE__*/ ns("partOfOrder");
/** The season to which this episode belongs. */
export const partOfSeason = /*#__PURE__*/ ns("partOfSeason");
/** The TV series to which this episode or season belongs. */
export const partOfTVSeries = /*#__PURE__*/ ns("partOfTVSeries");
/** Number of people the reservation should accommodate. */
export const partySize = /*#__PURE__*/ ns("partySize");
/** The priority status assigned to a passenger for security or boarding (e.g. FastTrack or Priority). */
export const passengerPriorityStatus = /*#__PURE__*/ ns("passengerPriorityStatus");
/** The passenger's sequence number as assigned by the airline. */
export const passengerSequenceNumber = /*#__PURE__*/ ns("passengerSequenceNumber");
/** Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc. */
export const paymentAccepted = /*#__PURE__*/ ns("paymentAccepted");
/** The date that payment is due. */
export const paymentDue = /*#__PURE__*/ ns("paymentDue");
/** The name of the credit card or other method of payment for the order. */
export const paymentMethod = /*#__PURE__*/ ns("paymentMethod");
/** An identifier for the method of payment used (e.g. the last 4 digits of the credit card). */
export const paymentMethodId = /*#__PURE__*/ ns("paymentMethodId");
/** The status of payment; whether the invoice has been paid or not. */
export const paymentStatus = /*#__PURE__*/ ns("paymentStatus");
/** The URL for sending a payment. */
export const paymentUrl = /*#__PURE__*/ ns("paymentUrl");
/** The 10th percentile value. */
export const percentile10 = /*#__PURE__*/ ns("percentile10");
/** The 25th percentile value. */
export const percentile25 = /*#__PURE__*/ ns("percentile25");
/** The 75th percentile value. */
export const percentile75 = /*#__PURE__*/ ns("percentile75");
/** The 90th percentile value. */
export const percentile90 = /*#__PURE__*/ ns("percentile90");
/** Event that this person is a performer or participant in. */
export const performerIn = /*#__PURE__*/ ns("performerIn");
/** The main performer or performers of the event&#x2014;for example, a presenter, musician, or actor. */
export const performers = /*#__PURE__*/ ns("performers");
/** The type of permission granted the person, organization, or audience. */
export const permissionType = /*#__PURE__*/ ns("permissionType");
/** Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi). */
export const permissions = /*#__PURE__*/ ns("permissions");
/** The target audience for this permit. */
export const permitAudience = /*#__PURE__*/ ns("permitAudience");
/** Indications regarding the permitted usage of the accommodation. */
export const permittedUsage = /*#__PURE__*/ ns("permittedUsage");
/** Indicates whether pets are allowed to enter the accommodation or lodging business. More detailed information can be put in a text value. */
export const petsAllowed = /*#__PURE__*/ ns("petsAllowed");
/** Photographs of this place. */
export const photos = /*#__PURE__*/ ns("photos");
/** Where a taxi will pick up a passenger or a rental car can be picked up. */
export const pickupLocation = /*#__PURE__*/ ns("pickupLocation");
/** When a taxi will pickup a passenger or a rental car can be picked up. */
export const pickupTime = /*#__PURE__*/ ns("pickupTime");
/** Indicates whether this game is multi-player, co-op or single-player.  The game can be marked as multi-player, co-op and single-player at the same time. */
export const playMode = /*#__PURE__*/ ns("playMode");
/** Player type required&#x2014;for example, Flash or Silverlight. */
export const playerType = /*#__PURE__*/ ns("playerType");
/** Number of players on the server. */
export const playersOnline = /*#__PURE__*/ ns("playersOnline");
/** A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more space delimited points where the first and final points are identical. */
export const polygon = /*#__PURE__*/ ns("polygon");
/** The post office box number for PO box addresses. */
export const postOfficeBoxNumber = /*#__PURE__*/ ns("postOfficeBoxNumber");
/** The postal code. For example, 94043. */
export const postalCode = /*#__PURE__*/ ns("postalCode");
/** Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role. */
export const potentialAction = /*#__PURE__*/ ns("potentialAction");
/** A pointer from a previous, often discontinued variant of the product to its newer variant. */
export const predecessorOf = /*#__PURE__*/ ns("predecessorOf");
/** The length of time it takes to prepare the items to be used in instructions or a direction, in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>. */
export const prepTime = /*#__PURE__*/ ns("prepTime");
/** A link to the ListItem that preceeds the current one. */
export const previousItem = /*#__PURE__*/ ns("previousItem");
/** Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated. */
export const previousStartDate = /*#__PURE__*/ ns("previousStartDate");
/** The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.<br/><br/>

Usage guidelines:<br/><br/>

<ul>
<li>Use the <a class="localLink" href="http://schema.org/priceCurrency">priceCurrency</a> property (with standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR") instead of including <a href="http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign">ambiguous symbols</a> such as '$' in the value.</li>
<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
<li>Note that both <a href="http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute">RDFa</a> and Microdata syntax allow the use of a "content=" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>
<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
</ul>
 */
export const price = /*#__PURE__*/ ns("price");
/** This property links to all <a class="localLink" href="http://schema.org/UnitPriceSpecification">UnitPriceSpecification</a> nodes that apply in parallel for the <a class="localLink" href="http://schema.org/CompoundPriceSpecification">CompoundPriceSpecification</a> node. */
export const priceComponent = /*#__PURE__*/ ns("priceComponent");
/** The currency of the price, or a price component when attached to <a class="localLink" href="http://schema.org/PriceSpecification">PriceSpecification</a> and its subtypes.<br/><br/>

Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR". */
export const priceCurrency = /*#__PURE__*/ ns("priceCurrency");
/** The price range of the business, for example <code>$$$</code>. */
export const priceRange = /*#__PURE__*/ ns("priceRange");
/** One or more detailed price specifications, indicating the unit price and delivery or payment charges. */
export const priceSpecification = /*#__PURE__*/ ns("priceSpecification");
/** A short text or acronym indicating multiple price specifications for the same offer, e.g. SRP for the suggested retail price or INVOICE for the invoice price, mostly used in the car industry. */
export const priceType = /*#__PURE__*/ ns("priceType");
/** The date after which the price is no longer available. */
export const priceValidUntil = /*#__PURE__*/ ns("priceValidUntil");
/** Indicates the main image on the page. */
export const primaryImageOfPage = /*#__PURE__*/ ns("primaryImageOfPage");
/** The number of the column in which the NewsArticle appears in the print edition. */
export const printColumn = /*#__PURE__*/ ns("printColumn");
/** The edition of the print product in which the NewsArticle appears. */
export const printEdition = /*#__PURE__*/ ns("printEdition");
/** If this NewsArticle appears in print, this field indicates the name of the page on which the article is found. Please note that this field is intended for the exact page name (e.g. A5, B18). */
export const printPage = /*#__PURE__*/ ns("printPage");
/** If this NewsArticle appears in print, this field indicates the print section in which the article appeared. */
export const printSection = /*#__PURE__*/ ns("printSection");
/** Estimated processing time for the service using this channel. */
export const processingTime = /*#__PURE__*/ ns("processingTime");
/** Processor architecture required to run the application (e.g. IA64). */
export const processorRequirements = /*#__PURE__*/ ns("processorRequirements");
/** The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.). */
export const producer = /*#__PURE__*/ ns("producer");
/** The tangible thing generated by the service, e.g. a passport, permit, etc. */
export const produces = /*#__PURE__*/ ns("produces");
/** The product identifier, such as ISBN. For example: <code>meta itemprop="productID" content="isbn:123-456-789"</code>. */
export const productID = /*#__PURE__*/ ns("productID");
/** The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. "iPhone") or a general category of products or services (e.g. "smartphones"). */
export const productSupported = /*#__PURE__*/ ns("productSupported");
/** The production company or studio responsible for the item e.g. series, video game, episode etc. */
export const productionCompany = /*#__PURE__*/ ns("productionCompany");
/** The date of production of the item, e.g. vehicle. */
export const productionDate = /*#__PURE__*/ ns("productionDate");
/** Proficiency needed for this content; expected values: 'Beginner', 'Expert'. */
export const proficiencyLevel = /*#__PURE__*/ ns("proficiencyLevel");
/** Any membership in a frequent flyer, hotel loyalty program, etc. being applied to the reservation. */
export const programMembershipUsed = /*#__PURE__*/ ns("programMembershipUsed");
/** The program providing the membership. */
export const programName = /*#__PURE__*/ ns("programName");
/** The computer programming language. */
export const programmingLanguage = /*#__PURE__*/ ns("programmingLanguage");
/** Indicates whether API is managed or unmanaged. */
export const programmingModel = /*#__PURE__*/ ns("programmingModel");
/** A commonly used identifier for the characteristic represented by the property, e.g. a manufacturer or a standard code for a property. propertyID can be
(1) a prefixed string, mainly meant to be used with standards for product properties; (2) a site-specific, non-prefixed string (e.g. the primary key of the property or the vendor-specific id of the property), or (3)
a URL indicating the type of the property, either pointing to an external vocabulary, or a Web resource that describes the property (e.g. a glossary entry).
Standards bodies should promote a standard prefix for the identifiers of properties from their standards. */
export const propertyID = /*#__PURE__*/ ns("propertyID");
/** The number of grams of protein. */
export const proteinContent = /*#__PURE__*/ ns("proteinContent");
/** Indicates the mobility of a provided service (e.g. 'static', 'dynamic'). */
export const providerMobility = /*#__PURE__*/ ns("providerMobility");
/** The service provided by this channel. */
export const providesService = /*#__PURE__*/ ns("providesService");
/** A flag to signal that the <a class="localLink" href="http://schema.org/Place">Place</a> is open to public visitors.  If this property is omitted there is no assumed default boolean value */
export const publicAccess = /*#__PURE__*/ ns("publicAccess");
/** A publication event associated with the item. */
export const publication = /*#__PURE__*/ ns("publication");
/** A broadcast service associated with the publication event. */
export const publishedOn = /*#__PURE__*/ ns("publishedOn");
/** The publisher of the creative work. */
export const publisher = /*#__PURE__*/ ns("publisher");
/** The publishingPrinciples property indicates (typically via <a class="localLink" href="http://schema.org/URL">URL</a>) a document describing the editorial principles of an <a class="localLink" href="http://schema.org/Organization">Organization</a> (or individual e.g. a <a class="localLink" href="http://schema.org/Person">Person</a> writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a> (e.g. <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a>) the principles are those of the party primarily responsible for the creation of the <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a>.<br/><br/>

While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a <a class="localLink" href="http://schema.org/funder">funder</a>) can be expressed using schema.org terminology. */
export const publishingPrinciples = /*#__PURE__*/ ns("publishingPrinciples");
/** The date the item e.g. vehicle was purchased by the current owner. */
export const purchaseDate = /*#__PURE__*/ ns("purchaseDate");
/** A sub property of instrument. The query used on this action. */
export const query = /*#__PURE__*/ ns("query");
/** The task that a player-controlled character, or group of characters may complete in order to gain a reward. */
export const quest = /*#__PURE__*/ ns("quest");
/** A sub property of object. A question. */
export const question = /*#__PURE__*/ ns("question");
/** The count of total number of ratings. */
export const ratingCount = /*#__PURE__*/ ns("ratingCount");
/** The rating for the content.<br/><br/>

Usage guidelines:<br/><br/>

<ul>
<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
</ul>
 */
export const ratingValue = /*#__PURE__*/ ns("ratingValue");
/** Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a "hidden" input in an HTML form. */
export const readonlyValue = /*#__PURE__*/ ns("readonlyValue");
/** A sub property of participant. The real estate agent involved in the action. */
export const realEstateAgent = /*#__PURE__*/ ns("realEstateAgent");
/** A sub property of instrument. The recipe/instructions used to perform the action. */
export const recipe = /*#__PURE__*/ ns("recipe");
/** The category of the recipe—for example, appetizer, entree, etc. */
export const recipeCategory = /*#__PURE__*/ ns("recipeCategory");
/** The cuisine of the recipe (for example, French or Ethiopian). */
export const recipeCuisine = /*#__PURE__*/ ns("recipeCuisine");
/** A step in making the recipe, in the form of a single item (document, video, etc.) or an ordered list with HowToStep and/or HowToSection items. */
export const recipeInstructions = /*#__PURE__*/ ns("recipeInstructions");
/** The quantity produced by the recipe (for example, number of people served, number of servings, etc). */
export const recipeYield = /*#__PURE__*/ ns("recipeYield");
/** The label that issued the release. */
export const recordLabel = /*#__PURE__*/ ns("recordLabel");
/** The reference quantity for which a certain price applies, e.g. 1 EUR per 4 kWh of electricity. This property is a replacement for unitOfMeasurement for the advanced cases where the price does not relate to a standard unit. */
export const referenceQuantity = /*#__PURE__*/ ns("referenceQuantity");
/** The Order(s) related to this Invoice. One or more Orders may be combined into a single Invoice. */
export const referencesOrder = /*#__PURE__*/ ns("referencesOrder");
/** The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in <a href="http://en.wikipedia.org/wiki/ISO_3166">ISO 3166 format</a>. */
export const regionsAllowed = /*#__PURE__*/ ns("regionsAllowed");
/** A link related to this web page, for example to other related web pages. */
export const relatedLink = /*#__PURE__*/ ns("relatedLink");
/** The most generic familial relation. */
export const relatedTo = /*#__PURE__*/ ns("relatedTo");
/** The release date of a product or product model. This can be used to distinguish the exact variant of a product. */
export const releaseDate = /*#__PURE__*/ ns("releaseDate");
/** Description of what changed in this version. */
export const releaseNotes = /*#__PURE__*/ ns("releaseNotes");
/** The place and time the release was issued, expressed as a PublicationEvent. */
export const releasedEvent = /*#__PURE__*/ ns("releasedEvent");
/** The Occupation for the JobPosting. */
export const relevantOccupation = /*#__PURE__*/ ns("relevantOccupation");
/** The number of attendee places for an event that remain unallocated. */
export const remainingAttendeeCapacity = /*#__PURE__*/ ns("remainingAttendeeCapacity");
/** A sub property of object. The object that is being replaced. */
export const replacee = /*#__PURE__*/ ns("replacee");
/** A sub property of object. The object that replaces. */
export const replacer = /*#__PURE__*/ ns("replacer");
/** The URL at which a reply may be posted to the specified UserComment. */
export const replyToUrl = /*#__PURE__*/ ns("replyToUrl");
/** The number or other unique designator assigned to a Report by the publishing organization. */
export const reportNumber = /*#__PURE__*/ ns("reportNumber");
/** Indicates whether this image is representative of the content of the page. */
export const representativeOfPage = /*#__PURE__*/ ns("representativeOfPage");
/** Assets required to secure loan or credit repayments. It may take form of third party pledge, goods, financial instruments (cash, securities, etc.) */
export const requiredCollateral = /*#__PURE__*/ ns("requiredCollateral");
/** Audiences defined by a person's gender. */
export const requiredGender = /*#__PURE__*/ ns("requiredGender");
/** Audiences defined by a person's maximum age. */
export const requiredMaxAge = /*#__PURE__*/ ns("requiredMaxAge");
/** Audiences defined by a person's minimum age. */
export const requiredMinAge = /*#__PURE__*/ ns("requiredMinAge");
/** The required quantity of the item(s). */
export const requiredQuantity = /*#__PURE__*/ ns("requiredQuantity");
/** Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime). */
export const requirements = /*#__PURE__*/ ns("requirements");
/** Indicates if use of the media require a subscription  (either paid or free). Allowed values are <code>true</code> or <code>false</code> (note that an earlier version had 'yes', 'no'). */
export const requiresSubscription = /*#__PURE__*/ ns("requiresSubscription");
/** The thing -- flight, event, restaurant,etc. being reserved. */
export const reservationFor = /*#__PURE__*/ ns("reservationFor");
/** A unique identifier for the reservation. */
export const reservationId = /*#__PURE__*/ ns("reservationId");
/** The current status of the reservation. */
export const reservationStatus = /*#__PURE__*/ ns("reservationStatus");
/** A ticket associated with the reservation. */
export const reservedTicket = /*#__PURE__*/ ns("reservedTicket");
/** Responsibilities associated with this role or Occupation. */
export const responsibilities = /*#__PURE__*/ ns("responsibilities");
/** A sub property of result. The Comment created or sent as a result of this action. */
export const resultComment = /*#__PURE__*/ ns("resultComment");
/** A sub property of result. The review that resulted in the performing of the action. */
export const resultReview = /*#__PURE__*/ ns("resultReview");
/** This Review or Rating is relevant to this part or facet of the itemReviewed. */
export const reviewAspect = /*#__PURE__*/ ns("reviewAspect");
/** The actual body of the review. */
export const reviewBody = /*#__PURE__*/ ns("reviewBody");
/** The count of total number of reviews. */
export const reviewCount = /*#__PURE__*/ ns("reviewCount");
/** The rating given in this review. Note that reviews can themselves be rated. The <code>reviewRating</code> applies to rating given by the review. The <a class="localLink" href="http://schema.org/aggregateRating">aggregateRating</a> property applies to the review itself, as a creative work. */
export const reviewRating = /*#__PURE__*/ ns("reviewRating");
/** People or organizations that have reviewed the content on this web page for accuracy and/or completeness. */
export const reviewedBy = /*#__PURE__*/ ns("reviewedBy");
/** Review of the item. */
export const reviews = /*#__PURE__*/ ns("reviews");
/** The response (yes, no, maybe) to the RSVP. */
export const rsvpResponse = /*#__PURE__*/ ns("rsvpResponse");
/** Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0). */
export const runtime = /*#__PURE__*/ ns("runtime");
/** The currency (coded using <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a> ) used for the main salary information in this job posting or for this employee. */
export const salaryCurrency = /*#__PURE__*/ ns("salaryCurrency");
/** URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website. */
export const sameAs = /*#__PURE__*/ ns("sameAs");
/** What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template. */
export const sampleType = /*#__PURE__*/ ns("sampleType");
/** The number of grams of saturated fat. */
export const saturatedFatContent = /*#__PURE__*/ ns("saturatedFatContent");
/** The date the invoice is scheduled to be paid. */
export const scheduledPaymentDate = /*#__PURE__*/ ns("scheduledPaymentDate");
/** The time the object is scheduled to. */
export const scheduledTime = /*#__PURE__*/ ns("scheduledTime");
/** Indicates (by URL or string) a particular version of a schema used in some CreativeWork. For example, a document could declare a schemaVersion using an URL such as http://schema.org/version/2.0/ if precise indication of schema version was required by some application. */
export const schemaVersion = /*#__PURE__*/ ns("schemaVersion");
/** The number of screens in the movie theater. */
export const screenCount = /*#__PURE__*/ ns("screenCount");
/** A link to a screenshot image of the app. */
export const screenshot = /*#__PURE__*/ ns("screenshot");
/** Position of the season within an ordered group of seasons. */
export const seasonNumber = /*#__PURE__*/ ns("seasonNumber");
/** A season in a media series. */
export const seasons = /*#__PURE__*/ ns("seasons");
/** The location of the reserved seat (e.g., 27). */
export const seatNumber = /*#__PURE__*/ ns("seatNumber");
/** The row location of the reserved seat (e.g., B). */
export const seatRow = /*#__PURE__*/ ns("seatRow");
/** The section location of the reserved seat (e.g. Orchestra). */
export const seatSection = /*#__PURE__*/ ns("seatSection");
/** The type/class of the seat. */
export const seatingType = /*#__PURE__*/ ns("seatingType");
/** The type of security screening the passenger is subject to. */
export const securityScreening = /*#__PURE__*/ ns("securityScreening");
/** A pointer to products or services sought by the organization or person (demand). */
export const seeks = /*#__PURE__*/ ns("seeks");
/** A sub property of participant. The participant who is at the sending end of the action. */
export const sender = /*#__PURE__*/ ns("sender");
/** Status of a game server. */
export const serverStatus = /*#__PURE__*/ ns("serverStatus");
/** The cuisine of the restaurant. */
export const servesCuisine = /*#__PURE__*/ ns("servesCuisine");
/** The audience eligible for this service. */
export const serviceAudience = /*#__PURE__*/ ns("serviceAudience");
/** The location (e.g. civic structure, local business, etc.) where a person can go to access the service. */
export const serviceLocation = /*#__PURE__*/ ns("serviceLocation");
/** The operating organization, if different from the provider.  This enables the representation of services that are provided by an organization, but operated by another organization like a subcontractor. */
export const serviceOperator = /*#__PURE__*/ ns("serviceOperator");
/** The phone number to use to access the service. */
export const servicePhone = /*#__PURE__*/ ns("servicePhone");
/** The address for accessing the service by mail. */
export const servicePostalAddress = /*#__PURE__*/ ns("servicePostalAddress");
/** The number to access the service by text message. */
export const serviceSmsNumber = /*#__PURE__*/ ns("serviceSmsNumber");
/** The type of service being offered, e.g. veterans' benefits, emergency relief, etc. */
export const serviceType = /*#__PURE__*/ ns("serviceType");
/** The website to access the service. */
export const serviceUrl = /*#__PURE__*/ ns("serviceUrl");
/** The serving size, in terms of the number of volume or mass. */
export const servingSize = /*#__PURE__*/ ns("servingSize");
/** A CreativeWork such as an image, video, or audio clip shared as part of this posting. */
export const sharedContent = /*#__PURE__*/ ns("sharedContent");
/** A sibling of the person. */
export const siblings = /*#__PURE__*/ ns("siblings");
/** The most significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most. */
export const significantLinks = /*#__PURE__*/ ns("significantLinks");
/** Skills required to fulfill this role or in this Occupation. */
export const skills = /*#__PURE__*/ ns("skills");
/** The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers. */
export const sku = /*#__PURE__*/ ns("sku");
/** A slogan or motto associated with the item. */
export const slogan = /*#__PURE__*/ ns("slogan");
/** Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room. */
export const smokingAllowed = /*#__PURE__*/ ns("smokingAllowed");
/** The number of milligrams of sodium. */
export const sodiumContent = /*#__PURE__*/ ns("sodiumContent");
/** Additional content for a software application. */
export const softwareAddOn = /*#__PURE__*/ ns("softwareAddOn");
/** Software application help. */
export const softwareHelp = /*#__PURE__*/ ns("softwareHelp");
/** Version of the software instance. */
export const softwareVersion = /*#__PURE__*/ ns("softwareVersion");
/** The Organization on whose behalf the creator was working. */
export const sourceOrganization = /*#__PURE__*/ ns("sourceOrganization");
/** The "spatial" property can be used in cases when more specific properties
(e.g. <a class="localLink" href="http://schema.org/locationCreated">locationCreated</a>, <a class="localLink" href="http://schema.org/spatialCoverage">spatialCoverage</a>, <a class="localLink" href="http://schema.org/contentLocation">contentLocation</a>) are not known to be appropriate. */
export const spatial = /*#__PURE__*/ ns("spatial");
/** The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of
      contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates
      areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York. */
export const spatialCoverage = /*#__PURE__*/ ns("spatialCoverage");
/** Indicates sections of a Web page that are particularly 'speakable' in the sense of being highlighted as being especially appropriate for text-to-speech conversion. Other sections of a page may also be usefully spoken in particular circumstances; the 'speakable' property serves to indicate the parts most likely to be generally useful for speech.<br/><br/>

The <em>speakable</em> property can be repeated an arbitrary number of times, with three kinds of possible 'content-locator' values:<br/><br/>

1.) <em>id-value</em> URL references - uses <em>id-value</em> of an element in the page being annotated. The simplest use of <em>speakable</em> has (potentially relative) URL values, referencing identified sections of the document concerned.<br/><br/>

2.) CSS Selectors - addresses content in the annotated page, eg. via class attribute. Use the <a class="localLink" href="http://schema.org/cssSelector">cssSelector</a> property.<br/><br/>

3.)  XPaths - addresses content via XPaths (assuming an XML view of the content). Use the <a class="localLink" href="http://schema.org/xpath">xpath</a> property.<br/><br/>

For more sophisticated markup of speakable sections beyond simple ID references, either CSS selectors or XPath expressions to pick out document section(s) as speakable. For this
we define a supporting type, <a class="localLink" href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a>  which is defined to be a possible value of the <em>speakable</em> property. */
export const speakable = /*#__PURE__*/ ns("speakable");
/** Any special commitments associated with this job posting. Valid entries include VeteranCommit, MilitarySpouseCommit, etc. */
export const specialCommitments = /*#__PURE__*/ ns("specialCommitments");
/** The special opening hours of a certain place.<br/><br/>

Use this to explicitly override general opening hours brought in scope by <a class="localLink" href="http://schema.org/openingHoursSpecification">openingHoursSpecification</a> or <a class="localLink" href="http://schema.org/openingHours">openingHours</a>. */
export const specialOpeningHoursSpecification = /*#__PURE__*/ ns("specialOpeningHoursSpecification");
/** One of the domain specialities to which this web page's content applies. */
export const specialty = /*#__PURE__*/ ns("specialty");
/** A type of sport (e.g. Baseball). */
export const sport = /*#__PURE__*/ ns("sport");
/** A sub property of location. The sports activity location where this action occurred. */
export const sportsActivityLocation = /*#__PURE__*/ ns("sportsActivityLocation");
/** A sub property of location. The sports event where this action occurred. */
export const sportsEvent = /*#__PURE__*/ ns("sportsEvent");
/** A sub property of participant. The sports team that participated on this action. */
export const sportsTeam = /*#__PURE__*/ ns("sportsTeam");
/** The person's spouse. */
export const spouse = /*#__PURE__*/ ns("spouse");
/** An official rating for a lodging business or food establishment, e.g. from national associations or standards bodies. Use the author property to indicate the rating organization, e.g. as an Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or Hotelstars). */
export const starRating = /*#__PURE__*/ ns("starRating");
/** The start date and time of the item (in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>). */
export const startDate = /*#__PURE__*/ ns("startDate");
/** The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December. For media, including audio and video, it's the time offset of the start of a clip within a larger file.<br/><br/>

Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions. */
export const startTime = /*#__PURE__*/ ns("startTime");
/** The position of the steering wheel or similar device (mostly for cars). */
export const steeringPosition = /*#__PURE__*/ ns("steeringPosition");
/** The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification. */
export const stepValue = /*#__PURE__*/ ns("stepValue");
/** A single step item (as HowToStep, text, document, video, etc.) or a HowToSection (originally misnamed 'steps'; 'step' is preferred). */
export const steps = /*#__PURE__*/ ns("steps");
/** Storage requirements (free space required). */
export const storageRequirements = /*#__PURE__*/ ns("storageRequirements");
/** The street address. For example, 1600 Amphitheatre Pkwy. */
export const streetAddress = /*#__PURE__*/ ns("streetAddress");
/** Events that are a part of this event. For example, a conference event includes many presentations, each subEvents of the conference. */
export const subEvents = /*#__PURE__*/ ns("subEvents");
/** The individual reservations included in the package. Typically a repeated property. */
export const subReservation = /*#__PURE__*/ ns("subReservation");
/** Languages in which subtitles/captions are available, in <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard format</a>. */
export const subtitleLanguage = /*#__PURE__*/ ns("subtitleLanguage");
/** A pointer from a newer variant of a product  to its previous, often discontinued predecessor. */
export const successorOf = /*#__PURE__*/ ns("successorOf");
/** The number of grams of sugar. */
export const sugarContent = /*#__PURE__*/ ns("sugarContent");
/** The gender of the person or audience. */
export const suggestedGender = /*#__PURE__*/ ns("suggestedGender");
/** Maximal age recommended for viewing content. */
export const suggestedMaxAge = /*#__PURE__*/ ns("suggestedMaxAge");
/** Minimal age recommended for viewing content. */
export const suggestedMinAge = /*#__PURE__*/ ns("suggestedMinAge");
/** Indicates a dietary restriction or guideline for which this recipe or menu item is suitable, e.g. diabetic, halal etc. */
export const suitableForDiet = /*#__PURE__*/ ns("suitableForDiet");
/** Supporting data for a SoftwareApplication. */
export const supportingData = /*#__PURE__*/ ns("supportingData");
/** A material used as a surface in some artwork, e.g. Canvas, Paper, Wood, Board, etc. */
export const surface = /*#__PURE__*/ ns("surface");
/** Indicates a target EntryPoint for an Action. */
export const target = /*#__PURE__*/ ns("target");
/** The description of a node in an established educational framework. */
export const targetDescription = /*#__PURE__*/ ns("targetDescription");
/** The name of a node in an established educational framework. */
export const targetName = /*#__PURE__*/ ns("targetName");
/** Type of app development: phone, Metro style, desktop, XBox, etc. */
export const targetPlatform = /*#__PURE__*/ ns("targetPlatform");
/** Target Operating System / Product to which the code applies.  If applies to several versions, just the product name can be used. */
export const targetProduct = /*#__PURE__*/ ns("targetProduct");
/** The URL of a node in an established educational framework. */
export const targetUrl = /*#__PURE__*/ ns("targetUrl");
/** The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain. */
export const taxID = /*#__PURE__*/ ns("taxID");
/** The telephone number. */
export const telephone = /*#__PURE__*/ ns("telephone");
/** The "temporal" property can be used in cases where more specific properties
(e.g. <a class="localLink" href="http://schema.org/temporalCoverage">temporalCoverage</a>, <a class="localLink" href="http://schema.org/dateCreated">dateCreated</a>, <a class="localLink" href="http://schema.org/dateModified">dateModified</a>, <a class="localLink" href="http://schema.org/datePublished">datePublished</a>) are not known to be appropriate. */
export const temporal = /*#__PURE__*/ ns("temporal");
/** The textual content of this CreativeWork. */
export const text = /*#__PURE__*/ ns("text");
/** Thumbnail image for an image or video. */
export const thumbnail = /*#__PURE__*/ ns("thumbnail");
/** A thumbnail image relevant to the Thing. */
export const thumbnailUrl = /*#__PURE__*/ ns("thumbnailUrl");
/** The exchange traded instrument associated with a Corporation object. The tickerSymbol is expressed as an exchange and an instrument name separated by a space character. For the exchange component of the tickerSymbol attribute, we recommend using the controlled vocabulary of Market Identifier Codes (MIC) specified in ISO15022. */
export const tickerSymbol = /*#__PURE__*/ ns("tickerSymbol");
/** The unique identifier for the ticket. */
export const ticketNumber = /*#__PURE__*/ ns("ticketNumber");
/** Reference to an asset (e.g., Barcode, QR code image or PDF) usable for entrance. */
export const ticketToken = /*#__PURE__*/ ns("ticketToken");
/** The seat associated with the ticket. */
export const ticketedSeat = /*#__PURE__*/ ns("ticketedSeat");
/** Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'PT30M', 'PT1H25M'. */
export const timeRequired = /*#__PURE__*/ ns("timeRequired");
/** The title of the job. */
export const title = /*#__PURE__*/ ns("title");
/** A sub property of location. The final location of the object or the agent after the action. */
export const toLocation = /*#__PURE__*/ ns("toLocation");
/** A sub property of recipient. The recipient who was directly sent the message. */
export const toRecipient = /*#__PURE__*/ ns("toRecipient");
/** A sub property of instrument. An object used (but not consumed) when performing instructions or a direction. */
export const tool = /*#__PURE__*/ ns("tool");
/** The total amount due. */
export const totalPaymentDue = /*#__PURE__*/ ns("totalPaymentDue");
/** The total price for the reservation or ticket, including applicable taxes, shipping, etc.<br/><br/>

Usage guidelines:<br/><br/>

<ul>
<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
</ul>
 */
export const totalPrice = /*#__PURE__*/ ns("totalPrice");
/** The total time required to perform instructions or a direction (including time to prepare the supplies), in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>. */
export const totalTime = /*#__PURE__*/ ns("totalTime");
/** Attraction suitable for type(s) of tourist. eg. Children, visitors from a particular country, etc. */
export const touristType = /*#__PURE__*/ ns("touristType");
/** Shipper tracking number. */
export const trackingNumber = /*#__PURE__*/ ns("trackingNumber");
/** Tracking url for the parcel delivery. */
export const trackingUrl = /*#__PURE__*/ ns("trackingUrl");
/** A music recording (track)&#x2014;usually a single song. */
export const tracks = /*#__PURE__*/ ns("tracks");
/** The trailer of a movie or tv/radio series, season, episode, etc. */
export const trailer = /*#__PURE__*/ ns("trailer");
/** The name of the train (e.g. The Orient Express). */
export const trainName = /*#__PURE__*/ ns("trainName");
/** The unique identifier for the train. */
export const trainNumber = /*#__PURE__*/ ns("trainNumber");
/** The number of grams of trans fat. */
export const transFatContent = /*#__PURE__*/ ns("transFatContent");
/** If this MediaObject is an AudioObject or VideoObject, the transcript of that object. */
export const transcript = /*#__PURE__*/ ns("transcript");
/** Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event. */
export const translator = /*#__PURE__*/ ns("translator");
/** The type of bed to which the BedDetail refers, i.e. the type of bed available in the quantity indicated by quantity. */
export const typeOfBed = /*#__PURE__*/ ns("typeOfBed");
/** The product that this structured value is referring to. */
export const typeOfGood = /*#__PURE__*/ ns("typeOfGood");
/** The typical expected age range, e.g. '7-9', '11-'. */
export const typicalAgeRange = /*#__PURE__*/ ns("typicalAgeRange");
/** The person or organization the reservation or ticket is for. */
export const underName = /*#__PURE__*/ ns("underName");
/** The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon. */
export const unitCode = /*#__PURE__*/ ns("unitCode");
/** A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for
<a href='unitCode'>unitCode</a>. */
export const unitText = /*#__PURE__*/ ns("unitText");
/** The number of grams of unsaturated fat. */
export const unsaturatedFatContent = /*#__PURE__*/ ns("unsaturatedFatContent");
/** Date when this media object was uploaded to this site. */
export const uploadDate = /*#__PURE__*/ ns("uploadDate");
/** The number of upvotes this question, answer or comment has received from the community. */
export const upvoteCount = /*#__PURE__*/ ns("upvoteCount");
/** URL of the item. */
export const url = /*#__PURE__*/ ns("url");
/** An url template (RFC6570) that will be used to construct the target of the execution of the action. */
export const urlTemplate = /*#__PURE__*/ ns("urlTemplate");
/** The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. */
export const userInteractionCount = /*#__PURE__*/ ns("userInteractionCount");
/** The duration of validity of a permit or similar thing. */
export const validFor = /*#__PURE__*/ ns("validFor");
/** The date when the item becomes valid. */
export const validFrom = /*#__PURE__*/ ns("validFrom");
/** The geographic area where a permit or similar thing is valid. */
export const validIn = /*#__PURE__*/ ns("validIn");
/** The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours. */
export const validThrough = /*#__PURE__*/ ns("validThrough");
/** The date when the item is no longer valid. */
export const validUntil = /*#__PURE__*/ ns("validUntil");
/** The value of the quantitative value or property value node.<br/><br/>

<ul>
<li>For <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a> and <a class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a>, the recommended type for values is 'Number'.</li>
<li>For <a class="localLink" href="http://schema.org/PropertyValue">PropertyValue</a>, it can be 'Text;', 'Number', 'Boolean', or 'StructuredValue'.</li>
<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
</ul>
 */
export const value = /*#__PURE__*/ ns("value");
/** Specifies whether the applicable value-added tax (VAT) is included in the price specification or not. */
export const valueAddedTaxIncluded = /*#__PURE__*/ ns("valueAddedTaxIncluded");
/** Specifies the allowed range for number of characters in a literal value. */
export const valueMaxLength = /*#__PURE__*/ ns("valueMaxLength");
/** Specifies the minimum allowed range for number of characters in a literal value. */
export const valueMinLength = /*#__PURE__*/ ns("valueMinLength");
/** Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name. */
export const valueName = /*#__PURE__*/ ns("valueName");
/** Specifies a regular expression for testing literal values according to the HTML spec. */
export const valuePattern = /*#__PURE__*/ ns("valuePattern");
/** A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature. */
export const valueReference = /*#__PURE__*/ ns("valueReference");
/** Whether the property must be filled in to complete the action.  Default is false. */
export const valueRequired = /*#__PURE__*/ ns("valueRequired");
/** The Value-added Tax ID of the organization or person. */
export const vatID = /*#__PURE__*/ ns("vatID");
/** A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'. */
export const vehicleConfiguration = /*#__PURE__*/ ns("vehicleConfiguration");
/** Information about the engine or engines of the vehicle. */
export const vehicleEngine = /*#__PURE__*/ ns("vehicleEngine");
/** The Vehicle Identification Number (VIN) is a unique serial number used by the automotive industry to identify individual motor vehicles. */
export const vehicleIdentificationNumber = /*#__PURE__*/ ns("vehicleIdentificationNumber");
/** The color or color combination of the interior of the vehicle. */
export const vehicleInteriorColor = /*#__PURE__*/ ns("vehicleInteriorColor");
/** The type or material of the interior of the vehicle (e.g. synthetic fabric, leather, wood, etc.). While most interior types are characterized by the material used, an interior type can also be based on vehicle usage or target audience. */
export const vehicleInteriorType = /*#__PURE__*/ ns("vehicleInteriorType");
/** The release date of a vehicle model (often used to differentiate versions of the same make and model). */
export const vehicleModelDate = /*#__PURE__*/ ns("vehicleModelDate");
/** The number of passengers that can be seated in the vehicle, both in terms of the physical space available, and in terms of limitations set by law.<br/><br/>

Typical unit code(s): C62 for persons. */
export const vehicleSeatingCapacity = /*#__PURE__*/ ns("vehicleSeatingCapacity");
/** The type of component used for transmitting the power from a rotating power source to the wheels or other relevant component(s) ("gearbox" for cars). */
export const vehicleTransmission = /*#__PURE__*/ ns("vehicleTransmission");
/** 'vendor' is an earlier term for 'seller'. */
export const vendor = /*#__PURE__*/ ns("vendor");
/** The version of the CreativeWork embodied by a specified resource. */
export const version = /*#__PURE__*/ ns("version");
/** An embedded video object. */
export const video = /*#__PURE__*/ ns("video");
/** The type of screening or video broadcast used (e.g. IMAX, 3D, SD, HD, etc.). */
export const videoFormat = /*#__PURE__*/ ns("videoFormat");
/** The frame size of the video. */
export const videoFrameSize = /*#__PURE__*/ ns("videoFrameSize");
/** The quality of the video. */
export const videoQuality = /*#__PURE__*/ ns("videoQuality");
/** Identifies the volume of publication or multi-part work; for example, "iii" or "2". */
export const volumeNumber = /*#__PURE__*/ ns("volumeNumber");
/** The warranty promise(s) included in the offer. */
export const warrantyPromise = /*#__PURE__*/ ns("warrantyPromise");
/** The scope of the warranty promise. */
export const warrantyScope = /*#__PURE__*/ ns("warrantyScope");
/** The time when a passenger can check into the flight online. */
export const webCheckinTime = /*#__PURE__*/ ns("webCheckinTime");
/** The weight of the product or person. */
export const weight = /*#__PURE__*/ ns("weight");
/** The width of the item. */
export const width = /*#__PURE__*/ ns("width");
/** A sub property of participant. The winner of the action. */
export const winner = /*#__PURE__*/ ns("winner");
/** The number of words in the text of the Article. */
export const wordCount = /*#__PURE__*/ ns("wordCount");
/** The typical working hours for this job (e.g. 1st shift, night shift, 8am-5pm). */
export const workHours = /*#__PURE__*/ ns("workHours");
/** A contact location for a person's place of work. */
export const workLocation = /*#__PURE__*/ ns("workLocation");
/** A work performed in some event, for example a play performed in a TheaterEvent. */
export const workPerformed = /*#__PURE__*/ ns("workPerformed");
/** The movie presented during this event. */
export const workPresented = /*#__PURE__*/ ns("workPresented");
/** Organizations that the person works for. */
export const worksFor = /*#__PURE__*/ ns("worksFor");
/** The lowest value allowed in this rating system. If worstRating is omitted, 1 is assumed. */
export const worstRating = /*#__PURE__*/ ns("worstRating");
/** An XPath, e.g. of a <a class="localLink" href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a> or <a class="localLink" href="http://schema.org/WebPageElement">WebPageElement</a>. In the latter case, multiple matches within a page can constitute a single conceptual "Web page element". */
export const xpath = /*#__PURE__*/ ns("xpath");
/** The size of the business in annual revenue. */
export const yearlyRevenue = /*#__PURE__*/ ns("yearlyRevenue");
/** The age of the business. */
export const yearsInOperation = /*#__PURE__*/ ns("yearsInOperation");
/** An application that can complete the request. */
export const actionApplication = /*#__PURE__*/ ns("actionApplication");
/** A sub property of object. The options subject to this action. */
export const actionOption = /*#__PURE__*/ ns("actionOption");
/** An actor, e.g. in tv, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip. */
export const actor = /*#__PURE__*/ ns("actor");
/** A music album. */
export const album = /*#__PURE__*/ ns("album");
/** A release of this album. */
export const albumRelease = /*#__PURE__*/ ns("albumRelease");
/** Alumni of an organization. */
export const alumni = /*#__PURE__*/ ns("alumni");
/** An organization that the person is an alumni of. */
export const alumniOf = /*#__PURE__*/ ns("alumniOf");
/** The supporting materials for the artwork, e.g. Canvas, Paper, Wood, Board, etc. */
export const artworkSurface = /*#__PURE__*/ ns("artworkSurface");
/** A person or organization attending the event. */
export const attendee = /*#__PURE__*/ ns("attendee");
/** An intended audience, i.e. a group for whom something was created. */
export const audience = /*#__PURE__*/ ns("audience");
/** Device required to run the application. Used in cases where a specific make/model is required to run the application. */
export const availableOnDevice = /*#__PURE__*/ ns("availableOnDevice");
/** An award won by or for this item. */
export const award = /*#__PURE__*/ ns("award");
/** A posting that is part of this blog. */
export const blogPost = /*#__PURE__*/ ns("blogPost");
/** An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred. */
export const broker = /*#__PURE__*/ ns("broker");
/** What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template. */
export const codeSampleType = /*#__PURE__*/ ns("codeSampleType");
/** A colleague of the person. */
export const colleague = /*#__PURE__*/ ns("colleague");
/** A contact point for a person or organization. */
export const contactPoint = /*#__PURE__*/ ns("contactPoint");
/** The basic containment relation between a place and another that it contains. */
export const containsPlace = /*#__PURE__*/ ns("containsPlace");
/** A season that is part of the media series. */
export const containsSeason = /*#__PURE__*/ ns("containsSeason");
/** The location depicted or described in the content. For example, the location in a photograph or painting. */
export const contentLocation = /*#__PURE__*/ ns("contentLocation");
/** A dataset contained in this catalog. */
export const dataset = /*#__PURE__*/ ns("dataset");
/** A description of the item. */
export const description = /*#__PURE__*/ ns("description");
/** A director of e.g. tv, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip. */
export const director = /*#__PURE__*/ ns("director");
/** The duration of the item (movie, audio recording, event, etc.) in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>. */
export const duration = /*#__PURE__*/ ns("duration");
/** Someone working for this organization. */
export const employee = /*#__PURE__*/ ns("employee");
/** The CreativeWork encoded by this media object. */
export const encodesCreativeWork = /*#__PURE__*/ ns("encodesCreativeWork");
/** Media type typically expressed using a MIME format (see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA site</a> and <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types">MDN reference</a>) e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.).<br/><br/>

In cases where a <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a> has several media type representations, <a class="localLink" href="http://schema.org/encoding">encoding</a> can be used to indicate each <a class="localLink" href="http://schema.org/MediaObject">MediaObject</a> alongside particular <a class="localLink" href="http://schema.org/encodingFormat">encodingFormat</a> information.<br/><br/>

Unregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry. */
export const encodingFormat = /*#__PURE__*/ ns("encodingFormat");
/** An episode of a tv, radio or game media within a series or season. */
export const episode = /*#__PURE__*/ ns("episode");
/** Upcoming or past event associated with this place, organization, or action. */
export const event = /*#__PURE__*/ ns("event");
/** A creative work that this work is an example/instance/realization/derivation of. */
export const exampleOfWork = /*#__PURE__*/ ns("exampleOfWork");
/** Library file name e.g., mscorlib.dll, system.web.dll. */
export const executableLibraryName = /*#__PURE__*/ ns("executableLibraryName");
/** A sub property of location. The course where this action was taken. */
export const exerciseCourse = /*#__PURE__*/ ns("exerciseCourse");
/** A person who founded this organization. */
export const founder = /*#__PURE__*/ ns("founder");
/** Video game which is played on this server. */
export const game = /*#__PURE__*/ ns("game");
/** The server on which  it is possible to play the game. */
export const gameServer = /*#__PURE__*/ ns("gameServer");
/** A broadcast channel of a broadcast service. */
export const hasBroadcastChannel = /*#__PURE__*/ ns("hasBroadcastChannel");
/** Either the actual menu as a structured representation, as text, or a URL of the menu. */
export const hasMenu = /*#__PURE__*/ ns("hasMenu");
/** The language of the content or performance or used in an action. Please use one of the language codes from the <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>. See also <a class="localLink" href="http://schema.org/availableLanguage">availableLanguage</a>. */
export const inLanguage = /*#__PURE__*/ ns("inLanguage");
/** Description of bonus and commission compensation aspects of the job. */
export const incentiveCompensation = /*#__PURE__*/ ns("incentiveCompensation");
/** The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used. */
export const interactionStatistic = /*#__PURE__*/ ns("interactionStatistic");
/** A flag to signal that the item, event, or place is accessible for free. */
export const isAccessibleForFree = /*#__PURE__*/ ns("isAccessibleForFree");
/** A resource from which this work is derived or from which it is a modification or adaption. */
export const isBasedOn = /*#__PURE__*/ ns("isBasedOn");
/** Description of benefits associated with the job. */
export const jobBenefits = /*#__PURE__*/ ns("jobBenefits");
/** Indicates the primary entity described in some page or other CreativeWork. */
export const mainEntity = /*#__PURE__*/ ns("mainEntity");
/** Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href="/docs/datamodel.html#mainEntityBackground">background notes</a> for details. */
export const mainEntityOfPage = /*#__PURE__*/ ns("mainEntityOfPage");
/** A pointer to products or services offered by the organization or person. */
export const makesOffer = /*#__PURE__*/ ns("makesOffer");
/** A pointer to the organization or person making the offer. */
export const offeredBy = /*#__PURE__*/ ns("offeredBy");
/** A parent of this person. */
export const parent = /*#__PURE__*/ ns("parent");
/** The series to which this episode or season belongs. */
export const partOfSeries = /*#__PURE__*/ ns("partOfSeries");
/** The date that payment is due. */
export const paymentDueDate = /*#__PURE__*/ ns("paymentDueDate");
/** The length of time it takes to perform instructions or a direction (not including time to prepare the supplies), in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>. */
export const performTime = /*#__PURE__*/ ns("performTime");
/** A performer at the event&#x2014;for example, a presenter, musician, musical group or actor. */
export const performer = /*#__PURE__*/ ns("performer");
/** A photograph of this place. */
export const photo = /*#__PURE__*/ ns("photo");
/** The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller. */
export const provider = /*#__PURE__*/ ns("provider");
/** The BroadcastService offered on this channel. */
export const providesBroadcastService = /*#__PURE__*/ ns("providesBroadcastService");
/** A single ingredient used in the recipe, e.g. sugar, flour or garlic. */
export const recipeIngredient = /*#__PURE__*/ ns("recipeIngredient");
/** An audio recording of the work. */
export const recordedAs = /*#__PURE__*/ ns("recordedAs");
/** The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event. */
export const recordedAt = /*#__PURE__*/ ns("recordedAt");
/** The CreativeWork that captured all or part of this Event. */
export const recordedIn = /*#__PURE__*/ ns("recordedIn");
/** The composition this track is a recording of. */
export const recordingOf = /*#__PURE__*/ ns("recordingOf");
/** The album this is a release of. */
export const releaseOf = /*#__PURE__*/ ns("releaseOf");
/** A review of the item. */
export const review = /*#__PURE__*/ ns("review");
/** A role played, performed or filled by a person or organization. For example, the team of creators for a comic book might fill the roles named 'inker', 'penciller', and 'letterer'; or an athlete in a SportsTeam might play in the position named 'Quarterback'. */
export const roleName = /*#__PURE__*/ ns("roleName");
/** Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0). */
export const runtimePlatform = /*#__PURE__*/ ns("runtimePlatform");
/** A season in a media series. */
export const season = /*#__PURE__*/ ns("season");
/** The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer. */
export const serialNumber = /*#__PURE__*/ ns("serialNumber");
/** The geographic area where the service is provided. */
export const serviceArea = /*#__PURE__*/ ns("serviceArea");
/** The tangible thing generated by the service, e.g. a passport, permit, etc. */
export const serviceOutput = /*#__PURE__*/ ns("serviceOutput");
/** A sibling of the person. */
export const sibling = /*#__PURE__*/ ns("sibling");
/** One of the more significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most. */
export const significantLink = /*#__PURE__*/ ns("significantLink");
/** Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime). */
export const softwareRequirements = /*#__PURE__*/ ns("softwareRequirements");
/** A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event. */
export const sponsor = /*#__PURE__*/ ns("sponsor");
/** A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property. */
export const subOrganization = /*#__PURE__*/ ns("subOrganization");
/** A CreativeWork or Event about this Thing. */
export const subjectOf = /*#__PURE__*/ ns("subjectOf");
/** An answer (possibly one of several, possibly incorrect) to a Question, e.g. on a Question/Answer site. */
export const suggestedAnswer = /*#__PURE__*/ ns("suggestedAnswer");
/** An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent. */
export const superEvent = /*#__PURE__*/ ns("superEvent");
/** A sub property of object. The collection target of the action. */
export const targetCollection = /*#__PURE__*/ ns("targetCollection");
/** The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in <a href="https://en.wikipedia.org/wiki/ISO_8601#Time_intervals">ISO 8601 time interval format</a>. In
      the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written "2011/2012"). Other forms of content e.g. ScholarlyArticle, Book, TVSeries or TVEpisode may indicate their temporalCoverage in broader terms - textually or via well-known URL.
      Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via "1939/1945".<br/><br/>

Open-ended date ranges can be written with ".." in place of the end date. For example, "2015-11/.." indicates a range beginning in November 2015 and with no specified final date. This is tentative and might be updated in future when ISO 8601 is officially updated. */
export const temporalCoverage = /*#__PURE__*/ ns("temporalCoverage");
/** A music recording (track)&#x2014;usually a single song. If an ItemList is given, the list should contain items of type MusicRecording. */
export const track = /*#__PURE__*/ ns("track");
/** The warranty promise(s) included in the offer. */
export const warranty = /*#__PURE__*/ ns("warranty");
/** Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook. */
export const workExample = /*#__PURE__*/ ns("workExample");
/** The quantity that results by performing instructions. For example, a paper airplane, 10 personalized candles. */
export const schemayield = /*#__PURE__*/ ns("yield");
/** The subject matter of the content. */
export const about = /*#__PURE__*/ ns("about");
/** A competitor in a sports event. */
export const competitor = /*#__PURE__*/ ns("competitor");
/** The basic containment relation between a place and one that contains it. */
export const containedInPlace = /*#__PURE__*/ ns("containedInPlace");
/** A media object that encodes this CreativeWork. This property is a synonym for associatedMedia. */
export const encoding = /*#__PURE__*/ ns("encoding");
/** A URL to a map of the place. */
export const hasMap = /*#__PURE__*/ ns("hasMap");
/** An image of the item. This can be a <a class="localLink" href="http://schema.org/URL">URL</a> or a fully described <a class="localLink" href="http://schema.org/ImageObject">ImageObject</a>. */
export const image = /*#__PURE__*/ ns("image");
/** A material that something is made from, e.g. leather, wool, cotton, paper. */
export const material = /*#__PURE__*/ ns("material");
/** An Organization (or ProgramMembership) to which this Person or Organization belongs. */
export const memberOf = /*#__PURE__*/ ns("memberOf");
/** The larger organization that this organization is a <a class="localLink" href="http://schema.org/subOrganization">subOrganization</a> of, if any. */
export const parentOrganization = /*#__PURE__*/ ns("parentOrganization");
/** The result produced in the action. e.g. John wrote <em>a book</em>. */
export const result = /*#__PURE__*/ ns("result");
/** An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider. */
export const seller = /*#__PURE__*/ ns("seller");
/** A single step item (as HowToStep, text, document, video, etc.) or a HowToSection. */
export const step = /*#__PURE__*/ ns("step");
/** An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference. */
export const subEvent = /*#__PURE__*/ ns("subEvent");
/** A sub-property of instrument. A supply consumed when performing instructions or a direction. */
export const supply = /*#__PURE__*/ ns("supply");
/** A work featured in some event, e.g. exhibited in an ExhibitionEvent.
       Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent). */
export const workFeatured = /*#__PURE__*/ ns("workFeatured");
/** The geographic area where a service or offered item is provided. */
export const areaServed = /*#__PURE__*/ ns("areaServed");
/** A data catalog which contains this dataset. */
export const includedInDataCatalog = /*#__PURE__*/ ns("includedInDataCatalog");
/** A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals. */
export const member = /*#__PURE__*/ ns("member");
/** A sub property of participant. The participant who is at the receiving end of the action. */
export const recipient = /*#__PURE__*/ ns("recipient");
/** Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense). */
export const hasPart = /*#__PURE__*/ ns("hasPart");
/** Indicates an item or CreativeWork that this item, or CreativeWork (in some sense), is part of. */
export const isPartOf = /*#__PURE__*/ ns("isPartOf");
/** The position of an item in a series or sequence of items. */
export const position = /*#__PURE__*/ ns("position");
/** The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>. */
export const instrument = /*#__PURE__*/ ns("instrument");
/** The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>. */
export const object = /*#__PURE__*/ ns("object");
/** The location of for example where the event is happening, an organization is located, or where an action takes place. */
export const location = /*#__PURE__*/ ns("location");
/** Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>. */
export const participant = /*#__PURE__*/ ns("participant");
/** The identifier property represents any kind of identifier for any kind of <a class="localLink" href="http://schema.org/Thing">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href="/docs/datamodel.html#identifierBg">background notes</a> for more details. */
export const identifier = /*#__PURE__*/ ns("identifier");


/* Other terms */
/** An in-progress action (e.g, while watching the movie, or driving to a location). */
export const ActiveActionStatus = /*#__PURE__*/ ns("ActiveActionStatus");
/** AlbumRelease. */
export const AlbumRelease = /*#__PURE__*/ ns("AlbumRelease");
/** All-wheel Drive is a transmission layout where the engine drives all four wheels. */
export const AllWheelDriveConfiguration = /*#__PURE__*/ ns("AllWheelDriveConfiguration");
/** Book format: Audiobook. This is an enumerated value for use with the bookFormat property. There is also a type 'Audiobook' in the bib extension which includes Audiobook specific properties. */
export const AudiobookFormat = /*#__PURE__*/ ns("AudiobookFormat");
/** BroadcastRelease. */
export const BroadcastRelease = /*#__PURE__*/ ns("BroadcastRelease");
/** CDFormat. */
export const CDFormat = /*#__PURE__*/ ns("CDFormat");
/** CassetteFormat. */
export const CassetteFormat = /*#__PURE__*/ ns("CassetteFormat");
/** Play mode: CoOp. Co-operative games, where you play on the same team with friends. */
export const CoOp = /*#__PURE__*/ ns("CoOp");
/** Permission to add comments to the document. */
export const CommentPermission = /*#__PURE__*/ ns("CommentPermission");
/** CompilationAlbum. */
export const CompilationAlbum = /*#__PURE__*/ ns("CompilationAlbum");
/** An action that has already taken place. */
export const CompletedActionStatus = /*#__PURE__*/ ns("CompletedActionStatus");
/** DJMixAlbum. */
export const DJMixAlbum = /*#__PURE__*/ ns("DJMixAlbum");
/** DVDFormat. */
export const DVDFormat = /*#__PURE__*/ ns("DVDFormat");
/** Indicates that the item is damaged. */
export const DamagedCondition = /*#__PURE__*/ ns("DamagedCondition");
/** DemoAlbum. */
export const DemoAlbum = /*#__PURE__*/ ns("DemoAlbum");
/** A diet appropriate for people with diabetes. */
export const DiabeticDiet = /*#__PURE__*/ ns("DiabeticDiet");
/** DigitalAudioTapeFormat. */
export const DigitalAudioTapeFormat = /*#__PURE__*/ ns("DigitalAudioTapeFormat");
/** DigitalFormat. */
export const DigitalFormat = /*#__PURE__*/ ns("DigitalFormat");
/** Indicates that the item has been discontinued. */
export const Discontinued = /*#__PURE__*/ ns("Discontinued");
/** Book format: Ebook. */
export const EBook = /*#__PURE__*/ ns("EBook");
/** EPRelease. */
export const EPRelease = /*#__PURE__*/ ns("EPRelease");
/** The event has been cancelled. If the event has multiple startDate values, all are assumed to be cancelled. Either startDate or previousStartDate may be used to specify the event's cancelled date(s). */
export const EventCancelled = /*#__PURE__*/ ns("EventCancelled");
/** The event has been postponed and no new date has been set. The event's previousStartDate should be set. */
export const EventPostponed = /*#__PURE__*/ ns("EventPostponed");
/** The event has been rescheduled. The event's previousStartDate should be set to the old date and the startDate should be set to the event's new date. (If the event has been rescheduled multiple times, the previousStartDate property may be repeated). */
export const EventRescheduled = /*#__PURE__*/ ns("EventRescheduled");
/** The event is taking place or has taken place on the startDate as scheduled. Use of this value is optional, as it is assumed by default. */
export const EventScheduled = /*#__PURE__*/ ns("EventScheduled");
/** An action that failed to complete. The action's error property and the HTTP return code contain more information about the failure. */
export const FailedActionStatus = /*#__PURE__*/ ns("FailedActionStatus");
/** The boolean value false. */
export const False = /*#__PURE__*/ ns("False");
/** The female gender. */
export const Female = /*#__PURE__*/ ns("Female");
/** Four-wheel drive is a transmission layout where the engine primarily drives two wheels with a part-time four-wheel drive capability. */
export const FourWheelDriveConfiguration = /*#__PURE__*/ ns("FourWheelDriveConfiguration");
/** The day of the week between Thursday and Saturday. */
export const Friday = /*#__PURE__*/ ns("Friday");
/** Front-wheel drive is a transmission layout where the engine drives the front wheels. */
export const FrontWheelDriveConfiguration = /*#__PURE__*/ ns("FrontWheelDriveConfiguration");
/** A diet exclusive of gluten. */
export const GlutenFreeDiet = /*#__PURE__*/ ns("GlutenFreeDiet");
/** The airline boards by groups based on check-in time, priority, etc. */
export const GroupBoardingPolicy = /*#__PURE__*/ ns("GroupBoardingPolicy");
/** A diet conforming to Islamic dietary practices. */
export const HalalDiet = /*#__PURE__*/ ns("HalalDiet");
/** Book format: Hardcover. */
export const Hardcover = /*#__PURE__*/ ns("Hardcover");
/** Uses devices to support users with hearing impairments. */
export const HearingImpairedSupported = /*#__PURE__*/ ns("HearingImpairedSupported");
/** A diet conforming to Hindu dietary practices, in particular, beef-free. */
export const HinduDiet = /*#__PURE__*/ ns("HinduDiet");
/** Indicates that the item is in stock. */
export const InStock = /*#__PURE__*/ ns("InStock");
/** Indicates that the item is available only at physical locations. */
export const InStoreOnly = /*#__PURE__*/ ns("InStoreOnly");
/** An ItemList ordered with lower values listed first. */
export const ItemListOrderAscending = /*#__PURE__*/ ns("ItemListOrderAscending");
/** An ItemList ordered with higher values listed first. */
export const ItemListOrderDescending = /*#__PURE__*/ ns("ItemListOrderDescending");
/** An ItemList ordered with no explicit order. */
export const ItemListUnordered = /*#__PURE__*/ ns("ItemListUnordered");
/** A diet conforming to Jewish dietary practices. */
export const KosherDiet = /*#__PURE__*/ ns("KosherDiet");
/** LaserDiscFormat. */
export const LaserDiscFormat = /*#__PURE__*/ ns("LaserDiscFormat");
/** The steering position is on the left side of the vehicle (viewed from the main direction of driving). */
export const LeftHandDriving = /*#__PURE__*/ ns("LeftHandDriving");
/** Indicates that the item has limited availability. */
export const LimitedAvailability = /*#__PURE__*/ ns("LimitedAvailability");
/** LiveAlbum. */
export const LiveAlbum = /*#__PURE__*/ ns("LiveAlbum");
/** A diet focused on reduced calorie intake. */
export const LowCalorieDiet = /*#__PURE__*/ ns("LowCalorieDiet");
/** A diet focused on reduced fat and cholesterol intake. */
export const LowFatDiet = /*#__PURE__*/ ns("LowFatDiet");
/** A diet appropriate for people with lactose intolerance. */
export const LowLactoseDiet = /*#__PURE__*/ ns("LowLactoseDiet");
/** A diet focused on reduced sodium intake. */
export const LowSaltDiet = /*#__PURE__*/ ns("LowSaltDiet");
/** The male gender. */
export const Male = /*#__PURE__*/ ns("Male");
/** MixtapeAlbum. */
export const MixtapeAlbum = /*#__PURE__*/ ns("MixtapeAlbum");
/** The day of the week between Sunday and Tuesday. */
export const Monday = /*#__PURE__*/ ns("Monday");
/** Play mode: MultiPlayer. Requiring or allowing multiple human players to play simultaneously. */
export const MultiPlayer = /*#__PURE__*/ ns("MultiPlayer");
/** Indicates that the item is new. */
export const NewCondition = /*#__PURE__*/ ns("NewCondition");
/** Game server status: OfflinePermanently. Server is offline and not available. */
export const OfflinePermanently = /*#__PURE__*/ ns("OfflinePermanently");
/** Game server status: OfflineTemporarily. Server is offline now but it can be online soon. */
export const OfflineTemporarily = /*#__PURE__*/ ns("OfflineTemporarily");
/** A DeliveryMethod in which an item is collected on site, e.g. in a store or at a box office. */
export const OnSitePickup = /*#__PURE__*/ ns("OnSitePickup");
/** Game server status: Online. Server is available. */
export const Online = /*#__PURE__*/ ns("Online");
/** Game server status: OnlineFull. Server is online but unavailable. The maximum number of players has reached. */
export const OnlineFull = /*#__PURE__*/ ns("OnlineFull");
/** Indicates that the item is available only online. */
export const OnlineOnly = /*#__PURE__*/ ns("OnlineOnly");
/** OrderStatus representing cancellation of an order. */
export const OrderCancelled = /*#__PURE__*/ ns("OrderCancelled");
/** OrderStatus representing successful delivery of an order. */
export const OrderDelivered = /*#__PURE__*/ ns("OrderDelivered");
/** OrderStatus representing that an order is in transit. */
export const OrderInTransit = /*#__PURE__*/ ns("OrderInTransit");
/** OrderStatus representing that payment is due on an order. */
export const OrderPaymentDue = /*#__PURE__*/ ns("OrderPaymentDue");
/** OrderStatus representing availability of an order for pickup. */
export const OrderPickupAvailable = /*#__PURE__*/ ns("OrderPickupAvailable");
/** OrderStatus representing that there is a problem with the order. */
export const OrderProblem = /*#__PURE__*/ ns("OrderProblem");
/** OrderStatus representing that an order is being processed. */
export const OrderProcessing = /*#__PURE__*/ ns("OrderProcessing");
/** OrderStatus representing that an order has been returned. */
export const OrderReturned = /*#__PURE__*/ ns("OrderReturned");
/** Indicates that the item is out of stock. */
export const OutOfStock = /*#__PURE__*/ ns("OutOfStock");
/** Book format: Paperback. */
export const Paperback = /*#__PURE__*/ ns("Paperback");
/** A parking map. */
export const ParkingMap = /*#__PURE__*/ ns("ParkingMap");
/** An automatic payment system is in place and will be used. */
export const PaymentAutomaticallyApplied = /*#__PURE__*/ ns("PaymentAutomaticallyApplied");
/** The payment has been received and processed. */
export const PaymentComplete = /*#__PURE__*/ ns("PaymentComplete");
/** The payee received the payment, but it was declined for some reason. */
export const PaymentDeclined = /*#__PURE__*/ ns("PaymentDeclined");
/** The payment is due, but still within an acceptable time to be received. */
export const PaymentDue = /*#__PURE__*/ ns("PaymentDue");
/** The payment is due and considered late. */
export const PaymentPastDue = /*#__PURE__*/ ns("PaymentPastDue");
/** A description of an action that is supported. */
export const PotentialActionStatus = /*#__PURE__*/ ns("PotentialActionStatus");
/** Indicates that the item is available for pre-order, but will be delivered when generally available. */
export const PreOrder = /*#__PURE__*/ ns("PreOrder");
/** Indicates that the item is available for ordering and delivery before general availability. */
export const PreSale = /*#__PURE__*/ ns("PreSale");
/** This stands for any day that is a public holiday; it is a placeholder for all official public holidays in some particular location. While not technically a "day of the week", it can be used with <a class="localLink" href="http://schema.org/OpeningHoursSpecification">OpeningHoursSpecification</a>. In the context of an opening hours specification it can be used to indicate opening hours on public holidays, overriding general opening hours for the day of the week on which a public holiday occurs. */
export const PublicHolidays = /*#__PURE__*/ ns("PublicHolidays");
/** Permission to read or view the document. */
export const ReadPermission = /*#__PURE__*/ ns("ReadPermission");
/** Real-wheel drive is a transmission layout where the engine drives the rear wheels. */
export const RearWheelDriveConfiguration = /*#__PURE__*/ ns("RearWheelDriveConfiguration");
/** Indicates that the item is refurbished. */
export const RefurbishedCondition = /*#__PURE__*/ ns("RefurbishedCondition");
/** RemixAlbum. */
export const RemixAlbum = /*#__PURE__*/ ns("RemixAlbum");
/** Researchers. */
export const Researcher = /*#__PURE__*/ ns("Researcher");
/** The status for a previously confirmed reservation that is now cancelled. */
export const ReservationCancelled = /*#__PURE__*/ ns("ReservationCancelled");
/** The status of a confirmed reservation. */
export const ReservationConfirmed = /*#__PURE__*/ ns("ReservationConfirmed");
/** The status of a reservation on hold pending an update like credit card number or flight changes. */
export const ReservationHold = /*#__PURE__*/ ns("ReservationHold");
/** The status of a reservation when a request has been sent, but not confirmed. */
export const ReservationPending = /*#__PURE__*/ ns("ReservationPending");
/** The steering position is on the right side of the vehicle (viewed from the main direction of driving). */
export const RightHandDriving = /*#__PURE__*/ ns("RightHandDriving");
/** The invitee may or may not attend. */
export const RsvpResponseMaybe = /*#__PURE__*/ ns("RsvpResponseMaybe");
/** The invitee will not attend. */
export const RsvpResponseNo = /*#__PURE__*/ ns("RsvpResponseNo");
/** The invitee will attend. */
export const RsvpResponseYes = /*#__PURE__*/ ns("RsvpResponseYes");
/** The day of the week between Friday and Sunday. */
export const Saturday = /*#__PURE__*/ ns("Saturday");
/** A seating map. */
export const SeatingMap = /*#__PURE__*/ ns("SeatingMap");
/** Play mode: SinglePlayer. Which is played by a lone player. */
export const SinglePlayer = /*#__PURE__*/ ns("SinglePlayer");
/** SingleRelease. */
export const SingleRelease = /*#__PURE__*/ ns("SingleRelease");
/** Indicates that the item has sold out. */
export const SoldOut = /*#__PURE__*/ ns("SoldOut");
/** SoundtrackAlbum. */
export const SoundtrackAlbum = /*#__PURE__*/ ns("SoundtrackAlbum");
/** SpokenWordAlbum. */
export const SpokenWordAlbum = /*#__PURE__*/ ns("SpokenWordAlbum");
/** StudioAlbum. */
export const StudioAlbum = /*#__PURE__*/ ns("StudioAlbum");
/** The day of the week between Saturday and Monday. */
export const Sunday = /*#__PURE__*/ ns("Sunday");
/** The day of the week between Wednesday and Friday. */
export const Thursday = /*#__PURE__*/ ns("Thursday");
/** The associated telephone number is toll free. */
export const TollFree = /*#__PURE__*/ ns("TollFree");
/** A transit map. */
export const TransitMap = /*#__PURE__*/ ns("TransitMap");
/** The boolean value true. */
export const True = /*#__PURE__*/ ns("True");
/** The day of the week between Monday and Wednesday. */
export const Tuesday = /*#__PURE__*/ ns("Tuesday");
/** Indicates that the item is used. */
export const UsedCondition = /*#__PURE__*/ ns("UsedCondition");
/** A diet exclusive of all animal products. */
export const VeganDiet = /*#__PURE__*/ ns("VeganDiet");
/** A diet exclusive of animal meat. */
export const VegetarianDiet = /*#__PURE__*/ ns("VegetarianDiet");
/** A venue map (e.g. for malls, auditoriums, museums, etc.). */
export const VenueMap = /*#__PURE__*/ ns("VenueMap");
/** VinylFormat. */
export const VinylFormat = /*#__PURE__*/ ns("VinylFormat");
/** The day of the week between Tuesday and Thursday. */
export const Wednesday = /*#__PURE__*/ ns("Wednesday");
/** Permission to write or edit the document. */
export const WritePermission = /*#__PURE__*/ ns("WritePermission");
/** The airline boards by zones of the plane. */
export const ZoneBoardingPolicy = /*#__PURE__*/ ns("ZoneBoardingPolicy");
