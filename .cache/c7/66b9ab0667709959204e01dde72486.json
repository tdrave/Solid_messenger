{"id":"node_modules/@inrupt/solid-client-authn-core/dist/storage/__mocks__/StorageUtility.js","dependencies":[{"name":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-core/dist/storage/__mocks__/StorageUtility.js.map","includedInParent":true,"mtime":1652099631160},{"name":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-core/src/storage/__mocks__/StorageUtility.ts","includedInParent":true,"mtime":1652099631256},{"name":"/Users/tdrave/demo-solid-app/package.json","includedInParent":true,"mtime":1652099771977},{"name":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-core/package.json","includedInParent":true,"mtime":1652099631124},{"name":"../..","loc":{"line":4,"column":20,"index":221},"parent":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-core/dist/storage/__mocks__/StorageUtility.js","resolved":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-core/dist/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mockStorageUtility = exports.mockStorage = exports.StorageUtilityMock = exports.StorageUtilityGetResponse = void 0;\nconst __1 = require(\"../..\");\nexports.StorageUtilityGetResponse = \"getResponse\";\nexports.StorageUtilityMock = {\n    get: async (key, options) => exports.StorageUtilityGetResponse,\n    set: async (key, value) => {\n    },\n    delete: async (key) => {\n    },\n    getForUser: async (userId, key, options) => exports.StorageUtilityGetResponse,\n    setForUser: async (userId, values, options) => {\n    },\n    deleteForUser: async (userId, key, options) => {\n    },\n    deleteAllUserData: async (userId, options) => {\n    },\n    storeResourceServerSessionInfo: async (_webId, _resourceServerIri, _sessionExpires) => {\n    },\n    clearResourceServerSessionInfo: async (_resourceServerIri) => {\n    },\n};\nconst mockStorage = (stored) => {\n    const store = stored;\n    return {\n        get: async (key) => {\n            if (store[key] === undefined) {\n                return undefined;\n            }\n            if (typeof store[key] === \"string\") {\n                return store[key];\n            }\n            return JSON.stringify(store[key]);\n        },\n        set: async (key, value) => {\n            store[key] = value;\n        },\n        delete: async (key) => {\n            delete store[key];\n        },\n    };\n};\nexports.mockStorage = mockStorage;\nconst mockStorageUtility = (stored, isSecure = false) => {\n    if (isSecure) {\n        return new __1.StorageUtility((0, exports.mockStorage)(stored), (0, exports.mockStorage)({}));\n    }\n    return new __1.StorageUtility((0, exports.mockStorage)({}), (0, exports.mockStorage)(stored));\n};\nexports.mockStorageUtility = mockStorageUtility;\n"},"sourceMaps":{"js":{"version":3,"file":"StorageUtility.js","sourceRoot":"","sources":["../../../src/storage/__mocks__/StorageUtility.ts"],"names":[],"mappings":";;;AAqBA,6BAAiD;AAGpC,QAAA,yBAAyB,GAAG,aAAa,CAAC;AAE1C,QAAA,kBAAkB,GAAoB;IAEjD,GAAG,EAAE,KAAK,EAAE,GAAW,EAAE,OAAmC,EAAE,EAAE,CAC9D,iCAAyB;IAC3B,GAAG,EAAE,KAAK,EAAE,GAAW,EAAE,KAAa,EAAE,EAAE;IAE1C,CAAC;IACD,MAAM,EAAE,KAAK,EAAE,GAAW,EAAE,EAAE;IAE9B,CAAC;IACD,UAAU,EAAE,KAAK,EACf,MAAc,EACd,GAAW,EACX,OAAqD,EACrD,EAAE,CAAC,iCAAyB;IAC9B,UAAU,EAAE,KAAK,EACf,MAAc,EACd,MAA8B,EAC9B,OAA8B,EAC9B,EAAE;IAEJ,CAAC;IACD,aAAa,EAAE,KAAK,EAClB,MAAc,EACd,GAAW,EACX,OAA8B,EAC9B,EAAE;IAEJ,CAAC;IACD,iBAAiB,EAAE,KAAK,EAAE,MAAc,EAAE,OAA8B,EAAE,EAAE;IAE5E,CAAC;IAED,8BAA8B,EAAE,KAAK,EACnC,MAAc,EACd,kBAA0B,EAC1B,eAAuB,EACR,EAAE;IAEnB,CAAC;IACD,8BAA8B,EAAE,KAAK,EACnC,kBAA0B,EACX,EAAE;IAEnB,CAAC;CACF,CAAC;AAEK,MAAM,WAAW,GAAG,CACzB,MAAuD,EAC7C,EAAE;IACZ,MAAM,KAAK,GAAG,MAAM,CAAC;IACrB,OAAO;QACL,GAAG,EAAE,KAAK,EAAE,GAAW,EAA+B,EAAE;YACtD,IAAI,KAAK,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;gBAC5B,OAAO,SAAS,CAAC;aAClB;YACD,IAAI,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;gBAClC,OAAO,KAAK,CAAC,GAAG,CAAW,CAAC;aAC7B;YACD,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QACpC,CAAC;QACD,GAAG,EAAE,KAAK,EAAE,GAAW,EAAE,KAAa,EAAiB,EAAE;YACvD,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACrB,CAAC;QACD,MAAM,EAAE,KAAK,EAAE,GAAW,EAAiB,EAAE;YAC3C,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC;QACpB,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AArBW,QAAA,WAAW,eAqBtB;AAEK,MAAM,kBAAkB,GAAG,CAChC,MAAuD,EACvD,QAAQ,GAAG,KAAK,EACC,EAAE;IACnB,IAAI,QAAQ,EAAE;QACZ,OAAO,IAAI,kBAAc,CAAC,IAAA,mBAAW,EAAC,MAAM,CAAC,EAAE,IAAA,mBAAW,EAAC,EAAE,CAAC,CAAC,CAAC;KACjE;IACD,OAAO,IAAI,kBAAc,CAAC,IAAA,mBAAW,EAAC,EAAE,CAAC,EAAE,IAAA,mBAAW,EAAC,MAAM,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC;AARW,QAAA,kBAAkB,sBAQ7B","sourcesContent":["/*\n * Copyright 2022 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { IStorage, StorageUtility } from \"../..\";\nimport IStorageUtility from \"../IStorageUtility\";\n\nexport const StorageUtilityGetResponse = \"getResponse\";\n\nexport const StorageUtilityMock: IStorageUtility = {\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  get: async (key: string, options?: { errorIfNull?: boolean }) =>\n    StorageUtilityGetResponse,\n  set: async (key: string, value: string) => {\n    /* do nothing */\n  },\n  delete: async (key: string) => {\n    /* do nothing */\n  },\n  getForUser: async (\n    userId: string,\n    key: string,\n    options?: { errorIfNull?: boolean; secure?: boolean }\n  ) => StorageUtilityGetResponse,\n  setForUser: async (\n    userId: string,\n    values: Record<string, string>,\n    options?: { secure?: boolean }\n  ) => {\n    /* do nothing */\n  },\n  deleteForUser: async (\n    userId: string,\n    key: string,\n    options?: { secure?: boolean }\n  ) => {\n    /* do nothing */\n  },\n  deleteAllUserData: async (userId: string, options?: { secure?: boolean }) => {\n    /* do nothing */\n  },\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n  storeResourceServerSessionInfo: async (\n    _webId: string,\n    _resourceServerIri: string,\n    _sessionExpires: number\n  ): Promise<void> => {\n    // Do nothing\n  },\n  clearResourceServerSessionInfo: async (\n    _resourceServerIri: string\n  ): Promise<void> => {\n    // Do nothing\n  },\n};\n\nexport const mockStorage = (\n  stored: Record<string, string | Record<string, string>>\n): IStorage => {\n  const store = stored;\n  return {\n    get: async (key: string): Promise<string | undefined> => {\n      if (store[key] === undefined) {\n        return undefined;\n      }\n      if (typeof store[key] === \"string\") {\n        return store[key] as string;\n      }\n      return JSON.stringify(store[key]);\n    },\n    set: async (key: string, value: string): Promise<void> => {\n      store[key] = value;\n    },\n    delete: async (key: string): Promise<void> => {\n      delete store[key];\n    },\n  };\n};\n\nexport const mockStorageUtility = (\n  stored: Record<string, string | Record<string, string>>,\n  isSecure = false\n): IStorageUtility => {\n  if (isSecure) {\n    return new StorageUtility(mockStorage(stored), mockStorage({}));\n  }\n  return new StorageUtility(mockStorage({}), mockStorage(stored));\n};\n"]}},"error":null,"hash":"effdbe1932226dbb95d7a66e2b8185ce","cacheData":{"env":{}}}