import { TermType } from "./types";
export function isTerm(obj) {
    return typeof obj === "object" && obj !== null && "termType" in obj;
}
export function isNamedNode(obj) {
    return isTerm(obj) && obj.termType === TermType.NamedNode;
}
export function isBlankNode(obj) {
    return isTerm(obj) && obj.termType === TermType.BlankNode;
}
export function isLiteral(obj) {
    return isTerm(obj) && obj.termType === TermType.Literal;
}
const TermTypes = [
    TermType.NamedNode.toString(),
    TermType.BlankNode.toString(),
    TermType.Literal.toString()
];
export function isSomeTerm(obj) {
    return isTerm(obj) && TermTypes.includes(obj.termType) === true;
}
const NodeTypes = [TermType.NamedNode.toString(), TermType.BlankNode.toString()];
export function isNode(obj) {
    return isTerm(obj) && NodeTypes.includes(obj.termType) === true;
}
export function isQuad(obj) {
    return typeof obj === "object" && obj !== null && "subject" in obj;
}
export function doc(node) {
    if (node.value.indexOf('#') < 0) {
        return node.value;
    }
    else {
        return node.value.split('#')[0];
    }
}
