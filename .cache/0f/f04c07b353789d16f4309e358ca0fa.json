{"id":"node_modules/@inrupt/solid-client-authn-browser/dist/util/urlPath.js","dependencies":[{"name":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-browser/dist/util/urlPath.js.map","includedInParent":true,"mtime":1652099631559},{"name":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-browser/src/util/urlPath.ts","includedInParent":true,"mtime":1652099631844},{"name":"/Users/tdrave/demo-solid-app/package.json","includedInParent":true,"mtime":1652099771977},{"name":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-browser/package.json","includedInParent":true,"mtime":1652099631546}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.appendToUrlPathname = void 0;\nfunction appendToUrlPathname(url, append) {\n    const parsedUrl = new URL(url);\n    const path = parsedUrl.pathname;\n    parsedUrl.pathname = `${path}${path.endsWith(\"/\") ? \"\" : \"/\"}${append.startsWith(\"/\") ? append.substring(1) : append}`;\n    return parsedUrl.toString();\n}\nexports.appendToUrlPathname = appendToUrlPathname;\n"},"sourceMaps":{"js":{"version":3,"file":"urlPath.js","sourceRoot":"","sources":["../../src/util/urlPath.ts"],"names":[],"mappings":";;;AAgCA,SAAgB,mBAAmB,CAAC,GAAW,EAAE,MAAc;IAC7D,MAAM,SAAS,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/B,MAAM,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC;IAChC,SAAS,CAAC,QAAQ,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAC1D,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MACjD,EAAE,CAAC;IAEH,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC;AAC9B,CAAC;AARD,kDAQC","sourcesContent":["/*\n * Copyright 2022 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Utility that appends the specified value to end of the specified URL's path.\n *\n * @param url  the URL to whose path we append the specified value\n * @param append  the value to append to the URL's path\n */\nexport function appendToUrlPathname(url: string, append: string): string {\n  const parsedUrl = new URL(url);\n  const path = parsedUrl.pathname;\n  parsedUrl.pathname = `${path}${path.endsWith(\"/\") ? \"\" : \"/\"}${\n    append.startsWith(\"/\") ? append.substring(1) : append\n  }`;\n\n  return parsedUrl.toString();\n}\n"]}},"error":null,"hash":"138832c7b10e41ab2782d9f05a3fef10","cacheData":{"env":{}}}