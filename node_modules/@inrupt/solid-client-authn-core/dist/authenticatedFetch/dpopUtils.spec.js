"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const globals_1 = require("@jest/globals");
const jose_1 = require("jose");
const dpopUtils_1 = require("./dpopUtils");
let publicKey;
let privateKey;
const mockJwk = async () => {
    if (typeof publicKey === "undefined" || typeof privateKey === "undefined") {
        const generatedPair = await (0, jose_1.generateKeyPair)("ES256");
        publicKey = generatedPair.publicKey;
        privateKey = generatedPair.privateKey;
    }
    return {
        publicKey,
        privateKey,
    };
};
const mockKeyPair = async () => {
    const { privateKey: prvt, publicKey: pblc } = await mockJwk();
    const dpopKeyPair = {
        privateKey: prvt,
        publicKey: await (0, jose_1.exportJWK)(pblc),
    };
    dpopKeyPair.publicKey.alg = "ES256";
    return dpopKeyPair;
};
(0, globals_1.describe)("createDpopHeader", () => {
    (0, globals_1.it)("creates a JWT with 'htm', 'htu' and 'jti' claims in the payload", async () => {
        const header = await (0, dpopUtils_1.createDpopHeader)("https://some.resource", "GET", await mockKeyPair());
        const { payload } = await (0, jose_1.jwtVerify)(header, (await mockJwk()).publicKey);
        (0, globals_1.expect)(payload.htm).toBe("GET");
        (0, globals_1.expect)(payload.jti).toBeDefined();
        (0, globals_1.expect)(payload.htu).toBe("https://some.resource/");
    });
    (0, globals_1.it)("creates a JWT with 'htu' that needs to be normalized", async () => {
        const header = await (0, dpopUtils_1.createDpopHeader)("https://user:pass@some.resource/?query#hash", "GET", await mockKeyPair());
        const { payload } = await (0, jose_1.jwtVerify)(header, (await mockJwk()).publicKey);
        (0, globals_1.expect)(payload.htm).toBe("GET");
        (0, globals_1.expect)(payload.jti).toBeDefined();
        (0, globals_1.expect)(payload.htu).toBe("https://some.resource/");
    });
    (0, globals_1.it)("creates a JWT with the appropriate protected header", async () => {
        const header = await (0, dpopUtils_1.createDpopHeader)("https://some.resource", "GET", await mockKeyPair());
        const { protectedHeader } = await (0, jose_1.jwtVerify)(header, (await mockJwk()).publicKey);
        (0, globals_1.expect)(protectedHeader.alg).toBe("ES256");
        (0, globals_1.expect)(protectedHeader.typ).toBe("dpop+jwt");
        (0, globals_1.expect)(protectedHeader.jwk).toEqual((await mockKeyPair()).publicKey);
    });
});
(0, globals_1.describe)("generateDpopKeyPair", () => {
    (0, globals_1.it)("generates a public, private key pair", async () => {
        const keyPair = await (0, dpopUtils_1.generateDpopKeyPair)();
        (0, globals_1.expect)(keyPair.publicKey).toBeDefined();
        (0, globals_1.expect)(keyPair.privateKey).toBeDefined();
        (0, globals_1.expect)(keyPair.publicKey.alg).toBe("ES256");
    });
});
//# sourceMappingURL=dpopUtils.spec.js.map