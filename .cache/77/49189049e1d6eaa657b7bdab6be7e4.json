{"id":"node_modules/@inrupt/solid-client-authn-browser/dist/defaultSession.js","dependencies":[{"name":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-browser/dist/defaultSession.js.map","includedInParent":true,"mtime":1652099631554},{"name":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-browser/src/defaultSession.ts","includedInParent":true,"mtime":1652099631797},{"name":"/Users/tdrave/demo-solid-app/package.json","includedInParent":true,"mtime":1652099771977},{"name":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-browser/package.json","includedInParent":true,"mtime":1652099631546},{"name":"./Session","loc":{"line":4,"column":26,"index":285},"parent":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-browser/dist/defaultSession.js","resolved":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-browser/dist/Session.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onSessionRestore = exports.onLogout = exports.onLogin = exports.handleIncomingRedirect = exports.logout = exports.login = exports.fetch = exports.getDefaultSession = void 0;\nconst Session_1 = require(\"./Session\");\nlet defaultSession;\nfunction getDefaultSession() {\n    if (typeof defaultSession === \"undefined\") {\n        defaultSession = new Session_1.Session();\n    }\n    return defaultSession;\n}\nexports.getDefaultSession = getDefaultSession;\nconst fetch = (...args) => {\n    const session = getDefaultSession();\n    return session.fetch(...args);\n};\nexports.fetch = fetch;\nconst login = (...args) => {\n    const session = getDefaultSession();\n    return session.login(...args);\n};\nexports.login = login;\nconst logout = (...args) => {\n    const session = getDefaultSession();\n    return session.logout(...args);\n};\nexports.logout = logout;\nconst handleIncomingRedirect = (...args) => {\n    const session = getDefaultSession();\n    return session.handleIncomingRedirect(...args);\n};\nexports.handleIncomingRedirect = handleIncomingRedirect;\nconst onLogin = (...args) => {\n    const session = getDefaultSession();\n    return session.onLogin(...args);\n};\nexports.onLogin = onLogin;\nconst onLogout = (...args) => {\n    const session = getDefaultSession();\n    return session.onLogout(...args);\n};\nexports.onLogout = onLogout;\nconst onSessionRestore = (...args) => {\n    const session = getDefaultSession();\n    return session.onSessionRestore(...args);\n};\nexports.onSessionRestore = onSessionRestore;\n"},"sourceMaps":{"js":{"version":3,"file":"defaultSession.js","sourceRoot":"","sources":["../src/defaultSession.ts"],"names":[],"mappings":";;;AAqBA,uCAAoC;AAEpC,IAAI,cAAuB,CAAC;AAY5B,SAAgB,iBAAiB;IAC/B,IAAI,OAAO,cAAc,KAAK,WAAW,EAAE;QACzC,cAAc,GAAG,IAAI,iBAAO,EAAE,CAAC;KAChC;IACD,OAAO,cAAc,CAAC;AACxB,CAAC;AALD,8CAKC;AAUM,MAAM,KAAK,GAAqB,CAAC,GAAG,IAAI,EAAE,EAAE;IACjD,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;IACpC,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;AAChC,CAAC,CAAC;AAHW,QAAA,KAAK,SAGhB;AASK,MAAM,KAAK,GAAqB,CAAC,GAAG,IAAI,EAAE,EAAE;IACjD,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;IACpC,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;AAChC,CAAC,CAAC;AAHW,QAAA,KAAK,SAGhB;AAQK,MAAM,MAAM,GAAsB,CAAC,GAAG,IAAI,EAAE,EAAE;IACnD,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;IACpC,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC;AACjC,CAAC,CAAC;AAHW,QAAA,MAAM,UAGjB;AAQK,MAAM,sBAAsB,GAAsC,CACvE,GAAG,IAAI,EACP,EAAE;IACF,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;IACpC,OAAO,OAAO,CAAC,sBAAsB,CAAC,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC;AALW,QAAA,sBAAsB,0BAKjC;AAUK,MAAM,OAAO,GAAuB,CAAC,GAAG,IAAI,EAAE,EAAE;IACrD,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;IACpC,OAAO,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;AAClC,CAAC,CAAC;AAHW,QAAA,OAAO,WAGlB;AAQK,MAAM,QAAQ,GAAwB,CAAC,GAAG,IAAI,EAAE,EAAE;IACvD,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;IACpC,OAAO,OAAO,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC;AACnC,CAAC,CAAC;AAHW,QAAA,QAAQ,YAGnB;AAQK,MAAM,gBAAgB,GAAgC,CAAC,GAAG,IAAI,EAAE,EAAE;IACvE,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;IACpC,OAAO,OAAO,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,CAAC;AAC3C,CAAC,CAAC;AAHW,QAAA,gBAAgB,oBAG3B","sourcesContent":["/*\n * Copyright 2022 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Session } from \"./Session\";\n\nlet defaultSession: Session;\n\n/**\n * Obtain the {@link Session} used when not explicitly instantiating one yourself.\n *\n * When using the top-level exports {@link fetch}, {@link login}, {@link logout},\n * {@link handleIncomingRedirect}, {@link onLogin} and {@link onLogout}, these apply to an\n * implicitly-instantiated {@link Session}.\n * This function returns a reference to that Session in order to obtain e.g. the current user's\n * WebID.\n * @since 1.3.0\n */\nexport function getDefaultSession(): Session {\n  if (typeof defaultSession === \"undefined\") {\n    defaultSession = new Session();\n  }\n  return defaultSession;\n}\n\n/**\n * This function's signature is equal to `window.fetch`, but if the current user is authenticated\n * (see [[login]] and [[handleIncomingRedirect]]), requests made using it will include that user's\n * credentials. If not, this will behave just like the regular `window.fetch`.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch}\n * @since 1.3.0\n */\nexport const fetch: Session[\"fetch\"] = (...args) => {\n  const session = getDefaultSession();\n  return session.fetch(...args);\n};\n\n/**\n * Triggers the login process. Note that this method will redirect the user away from your app.\n *\n * @param options Parameter to customize the login behaviour. In particular, two options are mandatory: `options.oidcIssuer`, the user's identity provider, and `options.redirectUrl`, the URL to which the user will be redirected after logging in their identity provider.\n * @returns This method should redirect the user away from the app: it does not return anything. The login process is completed by [[handleIncomingRedirect]].\n * @since 1.3.0\n */\nexport const login: Session[\"login\"] = (...args) => {\n  const session = getDefaultSession();\n  return session.login(...args);\n};\n\n/**\n * Logs the user out of the application. This does not log the user out of their\n * Solid identity provider, and should not redirect the user away.\n *\n * @since 1.3.0\n */\nexport const logout: Session[\"logout\"] = (...args) => {\n  const session = getDefaultSession();\n  return session.logout(...args);\n};\n\n/**\n * Completes the login process by processing the information provided by the Solid identity provider through redirect.\n *\n * @param url The URL of the page handling the redirect, including the query parameters â€” these contain the information to process the login.\n * @since 1.3.0\n */\nexport const handleIncomingRedirect: Session[\"handleIncomingRedirect\"] = (\n  ...args\n) => {\n  const session = getDefaultSession();\n  return session.handleIncomingRedirect(...args);\n};\n\n/**\n * Register a callback function to be called when a user completes login.\n *\n * The callback is called when {@link handleIncomingRedirect} completes successfully.\n * @since 1.3.0\n *\n * @param callback The function called when a user completes login.\n */\nexport const onLogin: Session[\"onLogin\"] = (...args) => {\n  const session = getDefaultSession();\n  return session.onLogin(...args);\n};\n\n/**\n * Register a callback function to be called when a user logs out:\n *\n * @param callback The function called when a user completes logout.\n * @since 1.3.0\n */\nexport const onLogout: Session[\"onLogout\"] = (...args) => {\n  const session = getDefaultSession();\n  return session.onLogout(...args);\n};\n\n/**\n * Register a callback function to be called when a session is restored:\n *\n * @param callback The function called when a session is restored.\n * @since 1.3.0\n */\nexport const onSessionRestore: Session[\"onSessionRestore\"] = (...args) => {\n  const session = getDefaultSession();\n  return session.onSessionRestore(...args);\n};\n"]}},"error":null,"hash":"211b30409f330c1049f8b61a8e159631","cacheData":{"env":{}}}