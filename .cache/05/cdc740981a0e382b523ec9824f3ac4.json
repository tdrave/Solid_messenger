{"id":"node_modules/@inrupt/solid-client-authn-browser/dist/storage/BrowserStorage.js","dependencies":[{"name":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-browser/dist/storage/BrowserStorage.js.map","includedInParent":true,"mtime":1652099631554},{"name":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-browser/src/storage/BrowserStorage.ts","includedInParent":true,"mtime":1652099631789},{"name":"/Users/tdrave/demo-solid-app/package.json","includedInParent":true,"mtime":1652099771977},{"name":"/Users/tdrave/demo-solid-app/node_modules/@inrupt/solid-client-authn-browser/package.json","includedInParent":true,"mtime":1652099631546}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BrowserStorage {\n    get storage() {\n        return window.localStorage;\n    }\n    async get(key) {\n        return this.storage.getItem(key) || undefined;\n    }\n    async set(key, value) {\n        this.storage.setItem(key, value);\n    }\n    async delete(key) {\n        this.storage.removeItem(key);\n    }\n}\nexports.default = BrowserStorage;\n"},"sourceMaps":{"js":{"version":3,"file":"BrowserStorage.js","sourceRoot":"","sources":["../../src/storage/BrowserStorage.ts"],"names":[],"mappings":";;AA+BA,MAAqB,cAAc;IACjC,IAAI,OAAO;QACT,OAAO,MAAM,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED,KAAK,CAAC,GAAG,CAAC,GAAW;QACnB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC;IAChD,CAAC;IAED,KAAK,CAAC,GAAG,CAAC,GAAW,EAAE,KAAa;QAClC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,GAAW;QACtB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;CACF;AAhBD,iCAgBC","sourcesContent":["/*\n * Copyright 2022 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport { IStorage } from \"@inrupt/solid-client-authn-core\";\n\n/**\n * @hidden\n */\nexport default class BrowserStorage implements IStorage {\n  get storage(): typeof window.localStorage {\n    return window.localStorage;\n  }\n\n  async get(key: string): Promise<string | undefined> {\n    return this.storage.getItem(key) || undefined;\n  }\n\n  async set(key: string, value: string): Promise<void> {\n    this.storage.setItem(key, value);\n  }\n\n  async delete(key: string): Promise<void> {\n    this.storage.removeItem(key);\n  }\n}\n"]}},"error":null,"hash":"fa6fb29f5d12ea4f1a614bdfcceefb2f","cacheData":{"env":{}}}